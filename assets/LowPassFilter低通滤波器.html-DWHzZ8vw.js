import{_ as n,c as a,e,o as p}from"./app-CHjqYunX.js";const t="/assets/4c9b912be58b922c7559d86b212c1a8e-1-C16WzDGs.jpg",l={};function o(i,s){return p(),a("div",null,s[0]||(s[0]=[e('<p>并且当 采样频率 dt = 时间常数T_f 时 滤波器表现为均值滤波</p><p><strong>图像理解低通滤波器</strong></p><p><img src="'+t+`" alt="alt text"></p><blockquote><p>所以这里的 T_f 似乎可以理解为过滤的频率</p></blockquote><h2 id="最简代码实现" tabindex="-1"><a class="header-anchor" href="#最简代码实现"><span>最简代码实现</span></a></h2><div class="language-cpp line-numbers-mode" data-highlighter="prismjs" data-ext="cpp" data-title="cpp"><pre><code><span class="line"><span class="token keyword">class</span> <span class="token class-name">LowPassFilter</span><span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">float</span> Tf<span class="token punctuation">,</span>y_prev<span class="token punctuation">;</span></span>
<span class="line">  <span class="token function">LowPassFilter</span><span class="token punctuation">(</span><span class="token keyword">float</span> tf<span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">      Tf <span class="token operator">=</span> tf<span class="token punctuation">;</span></span>
<span class="line">      y_prev <span class="token operator">=</span> <span class="token number">0.0f</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line">  <span class="token function">Filter</span><span class="token punctuation">(</span><span class="token keyword">float</span> x<span class="token punctuation">,</span><span class="token keyword">float</span> dt<span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">      <span class="token keyword">float</span> alpha <span class="token operator">=</span> Tf<span class="token operator">/</span><span class="token punctuation">(</span>Tf <span class="token operator">+</span> dt<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token keyword">float</span> y <span class="token operator">=</span> alpha <span class="token operator">*</span> y_prev <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token number">1.0f</span> <span class="token operator">-</span> alpha<span class="token punctuation">)</span> <span class="token operator">*</span> x<span class="token punctuation">;</span></span>
<span class="line">      y_prev <span class="token operator">=</span> y<span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="源代码实现" tabindex="-1"><a class="header-anchor" href="#源代码实现"><span>源代码实现</span></a></h2><div class="language-cpp line-numbers-mode" data-highlighter="prismjs" data-ext="cpp" data-title="cpp"><pre><code><span class="line"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&quot;lowpass_filter.h&quot;</span></span></span>
<span class="line"></span>
<span class="line"><span class="token class-name">LowPassFilter</span><span class="token double-colon punctuation">::</span><span class="token function">LowPassFilter</span><span class="token punctuation">(</span><span class="token keyword">float</span> time_constant<span class="token punctuation">)</span></span>
<span class="line">    <span class="token operator">:</span> <span class="token function">Tf</span><span class="token punctuation">(</span>time_constant<span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">,</span> <span class="token function">y_prev</span><span class="token punctuation">(</span><span class="token number">0.0f</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">{</span></span>
<span class="line">    timestamp_prev <span class="token operator">=</span> <span class="token function">_micros</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span class="token keyword">float</span> <span class="token class-name">LowPassFilter</span><span class="token double-colon punctuation">::</span><span class="token keyword">operator</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token keyword">float</span> x<span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">unsigned</span> <span class="token keyword">long</span> timestamp <span class="token operator">=</span> <span class="token function">_micros</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">float</span> dt <span class="token operator">=</span> <span class="token punctuation">(</span>timestamp <span class="token operator">-</span> timestamp_prev<span class="token punctuation">)</span><span class="token operator">*</span><span class="token number">1e-6f</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">(</span>dt <span class="token operator">&lt;</span> <span class="token number">0.0f</span> <span class="token punctuation">)</span> dt <span class="token operator">=</span> <span class="token number">1e-3f</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>dt <span class="token operator">&gt;</span> <span class="token number">0.3f</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        y_prev <span class="token operator">=</span> x<span class="token punctuation">;</span></span>
<span class="line">        timestamp_prev <span class="token operator">=</span> timestamp<span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">return</span> x<span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">float</span> alpha <span class="token operator">=</span> Tf<span class="token operator">/</span><span class="token punctuation">(</span>Tf <span class="token operator">+</span> dt<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">float</span> y <span class="token operator">=</span> alpha<span class="token operator">*</span>y_prev <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token number">1.0f</span> <span class="token operator">-</span> alpha<span class="token punctuation">)</span><span class="token operator">*</span>x<span class="token punctuation">;</span></span>
<span class="line">    y_prev <span class="token operator">=</span> y<span class="token punctuation">;</span></span>
<span class="line">    timestamp_prev <span class="token operator">=</span> timestamp<span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">return</span> y<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-cpp line-numbers-mode" data-highlighter="prismjs" data-ext="cpp" data-title="cpp"><pre><code><span class="line"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">ifndef</span> <span class="token expression">LOWPASS_FILTER_H</span></span></span>
<span class="line"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">LOWPASS_FILTER_H</span></span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&quot;time_utils.h&quot;</span></span></span>
<span class="line"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&quot;foc_utils.h&quot;</span></span></span>
<span class="line"></span>
<span class="line"><span class="token comment">/**</span>
<span class="line"> *  Low pass filter class</span>
<span class="line"> */</span></span>
<span class="line"><span class="token keyword">class</span> <span class="token class-name">LowPassFilter</span></span>
<span class="line"><span class="token punctuation">{</span></span>
<span class="line"><span class="token keyword">public</span><span class="token operator">:</span></span>
<span class="line">    <span class="token comment">/**</span>
<span class="line">     * @param Tf - Low pass filter time constant</span>
<span class="line">     */</span></span>
<span class="line">    <span class="token function">LowPassFilter</span><span class="token punctuation">(</span><span class="token keyword">float</span> Tf<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token operator">~</span><span class="token function">LowPassFilter</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token keyword">default</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">float</span> <span class="token keyword">operator</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token keyword">float</span> x<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">float</span> Tf<span class="token punctuation">;</span> <span class="token comment">//!&lt; Low pass filter time constant</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">protected</span><span class="token operator">:</span></span>
<span class="line">    <span class="token keyword">unsigned</span> <span class="token keyword">long</span> timestamp_prev<span class="token punctuation">;</span>  <span class="token comment">//!&lt; Last execution timestamp</span></span>
<span class="line">    <span class="token keyword">float</span> y_prev<span class="token punctuation">;</span> <span class="token comment">//!&lt; filtered value in previous execution step </span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">endif</span> <span class="token comment">// LOWPASS_FILTER_H</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,9)]))}const r=n(l,[["render",o],["__file","LowPassFilter低通滤波器.html.vue"]]),u=JSON.parse('{"path":"/%E7%94%B5%E5%AD%90/SimpleFOC%E6%BA%90%E7%A0%81%E9%98%85%E8%AF%BB%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/LowPassFilter%E4%BD%8E%E9%80%9A%E6%BB%A4%E6%B3%A2%E5%99%A8.html","title":"SimpleFOC源码阅读学习笔记：LowPassFilter低通滤波器","lang":"zh-CN","frontmatter":{"title":"SimpleFOC源码阅读学习笔记：LowPassFilter低通滤波器","shortTitle":"LowPassFilter低通滤波器","date":"2024-08-30T09:35:00.000Z","description":"原理 公式 KYn​​=Tf​+dtTf​​=KYn−1​+(1−K)Xn​​ 含义 Tf​是时间常数 dt是时间间隔 Xn​是本次输入 Yn​是本次滤波器输出 Yn−1​是上次滤波器输出 K为系数 K∈[0,1] dt越小，Yn​约接近于Yn−1​ dt越大，Yn​约接近于Xn​ K的实际意义 假设时间常数Tf​为1秒,观察dt取[0,9]时K的情况...","head":[["meta",{"property":"og:url","content":"https://dingdingdang.online/%E7%94%B5%E5%AD%90/SimpleFOC%E6%BA%90%E7%A0%81%E9%98%85%E8%AF%BB%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/LowPassFilter%E4%BD%8E%E9%80%9A%E6%BB%A4%E6%B3%A2%E5%99%A8.html"}],["meta",{"property":"og:site_name","content":"YiguiDing的Blog小站"}],["meta",{"property":"og:title","content":"SimpleFOC源码阅读学习笔记：LowPassFilter低通滤波器"}],["meta",{"property":"og:description","content":"原理 公式 KYn​​=Tf​+dtTf​​=KYn−1​+(1−K)Xn​​ 含义 Tf​是时间常数 dt是时间间隔 Xn​是本次输入 Yn​是本次滤波器输出 Yn−1​是上次滤波器输出 K为系数 K∈[0,1] dt越小，Yn​约接近于Yn−1​ dt越大，Yn​约接近于Xn​ K的实际意义 假设时间常数Tf​为1秒,观察dt取[0,9]时K的情况..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-09-06T08:37:49.000Z"}],["meta",{"property":"article:author","content":"丁毅桂"}],["meta",{"property":"article:published_time","content":"2024-08-30T09:35:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-09-06T08:37:49.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"SimpleFOC源码阅读学习笔记：LowPassFilter低通滤波器\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-08-30T09:35:00.000Z\\",\\"dateModified\\":\\"2024-09-06T08:37:49.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"丁毅桂\\",\\"email\\":\\"2449695354@qq.com\\"}]}"],["meta",{"name":"baidu-site-verification","content":"codeva-PwE9Ts6nMl"}]]},"headers":[{"level":2,"title":"原理","slug":"原理","link":"#原理","children":[]},{"level":2,"title":"最简代码实现","slug":"最简代码实现","link":"#最简代码实现","children":[]},{"level":2,"title":"源代码实现","slug":"源代码实现","link":"#源代码实现","children":[]}],"git":{"createdTime":1725012793000,"updatedTime":1725611869000,"contributors":[{"name":"YiguiDing","email":"2449695354@qq.com","commits":1}]},"readingTime":{"minutes":2.14,"words":642},"filePathRelative":"电子/SimpleFOC源码阅读学习笔记/LowPassFilter低通滤波器.md","localizedDate":"2024年8月30日","excerpt":"","autoDesc":true}');export{r as comp,u as data};

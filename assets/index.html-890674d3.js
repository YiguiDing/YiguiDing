import{_ as o,r as d,o as s,c as u,a as e,b as l,f as n,e as t}from"./app-9bfad6cb.js";const r={},c=e("h1",{id:"本网站搭建",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#本网站搭建","aria-hidden":"true"},"#"),l(" 本网站搭建")],-1),a=e("h3",{id:"一、创建github仓库",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#一、创建github仓库","aria-hidden":"true"},"#"),l(" 一、创建github仓库")],-1),h={href:"http://YiguiDing.github.io",target:"_blank",rel:"noopener noreferrer"},_=e("li",null,"该仓库需为公开仓库。",-1),g=t('<h3 id="二、本地仓库的初始化和提交到远程仓库" tabindex="-1"><a class="header-anchor" href="#二、本地仓库的初始化和提交到远程仓库" aria-hidden="true">#</a> 二、本地仓库的初始化和提交到远程仓库</h3><ol start="0"><li>下载安装git。<code>略</code><ul><li>git配置过程省略</li></ul></li><li>使用git命令初始化本地仓库<code>git init</code></li><li>或使用克隆命令直接克隆本网站<code>git clone https://github.com/YiguiDing/YiguiDing.github.io.git</code></li><li>为远程仓库添加别名 <code>git remote add origin https://github.com/你的用户名/你的仓库名.git</code></li><li>将本地仓库提交到你的GitHub <code>git push origin master</code></li></ol><h3 id="三、本地测试环境的搭建与测试" tabindex="-1"><a class="header-anchor" href="#三、本地测试环境的搭建与测试" aria-hidden="true">#</a> 三、本地测试环境的搭建与测试</h3>',3),b=e("li",null,[e("p",null,[l("在win10中安装"),e("code",null,"Ubuntu20.04 LTS"),l("子系统")]),e("ul",null,[e("li",null,"若干步骤省略")])],-1),p=e("p",null,"安装ruby2.7和ruby2.7-dev",-1),m=e("li",null,[e("code",null,"apt search ruby2.7")],-1),f=e("li",null,[e("code",null,"apt install ruby2.7 ruby2.7-dev")],-1),v={href:"https://pages.github.com/versions/",target:"_blank",rel:"noopener noreferrer"},x=e("li",null,[e("p",null,"用ruby的gem安装bundler"),e("ul",null,[e("li",null,[e("code",null,"gem install bundler")])])],-1),k=e("br",null,null,-1),y=e("br",null,null,-1),D=e("br",null,null,-1),Y=e("br",null,null,-1),G={href:"https://rubygems.org",target:"_blank",rel:"noopener noreferrer"},E=e("br",null,null,-1),N=e("br",null,null,-1),V=t('<div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>  + `apt install make gcc` //没有这一步下一步会报错\n  + `bundler install`\n\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',1),j=t("<li><p>安装网站所需运行环境 即/YiguiDing.github.io/Gemfile中所描述依赖</p><ul><li><code>cd YiguiDing.github.io</code></li><li><code>apt install g++</code> //下一步的编译安装过程中需要用到g++</li><li><code>bundler install</code></li></ul></li><li><p>本机访问</p><ul><li><code>bundle exec jekyll serve -w --host=127.0.0.1 --livereload --port=80</code></li><li>其中 <ul><li><code>--livereload</code>表示动态加载页面，即当页面文件改动后，静态页面将会重新生成</li><li><code>--host=127.0.0.1</code>表示指定ip地址，此时为仅本机访问，若要局域网内部访问，则指定为<code>--host=0.0.0.0</code>或<code>--host=本机局域网Ip</code></li><li><code>--port=80</code>表示指定端口，默认为4000</li></ul></li></ul></li>",2);function B(H,I){const i=d("ExternalLinkIcon");return s(),u("div",null,[c,a,e("ol",null,[e("li",null,[l("仓库名前缀要和GitHub用户名同名，不区分大小写。 "),e("blockquote",null,[e("p",null,[l("用户名如为:YiguiDing,仓库名则为："),e("a",h,[l("YiguiDing.github.io"),n(i)])])])]),_]),g,e("ul",null,[b,e("li",null,[p,e("ul",null,[m,f,e("li",null,[l("这里用2.7是为了和github保持一致,详情查看"),e("a",v,[l("GitHub PagesDependency versions"),n(i)])])])]),x,e("li",null,[e("p",null,[l("创建Gemfile文件安装jekyll3.9"),k,l(" +"),y,l(" ```shell"),D,l(' cat >Gemfile<<"EOF"'),Y,l(' source "'),e("a",G,[l("https://rubygems.org"),n(i)]),l('"'),E,l(' gem "jekyll", "~> 3.9.0"'),N,l(" EOF")]),V]),j])])}const w=o(r,[["render",B],["__file","index.html.vue"]]);export{w as default};

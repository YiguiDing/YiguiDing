import{_ as s,r as a,o as t,c,a as l,b as n,f as d,e}from"./app-545c325f.js";const o="/assets/Linux备忘笔记-b282c726.webp",r={},u=e('<h1 id="linux备忘笔记" tabindex="-1"><a class="header-anchor" href="#linux备忘笔记" aria-hidden="true">#</a> linux备忘笔记</h1><p><img src="'+o+`" alt=""></p><h2 id="删除已设置生效的root密码" tabindex="-1"><a class="header-anchor" href="#删除已设置生效的root密码" aria-hidden="true">#</a> 删除已设置生效的root密码</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 删除root:x: 中的x密码占位符号</span>
<span class="token function">vim</span> /etc/passwd
<span class="token comment"># 删除root:xxxxxxxxxx: 中的xxxxxxxxxxxxxxxxxx加密后的密码，改为*</span>
<span class="token function">vim</span> /etc/shadow

<span class="token comment"># 没有权限则重启进入拯救模式</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="用户管理" tabindex="-1"><a class="header-anchor" href="#用户管理" aria-hidden="true">#</a> 用户管理</h2><p><strong>usermod</strong></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># usermod 可选项：</span>
<span class="token comment">#     -d &lt;登入目录&gt;     修改用户登入时的目录。</span>
<span class="token comment">#     -g &lt;群组&gt;         修改用户所属的群组。</span>
<span class="token comment">#     -G &lt;群组&gt;         修改用户所属的附加群组。</span>
<span class="token comment">#     -l &lt;帐号名称&gt;     修改用户帐号名称(新账号在前，旧账号在后)</span>
<span class="token comment">#     -L                锁定用户密码，使密码无效。</span>
<span class="token comment">#     -s &lt;shell&gt;        修改用户登入后所使用的shell。</span>
<span class="token comment">#     -u &lt;uid&gt;          修改用户ID。</span>
<span class="token comment">#     -U                解除密码锁定。</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="权限管理" tabindex="-1"><a class="header-anchor" href="#权限管理" aria-hidden="true">#</a> 权限管理</h2><p><strong>查看用户组的成员</strong></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">vi</span> /etc/group
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="常用命令" tabindex="-1"><a class="header-anchor" href="#常用命令" aria-hidden="true">#</a> 常用命令</h2><ul><li><p>查看所有运行的任务和pid</p><ul><li>ps aux</li><li>a 显示现行终端机下的所有程序，包括其他用户的程序。</li><li>u 以用户为主的格式来显示程序状况。</li><li>x 显示所有程序，不以终端机来区分。</li></ul></li><li><p>查看端口监听情况</p><ul><li>软件包名：net-tools</li><li>netstat -tunlp</li><li>-a 全部</li><li>-c或--continuous：持续列出网络状态；</li><li>-l或--listening：显示监控中的服务器的Socket；</li><li>-u或--udp：显示UDP传输协议的连线状况；</li><li>-t或--tcp：显示TCP传输协议的连线状况；</li><li>-n或--numeric：直接使用ip地址，而不通过域名服务器；</li><li>-p或--programs：显示正在使用Socket的程序识别码和程序名称；</li></ul></li><li><p>ctrl + z 将一个正在前台执行的命令放到后台，并且暂停</p></li><li><p>jobs 查看当前有多少在后台运行的命令</p><ul><li>无参数 查看当前作业</li><li>-l 列出进程的PID和作业号</li><li>-p 只列出作业的PID</li><li>-s 只列出停止的作业</li><li>-r 只列出运行的作业</li></ul></li><li><p>fg 将后台中的命令调至前台继续运行</p></li><li><p>bg 将一个在后台暂停的命令，变成继续执行</p></li><li><p>commend &amp; 后台执行一个程序</p></li><li><p>linux命令后台运行.两种方式：</p><ul><li>command &amp; ： 后台运行，你关掉终端会停止运行</li><li>nohup command &amp; ： 后台运行，你关掉终端也会继续运行</li></ul></li></ul><h3 id="偶尔会忘的操作" tabindex="-1"><a class="header-anchor" href="#偶尔会忘的操作" aria-hidden="true">#</a> 偶尔会忘的操作</h3><ul><li>将普通用户加入wheel组使其获得sudo权限 <ul><li>useradd dyg -G wheel 或者</li><li>usermod dyg -G wheel</li></ul></li><li>递归更改文件夹属组 <ul><li>chmod -R dyg:dyg 文件名</li></ul></li></ul><h2 id="软件安装升级" tabindex="-1"><a class="header-anchor" href="#软件安装升级" aria-hidden="true">#</a> 软件安装升级</h2>`,15),m=l("li",null,[n("安装c++编译器 "),l("ul",null,[l("li",null,"yum install gcc gcc-c++")])],-1),p=l("li",null,[n("安装make "),l("ul",null,[l("li",null,"yum install make")])],-1),x=l("li",null,[n("安装nodejs "),l("ul",null,[l("li",null,"yum install nodejs")])],-1),h={href:"https://npmmirror.com/mirrors/node/v16.13.1/node-v16.13.1-linux-x64.tar.xz",target:"_blank",rel:"noopener noreferrer"},v=l("li",null,[n("解压 【v显示解压过程，x解压，f指定解压文件，z解压后缀为gz的压缩包】 "),l("ul",null,[l("li",null,"tar vxf node-v16.13.1-linux-x64.tar.xz"),l("li",null,"tar vxfz node-v16.13.1-linux-x64.tar.gz")])],-1),g=l("li",null,[n("创建软连接；【-s表示soft 软】 "),l("ul",null,[l("li",null,"ln -s /home/用户名/node-v16.13.1-linux-x64/bin/node /usr/local/bin/"),l("li",null,"ln -s /home/用户名/node-v16.13.1-linux-x64/bin/npm /usr/local/bin/")])],-1),b=e(`<li>CentOS8完美升级gcc版本方法 <ol><li>安装gcc-toolset-10</li></ol><ul><li>dnf install gcc-toolset-10</li></ul><ol start="2"><li><p>激活gcc版本，使其生效</p><ul><li>scl enable gcc-toolset-10 bash 或</li><li>source /opt/rh/gcc-toolset-10/enable</li></ul></li><li><p>此时通过gcc --version命令可以看到，gcc版本已经变成10.x.x，</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>值得注意的是这仅仅在当前bash生效，
如果需要永久生效，可以请自行添加环境变量。
仅适用于CentOS8、Redhat8版本
在CentOS8版本中，红帽也提供了开发工具包管理gcc版本，
install的包名从devtoolset-x变成了gcc-toolset-x，
通过该方式升级gcc好处就是随时可以切换gcc版本，不破坏原有gcc环境。
gcc-toolset-9对应gcc9.x.x版本
gcc-toolset-10对应gcc10.x.x版本
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol></li>`,1);function _(f,k){const i=a("ExternalLinkIcon");return t(),c("div",null,[u,l("ol",null,[m,p,x,l("li",null,[n("安装指定版本的nodejs "),l("ol",null,[l("li",null,[n("官网找到下载链接后 "),l("ul",null,[l("li",null,[n("wget "),l("a",h,[n("https://npmmirror.com/mirrors/node/v16.13.1/node-v16.13.1-linux-x64.tar.xz"),d(i)])])])]),v,g])]),b])])}const w=s(r,[["render",_],["__file","Linux备忘笔记.html.vue"]]);export{w as default};

const n=JSON.parse('{"key":"v-1ed2acb8","path":"/%E7%AE%97%E6%B3%95/%E5%85%A8%E6%8E%92%E5%88%97%E6%A8%A1%E6%9D%BF%E4%BB%A3%E7%A0%81/%E5%85%A8%E6%8E%92%E5%88%97%E6%A8%A1%E6%9D%BF%E4%BB%A3%E7%A0%81.html","title":"全排列模板代码","lang":"zh-CN","frontmatter":{"title":"全排列模板代码","cover":"./cover/default_cover.jpg","date":"2023-02-17T12:25:00.000Z","tag":["蓝桥杯","JAVA","算法","刷题笔记"],"category":"算法","description":"全排列模板代码 package 全排列模板代码; import java.util.Arrays; public class 全排列 { public static void main(String[] args) { int[] test = { 0, 1, 2, 3 }; f(test, 0); } // 全排列 static void f(int[] array, int step) { if (step == array.length) { // 得到全排列的结果 System.out.println(Arrays.toString(array)); return; } else { for (int i = step; i &lt; array.length; i++) { exchange(array, step, i);// 从后面的可选项中挑选一个放到当前位置 f(array, step + 1);// 递归确认下一个位置的元素 exchange(array, step, i);// 交换回来，恢复原样，回溯。 } } } static void exchange(int[] arr, int i, int j) { if (i != j) { arr[i] = arr[i] ^ arr[j]; arr[j] = arr[i] ^ arr[j]; arr[i] = arr[i] ^ arr[j]; } } }","head":[["meta",{"property":"og:url","content":"https://dingdingdang.online/%E7%AE%97%E6%B3%95/%E5%85%A8%E6%8E%92%E5%88%97%E6%A8%A1%E6%9D%BF%E4%BB%A3%E7%A0%81/%E5%85%A8%E6%8E%92%E5%88%97%E6%A8%A1%E6%9D%BF%E4%BB%A3%E7%A0%81.html"}],["meta",{"property":"og:site_name","content":"Yigui-Ding的Blog小站"}],["meta",{"property":"og:title","content":"全排列模板代码"}],["meta",{"property":"og:description","content":"全排列模板代码 package 全排列模板代码; import java.util.Arrays; public class 全排列 { public static void main(String[] args) { int[] test = { 0, 1, 2, 3 }; f(test, 0); } // 全排列 static void f(int[] array, int step) { if (step == array.length) { // 得到全排列的结果 System.out.println(Arrays.toString(array)); return; } else { for (int i = step; i &lt; array.length; i++) { exchange(array, step, i);// 从后面的可选项中挑选一个放到当前位置 f(array, step + 1);// 递归确认下一个位置的元素 exchange(array, step, i);// 交换回来，恢复原样，回溯。 } } } static void exchange(int[] arr, int i, int j) { if (i != j) { arr[i] = arr[i] ^ arr[j]; arr[j] = arr[i] ^ arr[j]; arr[i] = arr[i] ^ arr[j]; } } }"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-11-17T13:06:31.000Z"}],["meta",{"property":"article:author","content":"丁毅桂"}],["meta",{"property":"article:tag","content":"蓝桥杯"}],["meta",{"property":"article:tag","content":"JAVA"}],["meta",{"property":"article:tag","content":"算法"}],["meta",{"property":"article:tag","content":"刷题笔记"}],["meta",{"property":"article:published_time","content":"2023-02-17T12:25:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-11-17T13:06:31.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"全排列模板代码\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-02-17T12:25:00.000Z\\",\\"dateModified\\":\\"2023-11-17T13:06:31.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"丁毅桂\\",\\"email\\":\\"2449695354@qq.com\\"}]}"],["meta",{"name":"baidu-site-verification","content":"codeva-PwE9Ts6nMl"}]]},"headers":[{"level":2,"title":"全排列模板代码","slug":"全排列模板代码","link":"#全排列模板代码","children":[]}],"git":{"createdTime":1700226391000,"updatedTime":1700226391000,"contributors":[{"name":"YiguiDing","email":"2449695354@qq.com","commits":1}]},"readingTime":{"minutes":0.98,"words":295},"filePathRelative":"算法/全排列模板代码/全排列模板代码.md","localizedDate":"2023年2月17日","excerpt":"<h2> 全排列模板代码</h2>\\n<div class=\\"language-java line-numbers-mode\\" data-ext=\\"java\\"><pre class=\\"language-java\\"><code><span class=\\"token keyword\\">package</span> 全排列模板代码<span class=\\"token punctuation\\">;</span>\\n\\n<span class=\\"token keyword\\">import</span> <span class=\\"token import\\"><span class=\\"token namespace\\">java<span class=\\"token punctuation\\">.</span>util<span class=\\"token punctuation\\">.</span></span><span class=\\"token class-name\\">Arrays</span></span><span class=\\"token punctuation\\">;</span>\\n\\n<span class=\\"token keyword\\">public</span> <span class=\\"token keyword\\">class</span> 全排列 <span class=\\"token punctuation\\">{</span>\\n <span class=\\"token keyword\\">public</span> <span class=\\"token keyword\\">static</span> <span class=\\"token keyword\\">void</span> <span class=\\"token function\\">main</span><span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">String</span><span class=\\"token punctuation\\">[</span><span class=\\"token punctuation\\">]</span> args<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n  <span class=\\"token keyword\\">int</span><span class=\\"token punctuation\\">[</span><span class=\\"token punctuation\\">]</span> test <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">{</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">1</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">2</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">3</span> <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token function\\">f</span><span class=\\"token punctuation\\">(</span>test<span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n <span class=\\"token punctuation\\">}</span>\\n\\n <span class=\\"token comment\\">// 全排列</span>\\n <span class=\\"token keyword\\">static</span> <span class=\\"token keyword\\">void</span> <span class=\\"token function\\">f</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">int</span><span class=\\"token punctuation\\">[</span><span class=\\"token punctuation\\">]</span> array<span class=\\"token punctuation\\">,</span> <span class=\\"token keyword\\">int</span> step<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n  <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span>step <span class=\\"token operator\\">==</span> array<span class=\\"token punctuation\\">.</span>length<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n   <span class=\\"token comment\\">// 得到全排列的结果</span>\\n   <span class=\\"token class-name\\">System</span><span class=\\"token punctuation\\">.</span>out<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">println</span><span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">Arrays</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">toString</span><span class=\\"token punctuation\\">(</span>array<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n   <span class=\\"token keyword\\">return</span><span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token punctuation\\">}</span> <span class=\\"token keyword\\">else</span> <span class=\\"token punctuation\\">{</span>\\n   <span class=\\"token keyword\\">for</span> <span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">int</span> i <span class=\\"token operator\\">=</span> step<span class=\\"token punctuation\\">;</span> i <span class=\\"token operator\\">&lt;</span> array<span class=\\"token punctuation\\">.</span>length<span class=\\"token punctuation\\">;</span> i<span class=\\"token operator\\">++</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token function\\">exchange</span><span class=\\"token punctuation\\">(</span>array<span class=\\"token punctuation\\">,</span> step<span class=\\"token punctuation\\">,</span> i<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span><span class=\\"token comment\\">// 从后面的可选项中挑选一个放到当前位置</span>\\n    <span class=\\"token function\\">f</span><span class=\\"token punctuation\\">(</span>array<span class=\\"token punctuation\\">,</span> step <span class=\\"token operator\\">+</span> <span class=\\"token number\\">1</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span><span class=\\"token comment\\">// 递归确认下一个位置的元素</span>\\n    <span class=\\"token function\\">exchange</span><span class=\\"token punctuation\\">(</span>array<span class=\\"token punctuation\\">,</span> step<span class=\\"token punctuation\\">,</span> i<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span><span class=\\"token comment\\">// 交换回来，恢复原样，回溯。</span>\\n   <span class=\\"token punctuation\\">}</span>\\n  <span class=\\"token punctuation\\">}</span>\\n <span class=\\"token punctuation\\">}</span>\\n <span class=\\"token keyword\\">static</span> <span class=\\"token keyword\\">void</span> <span class=\\"token function\\">exchange</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">int</span><span class=\\"token punctuation\\">[</span><span class=\\"token punctuation\\">]</span> arr<span class=\\"token punctuation\\">,</span> <span class=\\"token keyword\\">int</span> i<span class=\\"token punctuation\\">,</span> <span class=\\"token keyword\\">int</span> j<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n  <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span>i <span class=\\"token operator\\">!=</span> j<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n   arr<span class=\\"token punctuation\\">[</span>i<span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">=</span> arr<span class=\\"token punctuation\\">[</span>i<span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">^</span> arr<span class=\\"token punctuation\\">[</span>j<span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">;</span>\\n   arr<span class=\\"token punctuation\\">[</span>j<span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">=</span> arr<span class=\\"token punctuation\\">[</span>i<span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">^</span> arr<span class=\\"token punctuation\\">[</span>j<span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">;</span>\\n   arr<span class=\\"token punctuation\\">[</span>i<span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">=</span> arr<span class=\\"token punctuation\\">[</span>i<span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">^</span> arr<span class=\\"token punctuation\\">[</span>j<span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token punctuation\\">}</span>\\n <span class=\\"token punctuation\\">}</span>\\n\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","copyright":{"author":"丁毅桂","license":"MIT"},"autoDesc":true}');export{n as data};

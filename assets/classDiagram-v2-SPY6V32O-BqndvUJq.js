var ct=Object.defineProperty,dt=Object.defineProperties;var ft=Object.getOwnPropertyDescriptors;var z=Object.getOwnPropertySymbols;var ut=Object.prototype.hasOwnProperty,ht=Object.prototype.propertyIsEnumerable;var W=(e,t,n)=>t in e?ct(e,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[t]=n,B=(e,t)=>{for(var n in t||(t={}))ut.call(t,n)&&W(e,n,t[n]);if(z)for(var n of z(t))ht.call(t,n)&&W(e,n,t[n]);return e},q=(e,t)=>dt(e,ft(t));var C=(e,t,n)=>new Promise((l,i)=>{var a=o=>{try{f(n.next(o))}catch(h){i(h)}},r=o=>{try{f(n.throw(o))}catch(h){i(h)}},f=o=>o.done?l(o.value):Promise.resolve(o.value).then(a,r);f((n=n.apply(e,t)).next())});import{m as gt,c as wt,i as yt,a as bt,p as mt}from"./chunk-MKAIFKW5-DvB1kkB1.js";import{c as vt,a as V,s as pt}from"./chunk-BAVOGKFW-pLYZU-U5.js";import{c as xt,u as St,s as Nt,i as Et,p as j,a as K,b as A}from"./chunk-GWHMDDHB-C9lVOgMD.js";import{_ as g,l as s,d as m,j as D,u as Ct,aa as Tt,ab as Q,ac as U,ad as Y,v as kt,e as Z,ae as G,A as R,D as Dt}from"./mermaid.core-CjFIY7bQ.js";import{G as I}from"./graph-igjU2otc.js";import{l as Xt}from"./layout-4_5TCACO.js";import{w as S}from"./json-5Dn7Tu6q.js";import"./app-CHjqYunX.js";import"./commonjsHelpers-D6Ya60D-.js";import"./baseUniq-DLWBS8Ta.js";import"./basePickBy-Ckl3rxJV.js";import"./clone-D7tLb8wA.js";var u={},x={},tt={},Bt=g(()=>{x={},tt={},u={}},"clear"),_=g((e,t)=>(s.trace("In isDescendant",t," ",e," = ",x[t].includes(e)),!!x[t].includes(e)),"isDescendant"),Lt=g((e,t)=>(s.info("Descendants of ",t," is ",x[t]),s.info("Edge is ",e),e.v===t||e.w===t?!1:x[t]?x[t].includes(e.v)||_(e.v,t)||_(e.w,t)||x[t].includes(e.w):(s.debug("Tilt, ",t,",not in descendants"),!1)),"edgeInCluster"),et=g((e,t,n,l)=>{s.warn("Copying children of ",e,"root",l,"data",t.node(e),l);const i=t.children(e)||[];e!==l&&i.push(e),s.warn("Copying (nodes) clusterId",e,"nodes",i),i.forEach(a=>{if(t.children(a).length>0)et(a,t,n,l);else{const r=t.node(a);s.info("cp ",a," to ",l," with parent ",e),n.setNode(a,r),l!==t.parent(a)&&(s.warn("Setting parent",a,t.parent(a)),n.setParent(a,t.parent(a))),e!==l&&a!==e?(s.debug("Setting parent",a,e),n.setParent(a,e)):(s.info("In copy ",e,"root",l,"data",t.node(e),l),s.debug("Not Setting parent for node=",a,"cluster!==rootId",e!==l,"node!==clusterId",a!==e));const f=t.edges(a);s.debug("Copying Edges",f),f.forEach(o=>{s.info("Edge",o);const h=t.edge(o.v,o.w,o.name);s.info("Edge data",h,l);try{Lt(o,l)?(s.info("Copying as ",o.v,o.w,h,o.name),n.setEdge(o.v,o.w,h,o.name),s.info("newGraph edges ",n.edges(),n.edge(n.edges()[0]))):s.info("Skipping copy of edge ",o.v,"-->",o.w," rootId: ",l," clusterId:",e)}catch(b){s.error(b)}})}s.debug("Removing node",a),t.removeNode(a)})},"copy"),nt=g((e,t)=>{const n=t.children(e);let l=[...n];for(const i of n)tt[i]=e,l=[...l,...nt(i,t)];return l},"extractDescendants"),X=g((e,t)=>{s.trace("Searching",e);const n=t.children(e);if(s.trace("Searching children of id ",e,n),n.length<1)return s.trace("This is a valid node",e),e;for(const l of n){const i=X(l,t);if(i)return s.trace("Found replacement for",e," => ",i),i}},"findNonClusterChild"),L=g(e=>!u[e]||!u[e].externalConnections?e:u[e]?u[e].id:e,"getAnchorId"),Rt=g((e,t)=>{if(!e||t>10){s.debug("Opting out, no graph ");return}else s.debug("Opting in, graph ");e.nodes().forEach(function(n){e.children(n).length>0&&(s.warn("Cluster identified",n," Replacement id in edges: ",X(n,e)),x[n]=nt(n,e),u[n]={id:X(n,e),clusterData:e.node(n)})}),e.nodes().forEach(function(n){const l=e.children(n),i=e.edges();l.length>0?(s.debug("Cluster identified",n,x),i.forEach(a=>{if(a.v!==n&&a.w!==n){const r=_(a.v,n),f=_(a.w,n);r^f&&(s.warn("Edge: ",a," leaves cluster ",n),s.warn("Descendants of XXX ",n,": ",x[n]),u[n].externalConnections=!0)}})):s.debug("Not a cluster ",n,x)});for(let n of Object.keys(u)){const l=u[n].id,i=e.parent(l);i!==n&&u[i]&&!u[i].externalConnections&&(u[n].id=i)}e.edges().forEach(function(n){const l=e.edge(n);s.warn("Edge "+n.v+" -> "+n.w+": "+JSON.stringify(n)),s.warn("Edge "+n.v+" -> "+n.w+": "+JSON.stringify(e.edge(n)));let i=n.v,a=n.w;if(s.warn("Fix XXX",u,"ids:",n.v,n.w,"Translating: ",u[n.v]," --- ",u[n.w]),u[n.v]&&u[n.w]&&u[n.v]===u[n.w]){s.warn("Fixing and trixing link to self - removing XXX",n.v,n.w,n.name),s.warn("Fixing and trixing - removing XXX",n.v,n.w,n.name),i=L(n.v),a=L(n.w),e.removeEdge(n.v,n.w,n.name);const r=n.w+"---"+n.v;e.setNode(r,{domId:r,id:r,labelStyle:"",labelText:l.label,padding:0,shape:"labelRect",style:""});const f=structuredClone(l),o=structuredClone(l);f.label="",f.arrowTypeEnd="none",o.label="",f.fromCluster=n.v,o.toCluster=n.v,e.setEdge(i,r,f,n.name+"-cyclic-special"),e.setEdge(r,a,o,n.name+"-cyclic-special")}else if(u[n.v]||u[n.w]){if(s.warn("Fixing and trixing - removing XXX",n.v,n.w,n.name),i=L(n.v),a=L(n.w),e.removeEdge(n.v,n.w,n.name),i!==n.v){const r=e.parent(i);u[r].externalConnections=!0,l.fromCluster=n.v}if(a!==n.w){const r=e.parent(a);u[r].externalConnections=!0,l.toCluster=n.w}s.warn("Fix Replacing with XXX",i,a,n.name),e.setEdge(i,a,l,n.name)}}),s.warn("Adjusted Graph",S(e)),it(e,0),s.trace(u)},"adjustClustersAndEdges"),it=g((e,t)=>{var i,a;if(s.warn("extractor - ",t,S(e),e.children("D")),t>10){s.error("Bailing out");return}let n=e.nodes(),l=!1;for(const r of n){const f=e.children(r);l=l||f.length>0}if(!l){s.debug("Done, no node has children",e.nodes());return}s.debug("Nodes = ",n,t);for(const r of n)if(s.debug("Extracting node",r,u,u[r]&&!u[r].externalConnections,!e.parent(r),e.node(r),e.children("D")," Depth ",t),!u[r])s.debug("Not a cluster",r,t);else if(!u[r].externalConnections&&e.children(r)&&e.children(r).length>0){s.warn("Cluster without external connections, without a parent and with children",r,t);let o=e.graph().rankdir==="TB"?"LR":"TB";(a=(i=u[r])==null?void 0:i.clusterData)!=null&&a.dir&&(o=u[r].clusterData.dir,s.warn("Fixing dir",u[r].clusterData.dir,o));const h=new I({multigraph:!0,compound:!0}).setGraph({rankdir:o,nodesep:50,ranksep:50,marginx:8,marginy:8}).setDefaultEdgeLabel(function(){return{}});s.warn("Old graph before copy",S(e)),et(r,e,h,r),e.setNode(r,{clusterNode:!0,id:r,clusterData:u[r].clusterData,labelText:u[r].labelText,graph:h}),s.warn("New graph after copy node: (",r,")",S(h)),s.debug("Old graph after copy",S(e))}else s.warn("Cluster ** ",r," **not meeting the criteria !externalConnections:",!u[r].externalConnections," no parent: ",!e.parent(r)," children ",e.children(r)&&e.children(r).length>0,e.children("D"),t),s.debug(u);n=e.nodes(),s.warn("New list of nodes",n);for(const r of n){const f=e.node(r);s.warn(" Now next level",r,f),f.clusterNode&&it(f.graph,t+1)}},"extractor"),st=g((e,t)=>{if(t.length===0)return[];let n=Object.assign(t);return t.forEach(l=>{const i=e.children(l),a=st(e,i);n=[...n,...a]}),n},"sorter"),_t=g(e=>st(e,e.children()),"sortNodesByHierarchy"),At=g((e,t)=>{s.info("Creating subgraph rect for ",t.id,t);const n=m(),l=e.insert("g").attr("class","cluster"+(t.class?" "+t.class:"")).attr("id",t.id),i=l.insert("rect",":first-child"),a=R(n.flowchart.htmlLabels),r=l.insert("g").attr("class","cluster-label"),f=t.labelType==="markdown"?Dt(r,t.labelText,{style:t.labelStyle,useHtmlLabels:a},n):r.node().appendChild(K(t.labelText,t.labelStyle,void 0,!0));let o=f.getBBox();if(R(n.flowchart.htmlLabels)){const d=f.children[0],c=D(f);o=d.getBoundingClientRect(),c.attr("width",o.width),c.attr("height",o.height)}const h=0*t.padding,b=h/2,y=t.width<=o.width+h?o.width+h:t.width;t.width<=o.width+h?t.diff=(o.width-t.width)/2-t.padding/2:t.diff=-t.padding/2,s.trace("Data ",t,JSON.stringify(t)),i.attr("style",t.style).attr("rx",t.rx).attr("ry",t.ry).attr("x",t.x-y/2).attr("y",t.y-t.height/2-b).attr("width",y).attr("height",t.height+h);const{subGraphTitleTopMargin:v}=G(n);a?r.attr("transform",`translate(${t.x-o.width/2}, ${t.y-t.height/2+v})`):r.attr("transform",`translate(${t.x}, ${t.y-t.height/2+v})`);const w=i.node().getBBox();return t.width=w.width,t.height=w.height,t.intersect=function(d){return A(t,d)},l},"rect"),Jt=g((e,t)=>{const n=e.insert("g").attr("class","note-cluster").attr("id",t.id),l=n.insert("rect",":first-child"),i=0*t.padding,a=i/2;l.attr("rx",t.rx).attr("ry",t.ry).attr("x",t.x-t.width/2-a).attr("y",t.y-t.height/2-a).attr("width",t.width+i).attr("height",t.height+i).attr("fill","none");const r=l.node().getBBox();return t.width=r.width,t.height=r.height,t.intersect=function(f){return A(t,f)},n},"noteGroup"),Ot=g((e,t)=>{const n=m(),l=e.insert("g").attr("class",t.classes).attr("id",t.id),i=l.insert("rect",":first-child"),a=l.insert("g").attr("class","cluster-label"),r=l.append("rect"),f=a.node().appendChild(K(t.labelText,t.labelStyle,void 0,!0));let o=f.getBBox();if(R(n.flowchart.htmlLabels)){const d=f.children[0],c=D(f);o=d.getBoundingClientRect(),c.attr("width",o.width),c.attr("height",o.height)}o=f.getBBox();const h=0*t.padding,b=h/2,y=t.width<=o.width+t.padding?o.width+t.padding:t.width;t.width<=o.width+t.padding?t.diff=(o.width+t.padding*0-t.width)/2:t.diff=-t.padding/2,i.attr("class","outer").attr("x",t.x-y/2-b).attr("y",t.y-t.height/2-b).attr("width",y+h).attr("height",t.height+h),r.attr("class","inner").attr("x",t.x-y/2-b).attr("y",t.y-t.height/2-b+o.height-1).attr("width",y+h).attr("height",t.height+h-o.height-3);const{subGraphTitleTopMargin:v}=G(n);a.attr("transform",`translate(${t.x-o.width/2}, ${t.y-t.height/2-t.padding/3+(R(n.flowchart.htmlLabels)?5:3)+v})`);const w=i.node().getBBox();return t.height=w.height,t.intersect=function(d){return A(t,d)},l},"roundedWithTitle"),Pt=g((e,t)=>{const n=e.insert("g").attr("class",t.classes).attr("id",t.id),l=n.insert("rect",":first-child"),i=0*t.padding,a=i/2;l.attr("class","divider").attr("x",t.x-t.width/2-a).attr("y",t.y-t.height/2).attr("width",t.width+i).attr("height",t.height+i);const r=l.node().getBBox();return t.width=r.width,t.height=r.height,t.diff=-t.padding/2,t.intersect=function(f){return A(t,f)},n},"divider"),Gt={rect:At,roundedWithTitle:Ot,noteGroup:Jt,divider:Pt},at={},Mt=g((e,t)=>{s.trace("Inserting cluster");const n=t.shape||"rect";at[t.id]=Gt[n](e,t)},"insertCluster"),Ft=g(()=>{at={}},"clear"),rt=g((e,t,n,l,i,a)=>C(void 0,null,function*(){s.info("Graph in recursive render: XXX",S(t),i);const r=t.graph().rankdir;s.trace("Dir in recursive render - dir:",r);const f=e.insert("g").attr("class","root");t.nodes()?s.info("Recursive render XXX",t.nodes()):s.info("No nodes found for",t),t.edges().length>0&&s.trace("Recursive edges",t.edge(t.edges()[0]));const o=f.insert("g").attr("class","clusters"),h=f.insert("g").attr("class","edgePaths"),b=f.insert("g").attr("class","edgeLabels"),y=f.insert("g").attr("class","nodes");yield Promise.all(t.nodes().map(function(d){return C(this,null,function*(){const c=t.node(d);if(i!==void 0){const p=JSON.parse(JSON.stringify(i.clusterData));s.info("Setting data for cluster XXX (",d,") ",p,i),t.setNode(i.id,p),t.parent(d)||(s.trace("Setting parent",d,i.id),t.setParent(d,i.id,p))}if(s.info("(Insert) Node XXX"+d+": "+JSON.stringify(t.node(d))),c!=null&&c.clusterNode){s.info("Cluster identified",d,c.width,t.node(d));const{ranksep:p,nodesep:N}=t.graph();c.graph.setGraph(q(B({},c.graph.graph()),{ranksep:p,nodesep:N}));const T=yield rt(y,c.graph,n,l,t.node(d),a),E=T.elem;St(c,E),c.diff=T.diff||0,s.info("Node bounds (abc123)",d,c,c.width,c.x,c.y),Nt(E,c),s.warn("Recursive render complete ",E,c)}else t.children(d).length>0?(s.info("Cluster - the non recursive path XXX",d,c.id,c,t),s.info(X(c.id,t)),u[c.id]={id:X(c.id,t),node:c}):(s.info("Node - the non recursive path",d,c.id,c),yield Et(y,t.node(d),r))})})),t.edges().forEach(function(d){return C(this,null,function*(){const c=t.edge(d.v,d.w,d.name);s.info("Edge "+d.v+" -> "+d.w+": "+JSON.stringify(d)),s.info("Edge "+d.v+" -> "+d.w+": ",d," ",JSON.stringify(t.edge(d))),s.info("Fix",u,"ids:",d.v,d.w,"Translating: ",u[d.v],u[d.w]),yield yt(b,c)})}),t.edges().forEach(function(d){s.info("Edge "+d.v+" -> "+d.w+": "+JSON.stringify(d))}),s.info("Graph before layout:",JSON.stringify(S(t))),s.info("#############################################"),s.info("###                Layout                 ###"),s.info("#############################################"),s.info(t),Xt(t),s.info("Graph after layout:",JSON.stringify(S(t)));let v=0;const{subGraphTitleTotalMargin:w}=G(a);return _t(t).forEach(function(d){const c=t.node(d);s.info("Position "+d+": "+JSON.stringify(t.node(d))),s.info("Position "+d+": ("+c.x,","+c.y,") width: ",c.width," height: ",c.height),c!=null&&c.clusterNode?(c.y+=w,j(c)):t.children(d).length>0?(c.height+=w,Mt(o,c),u[c.id].node=c):(c.y+=w/2,j(c))}),t.edges().forEach(function(d){const c=t.edge(d);s.info("Edge "+d.v+" -> "+d.w+": "+JSON.stringify(c),c),c.points.forEach(N=>N.y+=w/2);const p=bt(h,d,c,u,n,t,l);mt(c,p)}),t.nodes().forEach(function(d){const c=t.node(d);s.info(d,c.type,c.diff),c.type==="group"&&(v=c.diff)}),{elem:f,diff:v}}),"recursiveRender"),$t=g((e,t,n,l,i)=>C(void 0,null,function*(){gt(e,n,l,i),xt(),wt(),Ft(),Bt(),s.warn("Graph at first:",JSON.stringify(S(t))),Rt(t),s.warn("Graph after:",JSON.stringify(S(t)));const a=m();yield rt(e,t,l,i,void 0,a)}),"render"),M=g(e=>Z.sanitizeText(e,m()),"sanitizeText"),O={dividerMargin:10,padding:5,textHeight:10,curve:void 0},Ht=g(function(e,t,n,l){s.info("keys:",[...e.keys()]),s.info(e),e.forEach(function(i){var f,o,h;const r={shape:"rect",id:i.id,domId:i.domId,labelText:M(i.id),labelStyle:"",style:"fill: none; stroke: black",padding:(h=(f=m().flowchart)==null?void 0:f.padding)!=null?h:(o=m().class)==null?void 0:o.padding};t.setNode(i.id,r),lt(i.classes,t,n,l,i.id),s.info("setNode",r)})},"addNamespaces"),lt=g(function(e,t,n,l,i){s.info("keys:",[...e.keys()]),s.info(e),[...e.values()].filter(a=>a.parent===i).forEach(function(a){var v,w,d,c;const r=a.cssClasses.join(" "),f=Q(a.styles),o=(v=a.label)!=null?v:a.id,h=0,y={labelStyle:f.labelStyle,shape:"class_box",labelText:M(o),classData:a,rx:h,ry:h,class:r,style:f.style,id:a.id,domId:a.domId,tooltip:l.db.getTooltip(a.id,i)||"",haveCallback:a.haveCallback,link:a.link,width:a.type==="group"?500:void 0,type:a.type,padding:(c=(w=m().flowchart)==null?void 0:w.padding)!=null?c:(d=m().class)==null?void 0:d.padding};t.setNode(a.id,y),i&&t.setParent(a.id,i),s.info("setNode",y)})},"addClasses"),zt=g(function(e,t,n,l){s.info(e),e.forEach(function(i,a){var c,p,N;const r=i,f="",o={labelStyle:"",style:""},h=r.text,b=0,v={labelStyle:o.labelStyle,shape:"note",labelText:M(h),noteData:r,rx:b,ry:b,class:f,style:o.style,id:r.id,domId:r.id,tooltip:"",type:"note",padding:(N=(c=m().flowchart)==null?void 0:c.padding)!=null?N:(p=m().class)==null?void 0:p.padding};if(t.setNode(r.id,v),s.info("setNode",v),!r.class||!l.has(r.class))return;const w=n+a,d={id:`edgeNote${w}`,classes:"relation",pattern:"dotted",arrowhead:"none",startLabelRight:"",endLabelLeft:"",arrowTypeStart:"none",arrowTypeEnd:"none",style:"fill:none",labelStyle:"",curve:U(O.curve,Y)};t.setEdge(r.id,r.class,d,w)})},"addNotes"),Wt=g(function(e,t){const n=m().flowchart;let l=0;e.forEach(function(i){var r,f;l++;const a={classes:"relation",pattern:i.relation.lineType==1?"dashed":"solid",id:kt(i.id1,i.id2,{prefix:"id",counter:l}),arrowhead:i.type==="arrow_open"?"none":"normal",startLabelRight:i.relationTitle1==="none"?"":i.relationTitle1,endLabelLeft:i.relationTitle2==="none"?"":i.relationTitle2,arrowTypeStart:P(i.relation.type1),arrowTypeEnd:P(i.relation.type2),style:"fill:none",labelStyle:"",curve:U(n==null?void 0:n.curve,Y)};if(s.info(a,i),i.style!==void 0){const o=Q(i.style);a.style=o.style,a.labelStyle=o.labelStyle}i.text=i.title,i.text===void 0?i.style!==void 0&&(a.arrowheadStyle="fill: #333"):(a.arrowheadStyle="fill: #333",a.labelpos="c",((f=(r=m().flowchart)==null?void 0:r.htmlLabels)!=null?f:m().htmlLabels)?(a.labelType="html",a.label='<span class="edgeLabel">'+i.text+"</span>"):(a.labelType="text",a.label=i.text.replace(Z.lineBreakRegex,`
`),i.style===void 0&&(a.style=a.style||"stroke: #333; stroke-width: 1.5px;fill:none"),a.labelStyle=a.labelStyle.replace("color:","fill:"))),t.setEdge(i.id1,i.id2,a,l)})},"addRelations"),qt=g(function(e){O=B(B({},O),e)},"setConf"),Vt=g(function(e,t,n,l){return C(this,null,function*(){var N,T,E,F;s.info("Drawing class - ",t);const i=(N=m().flowchart)!=null?N:m().class,a=m().securityLevel;s.info("config:",i);const r=(T=i==null?void 0:i.nodeSpacing)!=null?T:50,f=(E=i==null?void 0:i.rankSpacing)!=null?E:50,o=new I({multigraph:!0,compound:!0}).setGraph({rankdir:l.db.getDirection(),nodesep:r,ranksep:f,marginx:8,marginy:8}).setDefaultEdgeLabel(function(){return{}}),h=l.db.getNamespaces(),b=l.db.getClasses(),y=l.db.getRelations(),v=l.db.getNotes();s.info(y),Ht(h,o,t,l),lt(b,o,t,l),Wt(y,o),zt(v,o,y.length+1,b);let w;a==="sandbox"&&(w=D("#i"+t));const d=a==="sandbox"?D(w.nodes()[0].contentDocument.body):D("body"),c=d.select(`[id="${t}"]`),p=d.select("#"+t+" g");if(yield $t(p,o,["aggregation","extension","composition","dependency","lollipop"],"classDiagram",t),Ct.insertTitle(c,"classTitleText",(F=i==null?void 0:i.titleTopMargin)!=null?F:5,l.db.getDiagramTitle()),Tt(o,c,i==null?void 0:i.diagramPadding,i==null?void 0:i.useMaxWidth),!(i!=null&&i.htmlLabels)){const $=a==="sandbox"?w.nodes()[0].contentDocument:document,ot=$.querySelectorAll('[id="'+t+'"] .edgeLabel .label');for(const J of ot){const H=J.getBBox(),k=$.createElementNS("http://www.w3.org/2000/svg","rect");k.setAttribute("rx",0),k.setAttribute("ry",0),k.setAttribute("width",H.width),k.setAttribute("height",H.height),J.insertBefore(k,J.firstChild)}}})},"draw");function P(e){let t;switch(e){case 0:t="aggregation";break;case 1:t="extension";break;case 2:t="composition";break;case 3:t="dependency";break;case 4:t="lollipop";break;default:t="none"}return t}g(P,"getArrowMarker");var jt={setConf:qt,draw:Vt},le={parser:vt,db:V,renderer:jt,styles:pt,init:g(e=>{e.class||(e.class={}),e.class.arrowMarkerAbsolute=e.arrowMarkerAbsolute,V.clear()},"init")};export{le as diagram};

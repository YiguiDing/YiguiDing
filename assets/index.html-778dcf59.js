import{_ as t,r as p,o,c as e,a as n,f as c,w as l,b as s,e as i}from"./app-b215a924.js";const u="/assets/打砖块小游戏Demo实现记录-d38b0890.gif";const k={},r=n("h2",{id:"打砖块小游戏-demo-实现记录",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#打砖块小游戏-demo-实现记录","aria-hidden":"true"},"#"),s(" 打砖块小游戏 Demo 实现记录")],-1),d=n("p",null,[n("img",{src:u,alt:""})],-1),v=i(`<h2 id="目录" tabindex="-1"><a class="header-anchor" href="#目录" aria-hidden="true">#</a> 目录</h2><ul><li><a href="#%E6%89%93%E7%A0%96%E5%9D%97%E5%B0%8F%E6%B8%B8%E6%88%8F-demo-%E5%AE%9E%E7%8E%B0%E8%AE%B0%E5%BD%95">打砖块小游戏 Demo 实现记录</a></li><li><a href="#%E7%9B%AE%E5%BD%95">目录</a></li><li><a href="#indexts">index.ts</a></li><li><a href="#gamets">Game.ts</a></li><li><a href="#inputlistenerts">InputListener.ts</a></li><li><a href="#utilsts">utils.ts</a></li><li><a href="#ballts">Ball.ts</a></li><li><a href="#wallts">Wall.ts</a></li></ul><h2 id="index-ts" tabindex="-1"><a class="header-anchor" href="#index-ts" aria-hidden="true">#</a> index.ts</h2><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> Game <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;./Game.js&quot;</span><span class="token punctuation">;</span>

document<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&quot;DOMContentLoaded&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
 <span class="token keyword">var</span> canvas <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&quot;canvas&quot;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> HTMLCanvasElement<span class="token punctuation">;</span>
 <span class="token keyword">var</span> context <span class="token operator">=</span> canvas<span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token string">&quot;2d&quot;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> CanvasRenderingContext2D<span class="token punctuation">;</span>
 <span class="token keyword">new</span> <span class="token class-name">Game</span><span class="token punctuation">(</span>canvas<span class="token punctuation">,</span> context<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="game-ts" tabindex="-1"><a class="header-anchor" href="#game-ts" aria-hidden="true">#</a> Game.ts</h2><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> Ball <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;./Ball.js&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Wall <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;./Wall.js&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Processor <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;./Processor.js&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> InputListener <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;./InputListener.js&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Player <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;./Player.js&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">Game</span> <span class="token punctuation">{</span>
 <span class="token constant">GAME_WIDTH</span> <span class="token operator">=</span> <span class="token number">1080</span><span class="token punctuation">;</span>
 <span class="token constant">GAME_HEIGHT</span> <span class="token operator">=</span> <span class="token number">760</span><span class="token punctuation">;</span>
 ball<span class="token operator">:</span> Ball<span class="token punctuation">;</span>
 wall<span class="token operator">:</span> Wall<span class="token punctuation">;</span>
 player<span class="token operator">:</span> Player<span class="token punctuation">;</span>
 inputListener <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">InputListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
 processor <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Processor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
 <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token keyword">private</span> canvas<span class="token operator">:</span> HTMLCanvasElement<span class="token punctuation">,</span> <span class="token keyword">private</span> context<span class="token operator">:</span> CanvasRenderingContext2D<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>canvas <span class="token operator">=</span> canvas<span class="token punctuation">;</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>context <span class="token operator">=</span> context<span class="token punctuation">;</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>canvas<span class="token punctuation">.</span>width <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token constant">GAME_WIDTH</span><span class="token punctuation">;</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>canvas<span class="token punctuation">.</span>height <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token constant">GAME_HEIGHT</span><span class="token punctuation">;</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>wall <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Wall</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token constant">GAME_WIDTH</span><span class="token punctuation">,</span> <span class="token number">300</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token constant">GAME_WIDTH</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token constant">GAME_HEIGHT</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>ball <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Ball</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token constant">GAME_WIDTH</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token constant">GAME_HEIGHT</span> <span class="token operator">*</span> <span class="token number">0.9</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token constant">GAME_WIDTH</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token constant">GAME_HEIGHT</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>player <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Player</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token constant">GAME_WIDTH</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token constant">GAME_HEIGHT</span> <span class="token operator">*</span> <span class="token number">0.9</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token constant">GAME_WIDTH</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token constant">GAME_HEIGHT</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
 <span class="token punctuation">}</span>
 <span class="token function">update</span><span class="token punctuation">(</span>timeInterval<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>ball<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span>timeInterval<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>player<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span>timeInterval<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>processor<span class="token punctuation">.</span><span class="token function">process</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>processor<span class="token punctuation">.</span><span class="token function">inputHandler</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>inputListener<span class="token punctuation">.</span>inputs<span class="token punctuation">)</span><span class="token punctuation">;</span>
 <span class="token punctuation">}</span>
 <span class="token function">draw</span><span class="token punctuation">(</span>context<span class="token operator">:</span> CanvasRenderingContext2D<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  context<span class="token punctuation">.</span><span class="token function">clearRect</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token constant">GAME_WIDTH</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token constant">GAME_HEIGHT</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>ball<span class="token punctuation">.</span><span class="token function">draw</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>wall<span class="token punctuation">.</span><span class="token function">draw</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>player<span class="token punctuation">.</span><span class="token function">draw</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span><span class="token punctuation">;</span>
 <span class="token punctuation">}</span>
 <span class="token function">refresh</span><span class="token punctuation">(</span>timeInterval<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> context<span class="token operator">:</span> CanvasRenderingContext2D<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span>timeInterval<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">draw</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span><span class="token punctuation">;</span>
 <span class="token punctuation">}</span>
 <span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> self <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> last <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token keyword">function</span> <span class="token function">animate</span><span class="token punctuation">(</span>current<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
   self<span class="token punctuation">.</span><span class="token function">refresh</span><span class="token punctuation">(</span>current <span class="token operator">-</span> last<span class="token punctuation">,</span> self<span class="token punctuation">.</span>context<span class="token punctuation">)</span><span class="token punctuation">;</span>
   last <span class="token operator">=</span> current<span class="token punctuation">;</span>
   <span class="token function">requestAnimationFrame</span><span class="token punctuation">(</span>animate<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token function">animate</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
 <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="inputlistener-ts" tabindex="-1"><a class="header-anchor" href="#inputlistener-ts" aria-hidden="true">#</a> InputListener.ts</h2><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> ValueOf <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;./utils.js&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">type</span> <span class="token class-name">KeyMapValue</span> <span class="token operator">=</span> ValueOf<span class="token operator">&lt;</span><span class="token keyword">typeof</span> InputListener<span class="token punctuation">.</span>KeyMap<span class="token operator">&gt;</span><span class="token punctuation">;</span>
<span class="token keyword">export</span> <span class="token keyword">type</span> <span class="token class-name">TypeInputs</span> <span class="token operator">=</span> <span class="token builtin">Array</span><span class="token operator">&lt;</span>KeyMapValue<span class="token operator">&gt;</span><span class="token punctuation">;</span>
<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">InputListener</span> <span class="token punctuation">{</span>
 <span class="token keyword">static</span> KeyMap <span class="token operator">=</span> <span class="token punctuation">{</span>
  PressRight<span class="token operator">:</span> <span class="token string">&quot;ArrowRight&quot;</span><span class="token punctuation">,</span>
  PressLeft<span class="token operator">:</span> <span class="token string">&quot;ArrowLeft&quot;</span><span class="token punctuation">,</span>
  PressUp<span class="token operator">:</span> <span class="token string">&quot;ArrowUp&quot;</span><span class="token punctuation">,</span>
  PressDown<span class="token operator">:</span> <span class="token string">&quot;ArrowDown&quot;</span><span class="token punctuation">,</span>
  PressSpace<span class="token operator">:</span> <span class="token string">&quot; &quot;</span><span class="token punctuation">,</span>
  Enter<span class="token operator">:</span> <span class="token string">&quot;Enter&quot;</span><span class="token punctuation">,</span>
  Escape<span class="token operator">:</span> <span class="token string">&quot;Escape&quot;</span>
 <span class="token punctuation">}</span> <span class="token keyword">as</span> <span class="token keyword">const</span><span class="token punctuation">;</span> <span class="token comment">// const 可以保证ValueOf能起作用</span>
 inputs<span class="token operator">:</span> TypeInputs <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
 <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">listening</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
 <span class="token punctuation">}</span>
 <span class="token function">listening</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  window<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&quot;keydown&quot;</span><span class="token punctuation">,</span> event <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
   <span class="token keyword">let</span> key <span class="token operator">=</span> event<span class="token punctuation">.</span>key <span class="token keyword">as</span> KeyMapValue<span class="token punctuation">;</span>
   <span class="token keyword">if</span> <span class="token punctuation">(</span>Object<span class="token punctuation">.</span><span class="token function">values</span><span class="token punctuation">(</span>InputListener<span class="token punctuation">.</span>KeyMap<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>inputs<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>inputs<span class="token punctuation">.</span><span class="token function">unshift</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 放到开头，表示先按下的键优先级高</span>
   <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  window<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&quot;keyup&quot;</span><span class="token punctuation">,</span> event <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
   <span class="token keyword">let</span> key <span class="token operator">=</span> event<span class="token punctuation">.</span>key <span class="token keyword">as</span> KeyMapValue<span class="token punctuation">;</span>
   <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>inputs<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>inputs<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>inputs<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
 <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="utils-ts" tabindex="-1"><a class="header-anchor" href="#utils-ts" aria-hidden="true">#</a> utils.ts</h2><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">RandomRange</span><span class="token punctuation">(</span>from<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> to<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
 <span class="token keyword">return</span> Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span>to <span class="token operator">-</span> from<span class="token punctuation">)</span> <span class="token operator">+</span> from<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">export</span> <span class="token keyword">type</span> <span class="token class-name">ValueOf<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token constant">T</span><span class="token punctuation">[</span><span class="token keyword">keyof</span> <span class="token constant">T</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">type</span> <span class="token class-name">Rect</span> <span class="token operator">=</span> <span class="token punctuation">{</span> posX<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span> posY<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span> width<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span> height<span class="token operator">:</span> <span class="token builtin">number</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">export</span> <span class="token keyword">type</span> <span class="token class-name">Point</span> <span class="token operator">=</span> <span class="token punctuation">{</span> posX<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span> posY<span class="token operator">:</span> <span class="token builtin">number</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">export</span> <span class="token keyword">type</span> <span class="token class-name">Circle</span> <span class="token operator">=</span> <span class="token punctuation">{</span> posX<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span> posY<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span> radius<span class="token operator">:</span> <span class="token builtin">number</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token comment">// 碰撞检测,判断一个坐标是否在一个矩形内</span>
<span class="token keyword">function</span> <span class="token function">collision_Rect_Point</span><span class="token punctuation">(</span>rect<span class="token operator">:</span> Rect<span class="token punctuation">,</span> point<span class="token operator">:</span> Point<span class="token punctuation">)</span> <span class="token punctuation">{</span>
 <span class="token keyword">return</span> rect<span class="token punctuation">.</span>posX <span class="token operator">&lt;</span> point<span class="token punctuation">.</span>posX <span class="token operator">&amp;&amp;</span> point<span class="token punctuation">.</span>posX <span class="token operator">&lt;</span> rect<span class="token punctuation">.</span>posX <span class="token operator">+</span> rect<span class="token punctuation">.</span>width <span class="token operator">&amp;&amp;</span> rect<span class="token punctuation">.</span>posY <span class="token operator">&lt;</span> point<span class="token punctuation">.</span>posY <span class="token operator">&amp;&amp;</span> point<span class="token punctuation">.</span>posY <span class="token operator">&lt;</span> rect<span class="token punctuation">.</span>posY <span class="token operator">+</span> rect<span class="token punctuation">.</span>height<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">// 碰撞检测，判断一个圆和一个矩形是否碰撞</span>
<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">collision_Rect_Circle</span><span class="token punctuation">(</span>rect<span class="token operator">:</span> Rect<span class="token punctuation">,</span> circle<span class="token operator">:</span> Circle<span class="token punctuation">)</span> <span class="token punctuation">{</span>
 <span class="token comment">// 只需要判断这个圆的中心坐标是否在一个大矩形之内，这个大矩形就是将原矩形上下左右的边长拓宽圆的一倍半径</span>
 <span class="token keyword">return</span> <span class="token function">collision_Rect_Point</span><span class="token punctuation">(</span>
  <span class="token punctuation">{</span>
   posX<span class="token operator">:</span> rect<span class="token punctuation">.</span>posX <span class="token operator">-</span> circle<span class="token punctuation">.</span>radius<span class="token punctuation">,</span>
   posY<span class="token operator">:</span> rect<span class="token punctuation">.</span>posY <span class="token operator">-</span> circle<span class="token punctuation">.</span>radius<span class="token punctuation">,</span>
   width<span class="token operator">:</span> rect<span class="token punctuation">.</span>width <span class="token operator">+</span> <span class="token number">2</span> <span class="token operator">*</span> circle<span class="token punctuation">.</span>radius<span class="token punctuation">,</span>
   height<span class="token operator">:</span> rect<span class="token punctuation">.</span>height <span class="token operator">+</span> <span class="token number">2</span> <span class="token operator">*</span> circle<span class="token punctuation">.</span>radius
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span> <span class="token operator">...</span>circle <span class="token punctuation">}</span>
 <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="ball-ts" tabindex="-1"><a class="header-anchor" href="#ball-ts" aria-hidden="true">#</a> Ball.ts</h2><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> RandomRange<span class="token punctuation">,</span> Rect <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;./utils.js&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">Ball</span> <span class="token punctuation">{</span>
 radius<span class="token operator">:</span> <span class="token builtin">number</span> <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>
 fillStyle<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">=</span> <span class="token string">&quot;white&quot;</span><span class="token punctuation">;</span>
 strokeStyle<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">=</span> <span class="token string">&quot;whitesmoke&quot;</span><span class="token punctuation">;</span>
 speedX<span class="token operator">:</span> <span class="token builtin">number</span> <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">sign</span><span class="token punctuation">(</span><span class="token function">RandomRange</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token function">RandomRange</span><span class="token punctuation">(</span><span class="token number">0.4</span><span class="token punctuation">,</span> <span class="token number">0.5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
 speedY<span class="token operator">:</span> <span class="token builtin">number</span> <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">sign</span><span class="token punctuation">(</span><span class="token function">RandomRange</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token function">RandomRange</span><span class="token punctuation">(</span><span class="token number">0.4</span><span class="token punctuation">,</span> <span class="token number">0.5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
 <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token keyword">public</span> posX<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> <span class="token keyword">public</span> posY<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> <span class="token keyword">public</span> <span class="token constant">GAME_WIDTH</span><span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> <span class="token keyword">public</span> <span class="token constant">GAME_HEIGHT</span><span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>posX <span class="token operator">=</span> posX<span class="token punctuation">;</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>posY <span class="token operator">=</span> posY<span class="token punctuation">;</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token constant">GAME_HEIGHT</span> <span class="token operator">=</span> <span class="token constant">GAME_HEIGHT</span><span class="token punctuation">;</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token constant">GAME_WIDTH</span> <span class="token operator">=</span> <span class="token constant">GAME_WIDTH</span><span class="token punctuation">;</span>
 <span class="token punctuation">}</span>
 <span class="token function">reverseSpeedX</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>speedX <span class="token operator">=</span> <span class="token operator">-</span><span class="token keyword">this</span><span class="token punctuation">.</span>speedX<span class="token punctuation">;</span>
 <span class="token punctuation">}</span>
 <span class="token function">reverseSpeedY</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>speedY <span class="token operator">=</span> <span class="token operator">-</span><span class="token keyword">this</span><span class="token punctuation">.</span>speedY<span class="token punctuation">;</span>
 <span class="token punctuation">}</span>
 <span class="token function">move</span><span class="token punctuation">(</span>timeInterval<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>posX <span class="token operator">+=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>speedX <span class="token operator">*</span> timeInterval<span class="token punctuation">;</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>posY <span class="token operator">+=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>speedY <span class="token operator">*</span> timeInterval<span class="token punctuation">;</span>
 <span class="token punctuation">}</span>
 <span class="token function">_update</span><span class="token punctuation">(</span>timeInterval<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">move</span><span class="token punctuation">(</span>timeInterval<span class="token punctuation">)</span><span class="token punctuation">;</span>
 <span class="token punctuation">}</span>
 <span class="token function">update</span><span class="token punctuation">(</span>timeInterval<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> step <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> <span class="token comment">// 按1ms模拟</span>
  <span class="token keyword">do</span> <span class="token punctuation">{</span>
   <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">_update</span><span class="token punctuation">(</span>step<span class="token punctuation">)</span><span class="token punctuation">;</span>
   timeInterval <span class="token operator">-=</span> step<span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">while</span> <span class="token punctuation">(</span>timeInterval <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
 <span class="token punctuation">}</span>
 <span class="token function">draw</span><span class="token punctuation">(</span>context<span class="token operator">:</span> CanvasRenderingContext2D<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  context<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  context<span class="token punctuation">.</span><span class="token function">beginPath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  context<span class="token punctuation">.</span><span class="token function">arc</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>posX<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>posY<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>radius<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> Math<span class="token punctuation">.</span><span class="token constant">PI</span> <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  context<span class="token punctuation">.</span><span class="token function">closePath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  context<span class="token punctuation">.</span>strokeStyle <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>strokeStyle<span class="token punctuation">;</span>
  context<span class="token punctuation">.</span><span class="token function">stroke</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  context<span class="token punctuation">.</span>fillStyle <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>fillStyle<span class="token punctuation">;</span>
  context<span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  context<span class="token punctuation">.</span><span class="token function">restore</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
 <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="wall-ts" tabindex="-1"><a class="header-anchor" href="#wall-ts" aria-hidden="true">#</a> Wall.ts</h2><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">Block</span> <span class="token punctuation">{</span>
 <span class="token function">constructor</span><span class="token punctuation">(</span>
  <span class="token keyword">public</span> posX<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span>
  <span class="token keyword">public</span> posY<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span>
  <span class="token keyword">public</span> width<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span>
  <span class="token keyword">public</span> height<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span>
  <span class="token keyword">public</span> fillStyle<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span>
  <span class="token keyword">public</span> strokeStyle<span class="token operator">:</span> <span class="token builtin">string</span>
 <span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>posX <span class="token operator">=</span> posX<span class="token punctuation">;</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>posY <span class="token operator">=</span> posY<span class="token punctuation">;</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>width <span class="token operator">=</span> width<span class="token punctuation">;</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>height <span class="token operator">=</span> height<span class="token punctuation">;</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>fillStyle <span class="token operator">=</span> fillStyle<span class="token punctuation">;</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>strokeStyle <span class="token operator">=</span> strokeStyle<span class="token punctuation">;</span>
 <span class="token punctuation">}</span>
 <span class="token function">update</span><span class="token punctuation">(</span>timeInterval<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
 <span class="token function">draw</span><span class="token punctuation">(</span>context<span class="token operator">:</span> CanvasRenderingContext2D<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  context<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  context<span class="token punctuation">.</span>fillStyle <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>fillStyle<span class="token punctuation">;</span>
  context<span class="token punctuation">.</span><span class="token function">fillRect</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>posX<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>posY<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>width<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>height<span class="token punctuation">)</span><span class="token punctuation">;</span>
  context<span class="token punctuation">.</span>strokeStyle <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>strokeStyle<span class="token punctuation">;</span>
  context<span class="token punctuation">.</span><span class="token function">strokeRect</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>posX<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>posY<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>width<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>height<span class="token punctuation">)</span><span class="token punctuation">;</span>
  context<span class="token punctuation">.</span><span class="token function">restore</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
 <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">Wall</span> <span class="token punctuation">{</span>
 blocks<span class="token operator">:</span> <span class="token builtin">Array</span><span class="token operator">&lt;</span>Block<span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
 <span class="token function">constructor</span><span class="token punctuation">(</span>
  <span class="token keyword">public</span> width<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span>
  <span class="token keyword">public</span> height<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span>
  <span class="token keyword">public</span> <span class="token constant">WALL_MAX_WIDTH</span><span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span>
  <span class="token keyword">public</span> <span class="token constant">WALL_MAX_HEIGHT</span><span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span>
  <span class="token keyword">public</span> <span class="token constant">GAME_WIDTH</span><span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span>
  <span class="token keyword">public</span> <span class="token constant">GAME_HEIGHT</span><span class="token operator">:</span> <span class="token builtin">number</span>
 <span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>width <span class="token operator">=</span> width<span class="token punctuation">;</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>height <span class="token operator">=</span> height<span class="token punctuation">;</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token constant">WALL_MAX_WIDTH</span> <span class="token operator">=</span> <span class="token constant">WALL_MAX_WIDTH</span><span class="token punctuation">;</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token constant">WALL_MAX_HEIGHT</span> <span class="token operator">=</span> <span class="token constant">WALL_MAX_HEIGHT</span><span class="token punctuation">;</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token constant">GAME_WIDTH</span> <span class="token operator">=</span> <span class="token constant">GAME_WIDTH</span><span class="token punctuation">;</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token constant">GAME_HEIGHT</span> <span class="token operator">=</span> <span class="token constant">GAME_HEIGHT</span><span class="token punctuation">;</span>

  <span class="token keyword">let</span> <span class="token constant">BLOCK_WIDTH</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token constant">WALL_MAX_WIDTH</span> <span class="token operator">/</span> <span class="token keyword">this</span><span class="token punctuation">.</span>width<span class="token punctuation">;</span>
  <span class="token keyword">let</span> <span class="token constant">BLOCK_HEIGHT</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token constant">WALL_MAX_HEIGHT</span> <span class="token operator">/</span> <span class="token keyword">this</span><span class="token punctuation">.</span>height<span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>width<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
   <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>height<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>blocks<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Block</span><span class="token punctuation">(</span>i <span class="token operator">*</span> <span class="token constant">BLOCK_WIDTH</span><span class="token punctuation">,</span> j <span class="token operator">*</span> <span class="token constant">BLOCK_HEIGHT</span><span class="token punctuation">,</span> <span class="token constant">BLOCK_WIDTH</span><span class="token punctuation">,</span> <span class="token constant">BLOCK_HEIGHT</span><span class="token punctuation">,</span> <span class="token string">&quot;gray&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;black&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
 <span class="token punctuation">}</span>
 <span class="token function">update</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
  
 <span class="token punctuation">}</span>
 <span class="token function">draw</span><span class="token punctuation">(</span>context<span class="token operator">:</span> CanvasRenderingContext2D<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>blocks<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>item <span class="token operator">=&gt;</span> item<span class="token punctuation">.</span><span class="token function">draw</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
 <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,14);function m(b,y){const a=p("RouterLink");return o(),e("div",null,[r,d,n("p",null,[c(a,{to:"/%E9%A1%B9%E7%9B%AE/%E6%89%93%E7%A0%96%E5%9D%97%E5%B0%8F%E6%B8%B8%E6%88%8FDemo%E5%AE%9E%E7%8E%B0%E8%AE%B0%E5%BD%95/demo_jdfowefjwi/index.html"},{default:l(()=>[s("Demo地址")]),_:1})]),v])}const h=t(k,[["render",m],["__file","index.html.vue"]]);export{h as default};

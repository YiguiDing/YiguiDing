import{_ as i,r as u,c as k,d as e,w as s,b as p,a as n,o as r,e as a}from"./app-BSX0n7Vp.js";const d="/assets/image-DbP2oxL4.png",b="/assets/image-1-BwzsEEIh.png",f={},h=p(`<h1 id="node-addons学习笔记" tabindex="-1"><a class="header-anchor" href="#node-addons学习笔记"><span>Node-Addons学习笔记</span></a></h1><h2 id="目录" tabindex="-1"><a class="header-anchor" href="#目录"><span>目录</span></a></h2><ul><li><a href="#node-addons%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0">Node-Addons学习笔记</a><ul><li><a href="#%E7%9B%AE%E5%BD%95">目录</a></li><li><a href="#c-addons">C++ addons</a></li><li><a href="#node-api">Node-API</a></li><li><a href="#node-addon-api">node-addon-api</a></li><li><a href="#getting-started">getting-started</a><ul><li><a href="#%E5%AE%89%E8%A3%85%E4%BE%9D%E8%B5%96">安装依赖</a></li><li><a href="#%E7%BC%96%E5%86%99bindinggyp%E6%96%87%E4%BB%B6">编写binding.gyp文件</a></li><li><a href="#%E7%BC%96%E5%86%99%E6%8F%92%E4%BB%B6">编写插件</a></li><li><a href="#%E7%BC%96%E5%86%99build%E8%84%9A%E6%9C%AC">编写build脚本</a></li><li><a href="#%E5%AE%89%E8%A3%85%E7%BC%96%E8%AF%91%E7%8E%AF%E5%A2%83">安装编译环境</a></li><li><a href="#%E9%85%8D%E7%BD%AEvscode%E5%AE%9E%E7%8E%B0%E4%BB%A3%E7%A0%81%E6%8F%90%E7%A4%BA">配置vscode实现代码提示</a></li><li><a href="#%E7%BC%96%E8%AF%91%E6%8F%92%E4%BB%B6">编译插件</a></li><li><a href="#%E7%BC%96%E5%86%99indexjs">编写index.js</a></li><li><a href="#%E6%B5%8B%E8%AF%95">测试</a></li><li><a href="#%E9%A2%84%E6%9E%84%E5%BB%BA">预构建</a></li></ul></li><li><a href="#%E5%AF%B9%E8%B1%A1%E7%BB%A7%E6%89%BF%E5%85%B3%E7%B3%BB%E5%9B%BE">对象继承关系图</a></li><li><a href="#addon%E6%8F%92%E4%BB%B6%E7%B1%BB">addon插件类</a></li><li><a href="#function%E5%87%BD%E6%95%B0">function函数</a><ul><li><a href="#%E7%A4%BA%E4%BE%8B">示例</a></li><li><a href="#%E7%B1%BB%E5%9E%8B%E5%AE%9A%E4%B9%89">类型定义</a><ul><li><a href="#napifunctionvoidcallback">Napi::Function::VoidCallback</a></li><li><a href="#napifunctioncallback">Napi::Function::Callback</a></li></ul></li><li><a href="#%E6%9E%84%E9%80%A0%E5%87%BD%E6%95%B0">构造函数</a></li><li><a href="#%E6%9E%84%E9%80%A0%E5%87%BD%E6%95%B0-1">构造函数</a></li><li><a href="#new">New</a></li><li><a href="#new%E5%8F%82%E6%95%B0%E6%9C%80%E5%A4%9A%E7%9A%84%E9%87%8D%E8%BD%BD">New（参数最多的重载）</a></li><li><a href="#call">Call</a></li><li><a href="#call-1">Call</a></li><li><a href="#makecallback%E5%BC%82%E6%AD%A5%E5%9B%9E%E8%B0%83%E6%89%A7%E8%A1%8C%E5%87%BD%E6%95%B0">MakeCallback异步回调执行函数</a></li><li><a href="#operator%E6%93%8D%E4%BD%9C%E7%AC%A6%E9%87%8D%E8%BD%BD">operator操作符重载</a></li><li><a href="#%E6%A1%88%E4%BE%8Bfunction_example">案例：function_example</a></li><li><a href="#%E6%A1%88%E4%BE%8Bfunction_arguments%E5%87%BD%E6%95%B0%E5%8F%82%E6%95%B0">案例：function_arguments函数参数</a></li><li><a href="#%E6%A1%88%E4%BE%8Bcallback_%E5%87%BD%E6%95%B0%E5%9B%9E%E8%B0%83">案例：callback_函数回调</a></li><li><a href="#%E6%A1%88%E4%BE%8Bfactory_of_function">案例：Factory_Of_function</a></li></ul></li><li><a href="#object%E5%AF%B9%E8%B1%A1">Object对象</a><ul><li><a href="#%E7%A4%BA%E4%BE%8B-1">示例</a></li><li><a href="#%E6%96%B9%E6%B3%95">方法</a><ul><li><a href="#%E7%A9%BA%E6%9E%84%E9%80%A0%E5%87%BD%E6%95%B0">空构造函数</a></li><li><a href="#%E6%9E%84%E9%80%A0%E5%87%BD%E6%95%B0-2">构造函数</a></li><li><a href="#new-1">New()</a></li><li><a href="#set">Set()</a></li><li><a href="#delete">Delete()</a></li><li><a href="#get">Get()</a></li><li><a href="#has">Has()</a></li><li><a href="#instanceof">InstanceOf()</a></li><li><a href="#addfinalizer">AddFinalizer()</a></li><li><a href="#addfinalizer-1">AddFinalizer()</a></li><li><a href="#getpropertynames">GetPropertyNames()</a></li><li><a href="#hasownproperty">HasOwnProperty()</a></li><li><a href="#defineproperty">DefineProperty()</a></li><li><a href="#defineproperties">DefineProperties()</a></li><li><a href="#freeze">Freeze()</a></li><li><a href="#seal">Seal()</a></li><li><a href="#operator">operator</a></li><li><a href="#begin">begin()</a></li><li><a href="#end">end()</a></li></ul></li><li><a href="#%E8%BF%AD%E4%BB%A3%E5%99%A8">迭代器</a></li><li><a href="#%E5%B8%B8%E9%87%8F%E8%BF%AD%E4%BB%A3%E5%99%A8">常量迭代器</a><ul><li><a href="#operator-1"><code>operator++()</code></a></li><li><a href="#operator-2"><code>operator==</code></a></li><li><a href="#operator-3"><code>operator!=</code></a></li><li><a href="#operator-4"><code>operator*()</code></a></li><li><a href="#%E7%A4%BA%E4%BE%8B-2">示例</a></li></ul></li><li><a href="#%E9%9D%9E%E5%B8%B8%E9%87%8F%E8%BF%AD%E4%BB%A3%E5%99%A8">非常量迭代器</a><ul><li><a href="#operator-5"><code>operator++()</code></a></li><li><a href="#operator-6"><code>operator==</code></a></li><li><a href="#operator-7"><code>operator!=</code></a></li><li><a href="#operator-8"><code>operator*()</code></a></li><li><a href="#%E7%A4%BA%E4%BE%8B-3">示例</a></li></ul></li><li><a href="#%E6%A1%88%E4%BE%8Bfactory_of_object">案例：Factory_Of_Object</a></li></ul></li><li><a href="#objectwrap">ObjectWrap</a><ul><li><a href="#%E6%A1%88%E4%BE%8Bobjectwrap">案例：objectWrap</a></li><li><a href="#%E6%A1%88%E4%BE%8Bfactory_of_objectwrap">案例：factory_of_objectWrap</a></li><li><a href="#%E6%A1%88%E4%BE%8Bpassing_wrapped_obj_to_native">案例：passing_wrapped_obj_to_native</a></li></ul></li><li><a href="#arraybuffer">ArrayBuffer</a><ul><li><a href="#new%E5%AD%97%E8%8A%82%E9%95%BF%E5%BA%A6"><code>New(字节长度)</code></a></li><li><a href="#new%E5%A4%96%E9%83%A8%E6%95%B0%E6%8D%AE"><code>New(外部数据)</code></a></li><li><a href="#new%E5%B8%A6%E6%9E%90%E6%9E%84%E5%9B%9E%E8%B0%83"><code>New（带析构回调）</code></a></li><li><a href="#new%E5%B8%A6%E6%9E%90%E6%9E%84%E5%9B%9E%E8%B0%83%E5%92%8C%E6%8F%90%E7%A4%BA"><code>New（带析构回调和提示）</code></a></li><li><a href="#%E6%9E%84%E9%80%A0%E5%87%BD%E6%95%B0-3"><code>构造函数()</code></a></li><li><a href="#%E6%9E%84%E9%80%A0%E5%87%BD%E6%95%B0envarraybuffer"><code>构造函数(env,arrayBuffer)</code></a></li><li><a href="#bytelength"><code>ByteLength()</code></a></li><li><a href="#void-data"><code>void* Data()</code></a></li><li><a href="#void-detach"><code>void Detach()</code></a></li><li><a href="#bool-isdetached"><code>bool IsDetached()</code></a></li><li><a href="#%E6%A1%88%E4%BE%8Bpassing_array_buffer_to_native">案例：passing_array_buffer_to_native</a></li></ul></li><li><a href="#typedarray">TypedArray</a><ul><li><a href="#%E6%9E%84%E9%80%A0%E5%87%BD%E6%95%B0-4"><code>构造函数()</code></a></li><li><a href="#%E6%9E%84%E9%80%A0%E5%87%BD%E6%95%B0envtypedarray"><code>构造函数(env,typedArray)</code></a></li><li><a href="#napi_typedarray_type-typedarraytype"><code>napi_typedarray_type TypedArrayType()</code></a></li><li><a href="#arraybuffer-1"><code>ArrayBuffer()</code></a></li><li><a href="#uint8_t-elementsize"><code>uint8_t ElementSize()</code></a></li><li><a href="#size_t-elementlength"><code>size_t ElementLength()</code></a></li><li><a href="#size_t-byteoffset"><code>size_t ByteOffset()</code></a></li><li><a href="#size_t-bytelength"><code>size_t ByteLength()</code></a></li><li><a href="#%E6%A1%88%E4%BE%8Bpassing_typed_array_to_native">案例：passing_typed_array_to_native</a></li></ul></li><li><a href="#reference">Reference</a><ul><li><a href="#functionreference">FunctionReference</a><ul><li><a href="#%E6%A1%88%E4%BE%8Bfunction_reference">案例：function_reference</a></li></ul></li></ul></li><li><a href="#asyncworker">AsyncWorker</a><ul><li><a href="#%E4%BD%9C%E7%94%A8">作用</a></li><li><a href="#%E4%BD%BF%E7%94%A8%E5%9C%BA%E6%99%AF">使用场景</a></li><li><a href="#queue-%E6%96%B9%E6%B3%95"><code>Queue</code> 方法</a></li><li><a href="#execute-%E5%92%8C-onok-%E7%9A%84%E9%87%8D%E5%86%99"><code>Execute</code> 和 <code>OnOK</code> 的重写</a></li><li><a href="#%E7%BA%BF%E7%A8%8B%E6%89%A7%E8%A1%8C%E7%8E%AF%E5%A2%83">线程执行环境</a></li><li><a href="#%E5%A6%82%E4%BD%95%E5%AE%89%E5%85%A8%E8%B0%83%E7%94%A8-javascript-%E5%87%BD%E6%95%B0">如何安全调用 JavaScript 函数</a></li><li><a href="#%E5%B7%A5%E4%BD%9C%E7%BA%BF%E7%A8%8B%E6%B1%A0">工作线程池</a></li><li><a href="#%E4%B8%BA%E4%BB%80%E4%B9%88-execute-%E6%96%B9%E6%B3%95%E4%B8%8D%E4%BC%9A%E4%BA%92%E7%9B%B8%E9%98%BB%E5%A1%9E">为什么 <code>Execute</code> 方法不会互相阻塞</a></li><li><a href="#%E6%A1%88%E4%BE%8Bmy_async_worker">案例：my_async_worker</a></li><li><a href="#%E6%A1%88%E4%BE%8Basync_worker_call_js_function">案例：async_worker_call_js_function</a></li><li><a href="#%E6%A1%88%E4%BE%8Basync_worker_promise">案例：async_worker_promise</a></li></ul></li><li><a href="#%E7%BA%BF%E7%A8%8B%E5%AE%89%E5%85%A8%E5%87%BD%E6%95%B0threadsafe_function">线程安全函数threadsafe_function</a><ul><li><a href="#%E6%9E%84%E9%80%A0%E5%87%BD%E6%95%B0-5"><code>构造函数()</code></a></li><li><a href="#%E6%9E%84%E9%80%A0%E5%87%BD%E6%95%B0tsfn"><code>构造函数(tsfn)</code></a></li><li><a href="#new-2"><code>New(...)</code></a></li><li><a href="#napi_status-acquire"><code>napi_status Acquire()</code></a></li><li><a href="#napi_status-release"><code>napi_status Release()</code></a></li><li><a href="#napi_status-abort"><code>napi_status Abort()</code></a></li><li><a href="#napi_status-blockingcallnonblockingcall"><code>napi_status BlockingCall()/NonBlockingCall()</code></a></li><li><a href="#%E6%A1%88%E4%BE%8Bthread_safe_function_demo">案例：thread_safe_function_demo</a></li></ul></li></ul></li></ul><h2 id="c-addons" tabindex="-1"><a class="header-anchor" href="#c-addons"><span>C++ addons</span></a></h2><p><strong>C++插件(C++ addons)</strong></p><ul><li><code>C++插件(C++ addons)</code>是用C++写的动态链接库。</li><li>可以使用<code>require()</code>函数，像加载普通<code>nodejs modules</code>一样可以加载<code>C++插件</code>.</li><li>插件(Addons)提供了JavaScript 和 C/C++ 之间的接口.</li></ul><p><strong>插件（addons）的三种实现方式</strong></p><ul><li><code>Node-API</code>(推荐的方式)</li><li><code>nan</code>（旧接口）</li><li>直接使用内部 V8、libuv 和 <code>Node.js libraries</code></li></ul><h2 id="node-api" tabindex="-1"><a class="header-anchor" href="#node-api"><span>Node-API</span></a></h2><p><strong>Node-API简介</strong></p><ul><li>以前称为 <code>N-API</code></li><li>是一个用于构建nodejs原生插件的接口（an API for building native Addons.）</li><li>独立于底层 JavaScript 运行时（例如 V8），并作为 Node.js 本身的一部分进行维护。</li><li>该 API 将在 Node.js 版本之间保持稳定 <ul><li>插件与底层 JavaScript 引擎的更改隔离开来</li><li>允许为一个主要版本编译的模块可以在 Node.js 的更高主要版本上运行，而无需重新编译。</li></ul></li></ul><p><strong>Node-API特点</strong></p><ul><li><code>Node-API</code> 公开的 API 通常用于<strong>创建和操作 JavaScript 值</strong>。</li><li>所有 <code>Node-API</code> 调用都会<strong>返回类型为napi_status的状态码</strong>。表示调用成功或失败。</li><li>API 的<strong>返回值</strong>通过<strong>传递输出参数获取</strong></li><li>所有 JavaScript 值都被抽象为名为<code>napi_value</code>的不透明类型。</li><li>如果出现错误状态代码，可以使用<code>napi_get_last_error_info()</code>获取附加信息。</li></ul><h2 id="node-addon-api" tabindex="-1"><a class="header-anchor" href="#node-addon-api"><span>node-addon-api</span></a></h2><p><strong><code>node-addon-api</code>和<code>Node-API</code>的关联</strong></p><ul><li><code>Node-API</code> 是一种 <code>C API</code>，可确保跨不同<code>Node.js</code>版本和不同编译器级别的 ABI(应用程序二进制接口) 稳定性。</li><li><code>node-addon-api</code> 是 <code>Node-API</code> 的<code>C++</code>封装（wrapper module） 因为<code>C++</code>API更容易使用。</li><li><code>node-addon-api</code> 是编写调用 <code>Node-API</code> 的代码的更有效方法。</li><li>该封装提供了<strong>可内联</strong>的 C++ API <ul><li><strong>可内联(inlinable)</strong>: 内联展开是编译器的一个优化技术，其中函数体被直接插入到每一个调用该函数的地方，而不是进行常规的函数调用。这样做可以消除函数调用的开销，并可能改善执行速度，特别是当函数体很小并且频繁被调用时。<br> 使用 <code>node-addon-api</code> 编译构建二进制文件将取决于 Node.js 导出的基于 Node-API C 的函数的符号。</li></ul></li></ul><p><strong><code>node-addon-api</code>和<code>Node-API</code>的案例代码</strong></p><p>使用<code>node-addon-api</code>（c++接口）创建对象</p><pre><code class="language-cpp">Object obj <span class="token operator">=</span> <span class="token class-name">Object</span><span class="token double-colon punctuation">::</span><span class="token function">New</span><span class="token punctuation">(</span>env<span class="token punctuation">)</span><span class="token punctuation">;</span>
obj<span class="token punctuation">[</span><span class="token string">&quot;foo&quot;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token class-name">String</span><span class="token double-colon punctuation">::</span><span class="token function">New</span><span class="token punctuation">(</span>env<span class="token punctuation">,</span> <span class="token string">&quot;bar&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><p>使用<code>Node-API</code>（c接口）创建对象</p><pre><code class="language-c">napi_status status<span class="token punctuation">;</span>
napi_value object<span class="token punctuation">,</span> string<span class="token punctuation">;</span>
status <span class="token operator">=</span> <span class="token function">napi_create_object</span><span class="token punctuation">(</span>env<span class="token punctuation">,</span> <span class="token operator">&amp;</span>object<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>status <span class="token operator">!=</span> napi_ok<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">napi_throw_error</span><span class="token punctuation">(</span>env<span class="token punctuation">,</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

status <span class="token operator">=</span> <span class="token function">napi_create_string_utf8</span><span class="token punctuation">(</span>env<span class="token punctuation">,</span> <span class="token string">&quot;bar&quot;</span><span class="token punctuation">,</span> NAPI_AUTO_LENGTH<span class="token punctuation">,</span> <span class="token operator">&amp;</span>string<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>status <span class="token operator">!=</span> napi_ok<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">napi_throw_error</span><span class="token punctuation">(</span>env<span class="token punctuation">,</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

status <span class="token operator">=</span> <span class="token function">napi_set_named_property</span><span class="token punctuation">(</span>env<span class="token punctuation">,</span> object<span class="token punctuation">,</span> <span class="token string">&quot;foo&quot;</span><span class="token punctuation">,</span> string<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>status <span class="token operator">!=</span> napi_ok<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">napi_throw_error</span><span class="token punctuation">(</span>env<span class="token punctuation">,</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><h2 id="getting-started" tabindex="-1"><a class="header-anchor" href="#getting-started"><span>getting-started</span></a></h2><h3 id="安装依赖" tabindex="-1"><a class="header-anchor" href="#安装依赖"><span>安装依赖</span></a></h3><pre><code class="language-bash"><span class="token comment"># 初始化项目</span>
<span class="token function">npm</span> init <span class="token parameter variable">-y</span>
<span class="token comment"># 安装</span>
<span class="token function">npm</span> i node-addon-api bindings
<span class="token comment"># 全局安装构建工具</span>
<span class="token function">npm</span> i node-gyp <span class="token parameter variable">-g</span>
</code></pre><h3 id="编写binding-gyp文件" tabindex="-1"><a class="header-anchor" href="#编写binding-gyp文件"><span>编写binding.gyp文件</span></a></h3><ul><li>node-gyp是编写Node.js插件的默认标准构建工具。</li><li>基于Google的gyp构建工具，该工具抽象了许多与跨平台构建相关的繁琐问题。</li><li>node-gyp使用一个名为<code>binding.gyp</code>的文件，该文件位于插件项目的根目录下。</li><li><code>binding.gyp</code>文件包含所有构建配置，使用类似JSON的语法进行组织。</li><li>如何编写？ <ul><li>指定源文件 <ul><li>target_name 必须设置为与插件初始化代码中的值相同</li><li>sources 源文件</li></ul></li><li>将node-addon-api作为依赖项引用，有三种写法 <ol><li><code>node_addon_api</code>关闭 C++ 异常处理功能</li><li><code>node_addon_api_except</code>启用 C++ 异常处理功能</li><li><code>node_addon_api_maybe</code> 不启用C++异常处理功能，但启用node-addon-api的安全API类型保护，以确保正确的异常处理模式</li></ol><ul><li>说明： <ul><li>底层的ABI稳定的C-API 并不抛出或处理 C++ 异常，</li><li>但 Node-API 的 C++ 包装器类可以选择性地集成 C++ 和 JavaScript 异常处理。</li></ul></li></ul></li></ul></li></ul><pre><code class="language-json"><span class="token comment">// binding.gyp</span>
<span class="token punctuation">{</span>
  <span class="token property">&quot;targets&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token punctuation">{</span>
      <span class="token property">&quot;target_name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;hello_world&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;sources&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;src/hello_world.cc&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
      <span class="token property">&quot;include_dirs&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
        <span class="token comment">// 可以不写</span>
        <span class="token comment">// &quot;&lt;!@(node -p \\&quot;require(&#39;node-addon-api&#39;).include\\&quot;)&quot;</span>
      <span class="token punctuation">]</span><span class="token punctuation">,</span>
      <span class="token property">&quot;dependencies&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
       <span class="token comment">// 关闭 C++ 异常处理功能</span>
       <span class="token string">&quot;&lt;!(node -p \\&quot;require(&#39;node-addon-api&#39;).targets\\&quot;):node_addon_api&quot;</span><span class="token punctuation">,</span>
       <span class="token comment">// 或 启用 C++ 异常处理功能</span>
       <span class="token string">&quot;&lt;!(node -p \\&quot;require(&#39;node-addon-api&#39;).targets\\&quot;):node_addon_api_except&quot;</span><span class="token punctuation">,</span>
       <span class="token comment">// 或 不启用 C++ 异常,但启用 node-addon-api 的安全 API 类型守卫，以确保正确的异常处理模式。</span>
       <span class="token string">&quot;&lt;!(node -p \\&quot;require(&#39;node-addon-api&#39;).targets\\&quot;):node_addon_api_maybe&quot;</span>
     <span class="token punctuation">]</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>

<span class="token punctuation">}</span>
</code></pre><p>上面，<code>node -p &quot;require(&#39;node-addon-api&#39;).targets&quot;</code> 是一个 Node.js 命令行表达式，用于从 node-addon-api 模块中获取正确的目标依赖名称。</p><pre><code class="language-bash"><span class="token comment"># 执行:</span>
$ <span class="token function">node</span> <span class="token parameter variable">-p</span> <span class="token string">&quot;require(&#39;node-addon-api&#39;).targets&quot;</span>
<span class="token comment"># 输出：</span>
node_modules<span class="token punctuation">\\</span>node-addon-api<span class="token punctuation">\\</span>node_addon_api.gyp
</code></pre><p><strong>对macOS（OSX）支持</strong></p><pre><code class="language-gyp">&#39;conditions&#39;: [
  [&#39;OS==&quot;mac&quot;&#39;, {
      &#39;cflags+&#39;: [&#39;-fvisibility=hidden&#39;],
      &#39;xcode_settings&#39;: {
        &#39;GCC_SYMBOLS_PRIVATE_EXTERN&#39;: &#39;YES&#39;, # -fvisibility=hidden
      }
  }]
]
</code></pre><h3 id="编写插件" tabindex="-1"><a class="header-anchor" href="#编写插件"><span>编写插件</span></a></h3><ol><li>包含<code>napi.h</code><ul><li>在原生模块代码中包含 <code>napi.h</code> 是使用 <code>Node-API</code> 的关键步骤。</li><li>为了确保仅使用 ABI（应用程序二进制接口）稳定的 API，您不应包含 <code>node.h</code>、<code>nan.h</code> 或 <code>v8.h</code>，</li><li>因为这些头文件可能包含非稳定的 V8 或 Node.js 特定 API。</li></ul></li><li>编写入口 <ul><li>编写<strong>代码入口点</strong>（entry-point）</li><li>定义<strong>插件入口点</strong>（defines the entry-point for the Node addon）</li></ul></li></ol><p><code>src/hello_world.cc</code></p><pre><code class="language-cpp"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;napi.h&gt;</span></span>

<span class="token comment">// 定义函数</span>
<span class="token comment">// function hello(){ return &quot;world&quot; }</span>
Napi<span class="token double-colon punctuation">::</span>String <span class="token function">hello</span><span class="token punctuation">(</span><span class="token keyword">const</span> Napi<span class="token double-colon punctuation">::</span>CallbackInfo <span class="token operator">&amp;</span>info<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
  <span class="token keyword">return</span> Napi<span class="token double-colon punctuation">::</span><span class="token class-name">String</span><span class="token double-colon punctuation">::</span><span class="token function">New</span><span class="token punctuation">(</span>info<span class="token punctuation">.</span><span class="token function">Env</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;world&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>


<span class="token comment">/**
  代码入口点。
  这里接收两个参数，
    + 第一个是表示 JavaScript 运行时的一个独立实例的环境，
    + 第二个参数是导出对象，和js文件中的module.exports作用相同。
        + 可以向传入的exports对象添加属性，或者创建你自己的exports对象。
        + 无论哪种情况，你都必须返回这个对象，这样当从Init函数返回时，这个对象将被用作模块的导出。
*/</span>
Napi<span class="token double-colon punctuation">::</span>Object <span class="token function">Init</span><span class="token punctuation">(</span>Napi<span class="token double-colon punctuation">::</span>Env env<span class="token punctuation">,</span> Napi<span class="token double-colon punctuation">::</span>Object exports<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// exports[&#39;hello&#39;] = hello</span>
  exports<span class="token punctuation">.</span><span class="token function">Set</span><span class="token punctuation">(</span>Napi<span class="token double-colon punctuation">::</span><span class="token class-name">String</span><span class="token double-colon punctuation">::</span><span class="token function">New</span><span class="token punctuation">(</span>env<span class="token punctuation">,</span> <span class="token string">&quot;hello&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> Napi<span class="token double-colon punctuation">::</span><span class="token class-name">Function</span><span class="token double-colon punctuation">::</span><span class="token function">New</span><span class="token punctuation">(</span>env<span class="token punctuation">,</span> hello<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> exports<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">/**
  Node插件入口点，告诉Node一旦库被加载到活动内存中后应该去哪里。

  第一个参数必须与我们在binding.gyp中定义的“target”相一致。
    + 使用\`NODE_GYP_MODULE_NAME\`可以确保参数正确，
    + 只要模块是使用node-gyp构建的（这是构建模块的常用方式）。
  第二个参数指向要调用的函数。这个函数不能是命名空间内的。
*/</span>
<span class="token function">NODE_API_MODULE</span><span class="token punctuation">(</span>NODE_GYP_MODULE_NAME<span class="token punctuation">,</span> Init<span class="token punctuation">)</span>
</code></pre><h3 id="编写build脚本" tabindex="-1"><a class="header-anchor" href="#编写build脚本"><span>编写build脚本</span></a></h3><pre><code class="language-json"><span class="token comment">// package.json</span>
<span class="token punctuation">{</span>
  <span class="token property">&quot;main&quot;</span><span class="token operator">:</span> <span class="token string">&quot;index.js&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;scripts&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;build&quot;</span><span class="token operator">:</span> <span class="token string">&quot;node-gyp configure &amp;&amp; node-gyp build&quot;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token property">&quot;dependencies&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;bindings&quot;</span><span class="token operator">:</span> <span class="token string">&quot;^1.5.0&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;node-addon-api&quot;</span><span class="token operator">:</span> <span class="token string">&quot;*&quot;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><h3 id="安装编译环境" tabindex="-1"><a class="header-anchor" href="#安装编译环境"><span>安装编译环境</span></a></h3><p><strong>安装Python</strong></p><pre><code class="language-bash"><span class="token comment"># 1.解压安装miniConda</span>
<span class="token comment"># 2.然后在bash中执行：</span>
$ /d/app/miniconda3/Scripts/conda init <span class="token function">bash</span>
</code></pre><p><strong>安装VS</strong></p><ul><li><img src="`+d+'" alt="Alt text"></li><li><img src="'+b+`" alt="Alt text"></li></ul><pre><code class="language-bash"><span class="token comment"># 否则报错</span>
gyp ERR<span class="token operator">!</span> <span class="token function">find</span> VS **************************************************************
gyp ERR<span class="token operator">!</span> <span class="token function">find</span> VS You need to <span class="token function">install</span> the latest version of Visual Studio
gyp ERR<span class="token operator">!</span> <span class="token function">find</span> VS including the <span class="token string">&quot;Desktop development with C++&quot;</span> workload.
gyp ERR<span class="token operator">!</span> <span class="token function">find</span> VS For <span class="token function">more</span> information consult the documentation at:
gyp ERR<span class="token operator">!</span> <span class="token function">find</span> VS https://github.com/nodejs/node-gyp<span class="token comment">#on-windows</span>
gyp ERR<span class="token operator">!</span> <span class="token function">find</span> VS **************************************************************
</code></pre><h3 id="配置vscode实现代码提示" tabindex="-1"><a class="header-anchor" href="#配置vscode实现代码提示"><span>配置vscode实现代码提示</span></a></h3><ol><li>安装<code>c\\c++</code>插件</li><li>编写<code>.vscode/c_cpp_properties.json</code>，为了在vscode支持代码提示</li></ol><pre><code class="language-json"><span class="token property">&quot;configurations&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
  <span class="token punctuation">{</span>
   <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Win32&quot;</span><span class="token punctuation">,</span>
   <span class="token property">&quot;includePath&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
      <span class="token comment">// for source code</span>
      <span class="token string">&quot;\${workspaceFolder}/src/**&quot;</span><span class="token punctuation">,</span>
      <span class="token comment">// for napi.h</span>
      <span class="token string">&quot;\${workspaceFolder}/node_modules/node-addon-api/**&quot;</span><span class="token punctuation">,</span>
      <span class="token comment">// for node_api.h</span>
      <span class="token string">&quot;\${HOME}/AppData/Local/node-gyp/**&quot;</span>
   <span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">]</span>
</code></pre><h3 id="编译插件" tabindex="-1"><a class="header-anchor" href="#编译插件"><span>编译插件</span></a></h3><pre><code class="language-bash"><span class="token function">npm</span> run build
</code></pre><h3 id="编写index-js" tabindex="-1"><a class="header-anchor" href="#编写index-js"><span>编写index.js</span></a></h3><pre><code class="language-js"><span class="token keyword">let</span> addon <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;bindings&#39;</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token string">&#39;hello_world&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>addon<span class="token punctuation">.</span><span class="token function">hello</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &#39;world&#39;</span>
</code></pre><h3 id="测试" tabindex="-1"><a class="header-anchor" href="#测试"><span>测试</span></a></h3><pre><code class="language-bash">$ <span class="token function">node</span> index.js
world
</code></pre><h3 id="预构建" tabindex="-1"><a class="header-anchor" href="#预构建"><span>预构建</span></a></h3><p>预构建工具</p><ul><li>原生插件的分发与其实现同样重要。</li><li>为了安装一个原生插件，确保所有必要的依赖项都已安装并配置正确至关重要。</li><li>当终端用户通过 npm install 命令安装插件时，他们需要编译这个插件，而这在某些情况下可能会导致问题。</li><li>为了避免编译过程，可以为不同的平台和架构分发预构建的原生插件。</li><li>预构建工具可以帮助创建和分发原生插件的预构建形式。</li></ul><p>以下列出了与 Node-API 兼容的已知工具：</p><ul><li>node-pre-gyp</li><li>prebuild</li><li>prebuildify</li></ul><p>这些工具允许开发者为多种平台和架构预先构建他们的原生插件，并将它们与 npm 包一起分发。<br> 这样，终端用户在安装插件时就不需要编译，可以直接使用预构建的二进制文件。<br> 这对于简化插件的分发和安装过程非常有用，尤其是对于那些没有编译环境或不想处理编译问题的用户。</p><h2 id="对象继承关系图" tabindex="-1"><a class="header-anchor" href="#对象继承关系图"><span>对象继承关系图</span></a></h2><blockquote><p><a href="https://github.com/nodejs/node-addon-api/blob/main/doc/hierarchy.md" target="_blank" rel="noopener noreferrer">https://github.com/nodejs/node-addon-api/blob/main/doc/hierarchy.md</a></p></blockquote><table><thead><tr><th>Class</th><th>Parent Class(es)</th></tr></thead><tbody><tr><td><code>Napi::Addon</code></td><td><code>Napi::InstanceWrap</code></td></tr><tr><td><code>Napi::Array</code></td><td><code>Napi::Object</code></td></tr><tr><td><code>Napi::ArrayBuffer</code></td><td><code>Napi::Object</code></td></tr><tr><td><code>Napi::AsyncContext</code></td><td></td></tr><tr><td><code>Napi::AsyncProgressQueueWorker</code></td><td><code>Napi::AsyncProgressWorkerBase</code></td></tr><tr><td><code>Napi::AsyncProgressWorker</code></td><td><code>Napi::AsyncProgressWorkerBase</code></td></tr><tr><td><code>Napi::AsyncWorker</code></td><td></td></tr><tr><td><code>Napi::BigInt</code></td><td><code>Napi::Value</code></td></tr><tr><td><code>Napi::Boolean</code></td><td><code>Napi::Value</code></td></tr><tr><td><code>Napi::Buffer</code></td><td><code>Napi::Uint8Array</code></td></tr><tr><td><code>Napi::CallbackInfo</code></td><td></td></tr><tr><td><code>Napi::CallbackScope</code></td><td></td></tr><tr><td><code>Napi::ClassPropertyDescriptor</code></td><td></td></tr><tr><td><code>Napi::DataView</code></td><td><code>Napi::Object</code></td></tr><tr><td><code>Napi::Date</code></td><td><code>Napi::Value</code></td></tr><tr><td><code>Napi::Env</code></td><td></td></tr><tr><td><code>Napi::Error</code></td><td><code>Napi::ObjectReference</code>, <code>std::exception</code></td></tr><tr><td><code>Napi::EscapableHandleScope</code></td><td></td></tr><tr><td><code>Napi::External</code></td><td><code>Napi::TypeTaggable</code></td></tr><tr><td><code>Napi::Function</code></td><td><code>Napi::Object</code></td></tr><tr><td><code>Napi::FunctionReference</code></td><td><code>Napi::Reference&lt;Napi::Function&gt;</code></td></tr><tr><td><code>Napi::HandleScope</code></td><td></td></tr><tr><td><code>Napi::InstanceWrap</code></td><td></td></tr><tr><td><code>Napi::MemoryManagement</code></td><td></td></tr><tr><td><code>Napi::Name</code></td><td><code>Napi::Value</code></td></tr><tr><td><code>Napi::Number</code></td><td><code>Napi::Value</code></td></tr><tr><td><code>Napi::Object</code></td><td><code>Napi::TypeTaggable</code></td></tr><tr><td><code>Napi::ObjectReference</code></td><td><code>Napi::Reference&lt;Napi::Object&gt;</code></td></tr><tr><td><code>Napi::ObjectWrap</code></td><td><code>Napi::InstanceWrap</code>, <code>Napi::Reference&lt;Napi::Object&gt;</code></td></tr><tr><td><code>Napi::Promise</code></td><td><code>Napi::Object</code></td></tr><tr><td><code>Napi::PropertyDescriptor</code></td><td></td></tr><tr><td><code>Napi::RangeError</code></td><td><code>Napi::Error</code></td></tr><tr><td><code>Napi::Reference</code></td><td></td></tr><tr><td><code>Napi::String</code></td><td><code>Napi::Name</code></td></tr><tr><td><code>Napi::Symbol</code></td><td><code>Napi::Name</code></td></tr><tr><td><code>Napi::SyntaxError</code></td><td><code>Napi::Error</code></td></tr><tr><td><code>Napi::ThreadSafeFunction</code></td><td></td></tr><tr><td><code>Napi::TypeTaggable</code></td><td><code>Napi::Value</code></td></tr><tr><td><code>Napi::TypeError</code></td><td><code>Napi::Error</code></td></tr><tr><td><code>Napi::TypedArray</code></td><td><code>Napi::Object</code></td></tr><tr><td><code>Napi::TypedArrayOf</code></td><td><code>Napi::TypedArray</code></td></tr><tr><td><code>Napi::Value</code></td><td></td></tr><tr><td><code>Napi::VersionManagement</code></td><td></td></tr></tbody></table>`,61),y=p(`<h2 id="addon插件类" tabindex="-1"><a class="header-anchor" href="#addon插件类"><span>addon插件类</span></a></h2><p><strong>线程安全问题</strong></p><ul><li>全局数据存储在c++静态变量中并不安全</li><li>因为这样做没有考虑到插件可能会加载到多个线程中，</li><li>也没有考虑到插件可能会多次加载到单个线程中。</li></ul><p><code>Napi::Addon&lt;T&gt;</code>的作用</p><ul><li>可以用于定义整个插件。</li><li>其子类由 Node.js 安全地存储在其<strong>各个线程</strong>上并存储到其<strong>各个上下文</strong>中。</li></ul><p><code>Napi::Addon&lt;T&gt;::InstanceMethod</code>和<code>Napi::Addon&lt;T&gt;::DefineAddon</code></p><ul><li>可以将<code>Napi::Addon</code>子类的实例方法暴露给JavaScript</li><li>被暴露给JavaScript的这些实例方法可以访问存储在实例上的数据（线程安全）</li></ul><pre><code class="language-cpp"><span class="token keyword">class</span> <span class="token class-name">ExampleAddon</span> <span class="token operator">:</span> <span class="token base-clause"><span class="token keyword">public</span> Napi<span class="token double-colon punctuation">::</span><span class="token class-name">Addon</span><span class="token operator">&lt;</span><span class="token class-name">ExampleAddon</span><span class="token operator">&gt;</span></span> <span class="token punctuation">{</span>
 <span class="token keyword">public</span><span class="token operator">:</span>
  <span class="token function">ExampleAddon</span><span class="token punctuation">(</span>Napi<span class="token double-colon punctuation">::</span>Env env<span class="token punctuation">,</span> Napi<span class="token double-colon punctuation">::</span>Object exports<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">DefineAddon</span><span class="token punctuation">(</span>exports<span class="token punctuation">,</span> <span class="token punctuation">{</span>
      <span class="token comment">// 将插件的实例方法暴露给js</span>
      <span class="token function">InstanceMethod</span><span class="token punctuation">(</span><span class="token string">&quot;increment&quot;</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>ExampleAddon<span class="token double-colon punctuation">::</span>Increment<span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><p><code>Napi::Addon&lt;T&gt;::DefineProperties</code></p><ul><li>可用于将<code>Napi::Addon&lt;T&gt;</code>子类的实例方法附加到另一个对象上。</li></ul><pre><code class="language-cpp"><span class="token keyword">class</span> <span class="token class-name">ExampleAddon</span> <span class="token operator">:</span> <span class="token base-clause"><span class="token keyword">public</span> Napi<span class="token double-colon punctuation">::</span><span class="token class-name">Addon</span><span class="token operator">&lt;</span><span class="token class-name">ExampleAddon</span><span class="token operator">&gt;</span></span> <span class="token punctuation">{</span>
 <span class="token keyword">public</span><span class="token operator">:</span>
  <span class="token function">ExampleAddon</span><span class="token punctuation">(</span>Napi<span class="token double-colon punctuation">::</span>Env env<span class="token punctuation">,</span> Napi<span class="token double-colon punctuation">::</span>Object exports<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">DefineAddon</span><span class="token punctuation">(</span>
      exports<span class="token punctuation">,</span> <span class="token punctuation">{</span>
      <span class="token comment">// 将一个对象暴露到exports上，并把插件实例方法作为该对象的属性</span>
      <span class="token function">InstanceValue</span><span class="token punctuation">(</span>
        <span class="token string">&quot;subObject&quot;</span><span class="token punctuation">,</span> 
        <span class="token function">DefineProperties</span><span class="token punctuation">(</span>
          Napi<span class="token double-colon punctuation">::</span><span class="token class-name">Object</span><span class="token double-colon punctuation">::</span><span class="token function">New</span><span class="token punctuation">(</span>env<span class="token punctuation">)</span><span class="token punctuation">,</span>
          <span class="token punctuation">{</span>
            <span class="token function">InstanceMethod</span><span class="token punctuation">(</span><span class="token string">&quot;decrement&quot;</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>ExampleAddon<span class="token double-colon punctuation">::</span>Decrement<span class="token punctuation">)</span>
          <span class="token punctuation">}</span>
        <span class="token punctuation">)</span><span class="token punctuation">,</span>
        napi_enumerable
      <span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><p><code>NODE_API_ADDON()</code>或<code>NODE_API_NAMED_ADDON()</code></p><ul><li>可以用来定义插件</li></ul><pre><code class="language-cpp"><span class="token function">NODE_API_ADDON</span><span class="token punctuation">(</span>ExampleAddon<span class="token punctuation">)</span>
<span class="token comment">// NODE_API_NAMED_ADDON(NODE_GYP_MODULE_NAME,ExampleAddon)</span>
</code></pre><p>案例</p>`,15),m=n("code",null,"src/hello_world.cc",-1),g=n("code",null,"index.js",-1),v=n("pre",null,[n("code",{class:"language-cpp"},[n("span",{class:"token macro property"},[n("span",{class:"token directive-hash"},"#"),n("span",{class:"token directive keyword"},"include"),a(),n("span",{class:"token string"},"<napi.h>")]),a(`

`),n("span",{class:"token comment"},"// using namespace Napi;"),a(`

`),n("span",{class:"token keyword"},"class"),a(),n("span",{class:"token class-name"},"HelloAddon"),a(),n("span",{class:"token operator"},":"),a(),n("span",{class:"token base-clause"},[n("span",{class:"token keyword"},"public"),a(" Napi"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token class-name"},"Addon"),n("span",{class:"token operator"},"<"),n("span",{class:"token class-name"},"HelloAddon"),n("span",{class:"token operator"},">")]),a(`
`),n("span",{class:"token punctuation"},"{"),a(`
`),n("span",{class:"token keyword"},"public"),n("span",{class:"token operator"},":"),a(`
  `),n("span",{class:"token function"},"HelloAddon"),n("span",{class:"token punctuation"},"("),a("Napi"),n("span",{class:"token double-colon punctuation"},"::"),a("Env env"),n("span",{class:"token punctuation"},","),a(" Napi"),n("span",{class:"token double-colon punctuation"},"::"),a("Object exports"),n("span",{class:"token punctuation"},")"),a(`
  `),n("span",{class:"token punctuation"},"{"),a(`
    `),n("span",{class:"token comment"},'// exports={"hello":hello}'),a(`
    `),n("span",{class:"token comment"},"// napi_enumerable 可枚举属性"),a(`
    `),n("span",{class:"token comment"},"// DefineAddon和InstanceMethod都是父类上的实例方法"),a(`
    `),n("span",{class:"token function"},"DefineAddon"),n("span",{class:"token punctuation"},"("),a("exports"),n("span",{class:"token punctuation"},","),a(),n("span",{class:"token punctuation"},"{"),n("span",{class:"token function"},"InstanceMethod"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"hello"'),n("span",{class:"token punctuation"},","),a(),n("span",{class:"token operator"},"&"),a("HelloAddon"),n("span",{class:"token double-colon punctuation"},"::"),a("hello"),n("span",{class:"token punctuation"},","),a(" napi_enumerable"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
  `),n("span",{class:"token punctuation"},"}"),a(`

`),n("span",{class:"token keyword"},"private"),n("span",{class:"token operator"},":"),a(`
  `),n("span",{class:"token comment"},'// function hello(){return "world"}'),a(`
  Napi`),n("span",{class:"token double-colon punctuation"},"::"),a("Value "),n("span",{class:"token function"},"hello"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"const"),a(" Napi"),n("span",{class:"token double-colon punctuation"},"::"),a("CallbackInfo "),n("span",{class:"token operator"},"&"),a("info"),n("span",{class:"token punctuation"},")"),a(`
  `),n("span",{class:"token punctuation"},"{"),a(`
    `),n("span",{class:"token keyword"},"return"),a(" Napi"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token class-name"},"String"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token function"},"New"),n("span",{class:"token punctuation"},"("),a("info"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"Env"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),a(),n("span",{class:"token string"},'"world"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
  `),n("span",{class:"token punctuation"},"}"),a(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},";"),a(`

`),n("span",{class:"token comment"},"// NODE_API_NAMED_ADDON(NODE_GYP_MODULE_NAME, HelloAddon)"),a(`
`),n("span",{class:"token function"},"NODE_API_ADDON"),n("span",{class:"token punctuation"},"("),a("HelloAddon"),n("span",{class:"token punctuation"},")"),a(`
`)])],-1),N=n("pre",null,[n("code",{class:"language-cpp"},[a("var addon "),n("span",{class:"token operator"},"="),a(),n("span",{class:"token function"},"require"),n("span",{class:"token punctuation"},"("),n("span",{class:"token char"},"'bindings'"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"("),n("span",{class:"token char"},"'hello_world'"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`

console`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"log"),n("span",{class:"token punctuation"},"("),a("addon"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"hello"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(),n("span",{class:"token comment"},"// 'world'"),a(`
`)])],-1),_=p(`<h2 id="function函数" tabindex="-1"><a class="header-anchor" href="#function函数"><span>function函数</span></a></h2><p><code>Napi::Function</code> 类提供了一系列方法，用于在原生代码中创建函数对象，这些函数稍后可从JavaScript调用。所创建的函数并不会自动对JavaScript可见，而是需要作为插件模块的导出内容或由模块的导出函数返回。</p><p>此外，<code>Napi::Function</code> 类还提供了可用于调用在JavaScript中创建并传递给原生插件的函数的方法。</p><p><code>Napi::Function</code> 类继承了 <code>Napi::Object</code> 类的行为</p><blockquote><p>对于将在非JavaScript线程中通过异步事件调用的回调，请参考<code>Napi::ThreadSafeFunction</code></p></blockquote><h3 id="示例" tabindex="-1"><a class="header-anchor" href="#示例"><span>示例</span></a></h3><pre><code class="language-cpp"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;napi.h&gt;</span></span>

<span class="token keyword">using</span> <span class="token keyword">namespace</span> Napi<span class="token punctuation">;</span>

Value <span class="token function">Fn</span><span class="token punctuation">(</span><span class="token keyword">const</span> CallbackInfo<span class="token operator">&amp;</span> info<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  Env env <span class="token operator">=</span> info<span class="token punctuation">.</span><span class="token function">Env</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// ...</span>
  <span class="token keyword">return</span> <span class="token class-name">String</span><span class="token double-colon punctuation">::</span><span class="token function">New</span><span class="token punctuation">(</span>env<span class="token punctuation">,</span> <span class="token string">&quot;Hello World&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

Object <span class="token function">Init</span><span class="token punctuation">(</span>Env env<span class="token punctuation">,</span> Object exports<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  exports<span class="token punctuation">.</span><span class="token function">Set</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token double-colon punctuation">::</span><span class="token function">New</span><span class="token punctuation">(</span>env<span class="token punctuation">,</span> <span class="token string">&quot;fn&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> Function<span class="token double-colon punctuation">::</span><span class="token generic-function"><span class="token function">New</span><span class="token generic class-name"><span class="token operator">&lt;</span>Fn<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>env<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> exports<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token function">NODE_API_MODULE</span><span class="token punctuation">(</span>NODE_GYP_MODULE_NAME<span class="token punctuation">,</span> Init<span class="token punctuation">)</span>
</code></pre><p>上述代码可从JavaScript这样使用：</p><pre><code class="language-js"><span class="token keyword">const</span> addon <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;./addon&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
addon<span class="token punctuation">.</span><span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><p>使用 <code>Napi::Function</code> 类，可以在原生插件中以两种不同的方法调用JavaScript函数对象：<code>Call</code> 和 <code>MakeCallback</code>。这两个方法的API非常相似，但它们适用于不同的场景。<code>MakeCallback</code> 方法用于在从<code>[异步操作](async_operations.md)</code>返回后，或通常在没有现有JavaScript函数在调用栈上时，从原生代码回调到JavaScript。而 <code>Call</code> 方法则在已经有JavaScript函数在调用栈上时使用（例如，在从JavaScript调用的原生方法执行期间）。</p><h3 id="类型定义" tabindex="-1"><a class="header-anchor" href="#类型定义"><span>类型定义</span></a></h3><h4 id="napi-function-voidcallback" tabindex="-1"><a class="header-anchor" href="#napi-function-voidcallback"><span>Napi::Function::VoidCallback</span></a></h4><p>描述一个从JavaScript调用、返回<code>void</code>的回调函数类型。</p><pre><code class="language-cpp"><span class="token keyword">using</span> VoidCallback <span class="token operator">=</span> <span class="token keyword">void</span> <span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token keyword">const</span> Napi<span class="token double-colon punctuation">::</span>CallbackInfo<span class="token operator">&amp;</span> info<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><h4 id="napi-function-callback" tabindex="-1"><a class="header-anchor" href="#napi-function-callback"><span>Napi::Function::Callback</span></a></h4><p>描述一个从JavaScript调用、返回值的回调函数类型。</p><pre><code class="language-cpp"><span class="token keyword">using</span> Callback <span class="token operator">=</span> <span class="token function">Value</span> <span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token keyword">const</span> Napi<span class="token double-colon punctuation">::</span>CallbackInfo<span class="token operator">&amp;</span> info<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><h3 id="构造函数" tabindex="-1"><a class="header-anchor" href="#构造函数"><span>构造函数</span></a></h3><p>创建一个新的空 <code>Napi::Function</code> 实例。</p><pre><code class="language-cpp">Napi<span class="token double-colon punctuation">::</span><span class="token class-name">Function</span><span class="token double-colon punctuation">::</span><span class="token function">Function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><h3 id="构造函数-1" tabindex="-1"><a class="header-anchor" href="#构造函数-1"><span>构造函数</span></a></h3><p>创建一个新的 <code>Napi::Function</code> 对象实例。</p><pre><code class="language-cpp">Napi<span class="token double-colon punctuation">::</span><span class="token class-name">Function</span><span class="token double-colon punctuation">::</span><span class="token function">Function</span><span class="token punctuation">(</span>napi_env env<span class="token punctuation">,</span> napi_value value<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><ul><li><code>[in] env</code>: 构造 <code>Napi::Function</code> 对象的 <code>napi_env</code> 环境。</li><li><code>[in] value</code>: 表示JavaScript函数的 <code>napi_value</code>句柄。</li></ul><p>返回一个非空的 <code>Napi::Function</code> 实例。</p><h3 id="new" tabindex="-1"><a class="header-anchor" href="#new"><span>New</span></a></h3><p>创建 <code>Napi::Function</code> 对象的实例。</p><pre><code class="language-cpp"><span class="token keyword">template</span> <span class="token operator">&lt;</span>Napi<span class="token double-colon punctuation">::</span>VoidCallback cb<span class="token operator">&gt;</span>
<span class="token keyword">static</span> Napi<span class="token double-colon punctuation">::</span>Function <span class="token function">New</span><span class="token punctuation">(</span>napi_env env<span class="token punctuation">,</span>
                          <span class="token keyword">const</span> <span class="token keyword">char</span><span class="token operator">*</span> utf8name <span class="token operator">=</span> <span class="token keyword">nullptr</span><span class="token punctuation">,</span>
                          <span class="token keyword">void</span><span class="token operator">*</span> data <span class="token operator">=</span> <span class="token keyword">nullptr</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><ul><li><code>[in] env</code>: 用于构建 <code>Napi::Function</code> 对象的 <code>napi_env</code> 环境。</li><li><code>[in] utf8name</code>: 用作函数名称的字符串。</li><li><code>[in] data</code>: 用户提供的数据上下文。当后续调用函数时，此数据会被传回。<br> 返回一个 <code>Napi::Function</code> 对象的实例。</li></ul><h3 id="new-参数最多的重载" tabindex="-1"><a class="header-anchor" href="#new-参数最多的重载"><span>New（参数最多的重载）</span></a></h3><pre><code class="language-cpp"><span class="token keyword">template</span> <span class="token operator">&lt;</span><span class="token keyword">typename</span> <span class="token class-name">Callable</span><span class="token operator">&gt;</span>
<span class="token keyword">static</span> Napi<span class="token double-colon punctuation">::</span>Function Napi<span class="token double-colon punctuation">::</span><span class="token class-name">Function</span><span class="token double-colon punctuation">::</span><span class="token function">New</span><span class="token punctuation">(</span>napi_env env<span class="token punctuation">,</span> Callable cb<span class="token punctuation">,</span> <span class="token keyword">const</span> std<span class="token double-colon punctuation">::</span>string<span class="token operator">&amp;</span> utf8name<span class="token punctuation">,</span> <span class="token keyword">void</span><span class="token operator">*</span> data <span class="token operator">=</span> <span class="token keyword">nullptr</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><ul><li><code>[in] env</code>: 用于构建 <code>Napi::Function</code> 对象的 <code>napi_env</code> 环境。</li><li><code>[in] cb</code>: 实现 <code>Callable</code> 接口的对象。</li><li><code>[in] utf8name</code>: 用作函数名称的字符串。</li><li><code>[in] data</code>: 用户提供的数据上下文。当后续调用函数时，此数据会被传回。</li></ul><p>返回一个 <code>Napi::Function</code> 对象的实例。</p><h3 id="call" tabindex="-1"><a class="header-anchor" href="#call"><span>Call</span></a></h3><p>从原生扩展调用JavaScript函数。</p><pre><code class="language-cpp">Napi<span class="token double-colon punctuation">::</span>Value Napi<span class="token double-colon punctuation">::</span><span class="token class-name">Function</span><span class="token double-colon punctuation">::</span><span class="token function">Call</span><span class="token punctuation">(</span><span class="token keyword">const</span> std<span class="token double-colon punctuation">::</span>vector<span class="token operator">&lt;</span>napi_value<span class="token operator">&gt;</span><span class="token operator">&amp;</span> args<span class="token punctuation">)</span> <span class="token keyword">const</span><span class="token punctuation">;</span>
</code></pre><ul><li><code>[in] args</code>: 作为 <code>napi_value</code> 的JavaScript值向量，表示函数的参数。</li></ul><p>返回一个 <code>Napi::Value</code>，代表函数返回的JavaScript值。</p><h3 id="call-1" tabindex="-1"><a class="header-anchor" href="#call-1"><span>Call</span></a></h3><p>从原生扩展调用JavaScript函数，指定接收者对象。</p><pre><code class="language-cpp">Napi<span class="token double-colon punctuation">::</span>Value Napi<span class="token double-colon punctuation">::</span><span class="token class-name">Function</span><span class="token double-colon punctuation">::</span><span class="token function">Call</span><span class="token punctuation">(</span>napi_value recv<span class="token punctuation">,</span> <span class="token keyword">const</span> std<span class="token double-colon punctuation">::</span>vector<span class="token operator">&lt;</span>napi_value<span class="token operator">&gt;</span><span class="token operator">&amp;</span> args<span class="token punctuation">)</span> <span class="token keyword">const</span><span class="token punctuation">;</span>
</code></pre><ul><li><code>[in] recv</code>: 传递给被调用函数的 <code>this</code> 对象。</li><li><code>[in] args</code>: 作为 <code>napi_value</code> 的JavaScript值向量，表示函数的参数。</li></ul><p>返回一个 <code>Napi::Value</code>，代表函数返回的JavaScript值。</p><h3 id="makecallback异步回调执行函数" tabindex="-1"><a class="header-anchor" href="#makecallback异步回调执行函数"><span>MakeCallback异步回调执行函数</span></a></h3><p>在异步操作后，从原生扩展调用JavaScript函数。</p><pre><code class="language-cpp">Napi<span class="token double-colon punctuation">::</span>Value Napi<span class="token double-colon punctuation">::</span><span class="token class-name">Function</span><span class="token double-colon punctuation">::</span><span class="token function">MakeCallback</span><span class="token punctuation">(</span>napi_value recv<span class="token punctuation">,</span> <span class="token keyword">const</span> std<span class="token double-colon punctuation">::</span>vector<span class="token operator">&lt;</span>napi_value<span class="token operator">&gt;</span><span class="token operator">&amp;</span> args<span class="token punctuation">,</span> napi_async_context context <span class="token operator">=</span> <span class="token keyword">nullptr</span><span class="token punctuation">)</span> <span class="token keyword">const</span><span class="token punctuation">;</span>
</code></pre><ul><li><code>[in] recv</code>: 传递给被调用函数的 <code>this</code> 对象。</li><li><code>[in] args</code>: 作为函数参数的 <code>napi_value</code> 形式的JavaScript值列表。</li><li><code>[in] context</code>: 触发回调的异步操作的上下文。通常应为之前从<code>[Napi::AsyncContext](async_context.md)</code>获取的值。允许使用<code>nullptr</code>，这表示使用当前异步上下文（如果有的话）来执行回调。</li></ul><p>返回代表函数返回的JavaScript值的 <code>Napi::Value</code>。</p><h3 id="operator操作符重载" tabindex="-1"><a class="header-anchor" href="#operator操作符重载"><span>operator操作符重载</span></a></h3><pre><code class="language-cpp">Napi<span class="token double-colon punctuation">::</span>Value Napi<span class="token double-colon punctuation">::</span><span class="token class-name">Function</span><span class="token double-colon punctuation">::</span><span class="token keyword">operator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token keyword">const</span> std<span class="token double-colon punctuation">::</span>initializer_list<span class="token operator">&lt;</span>napi_value<span class="token operator">&gt;</span><span class="token operator">&amp;</span> args<span class="token punctuation">)</span> <span class="token keyword">const</span><span class="token punctuation">;</span>
</code></pre><ul><li><code>[in] args</code>: 作为 <code>napi_value</code> 的初始化器列表，表示JavaScript值。</li></ul><p>返回代表函数返回的JavaScript值的 <code>Napi::Value</code>。</p><h3 id="案例-function-example" tabindex="-1"><a class="header-anchor" href="#案例-function-example"><span>案例：function_example</span></a></h3>`,53),w=n("code",null,"src/hello_world.cc",-1),E=n("code",null,"index.js",-1),A=n("pre",null,[n("code",{class:"language-cpp"},[n("span",{class:"token macro property"},[n("span",{class:"token directive-hash"},"#"),n("span",{class:"token directive keyword"},"include"),a(),n("span",{class:"token string"},"<napi.h>")]),a(`

`),n("span",{class:"token comment"},'// function hello(){ return "world" }'),a(`
Napi`),n("span",{class:"token double-colon punctuation"},"::"),a("String "),n("span",{class:"token function"},"hello"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"const"),a(" Napi"),n("span",{class:"token double-colon punctuation"},"::"),a("CallbackInfo "),n("span",{class:"token operator"},"&"),a("info"),n("span",{class:"token punctuation"},")"),a(`
`),n("span",{class:"token punctuation"},"{"),a(`
  `),n("span",{class:"token keyword"},"return"),a(" Napi"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token class-name"},"String"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token function"},"New"),n("span",{class:"token punctuation"},"("),a("info"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"Env"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),a(),n("span",{class:"token string"},'"world"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
`),n("span",{class:"token punctuation"},"}"),a(`

Napi`),n("span",{class:"token double-colon punctuation"},"::"),a("Object "),n("span",{class:"token function"},"Init"),n("span",{class:"token punctuation"},"("),a("Napi"),n("span",{class:"token double-colon punctuation"},"::"),a("Env env"),n("span",{class:"token punctuation"},","),a(" Napi"),n("span",{class:"token double-colon punctuation"},"::"),a("Object exports"),n("span",{class:"token punctuation"},")"),a(`
`),n("span",{class:"token punctuation"},"{"),a(`
  `),n("span",{class:"token comment"},"// exports['hello'] = hello"),a(`
  exports`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"Set"),n("span",{class:"token punctuation"},"("),a("Napi"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token class-name"},"String"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token function"},"New"),n("span",{class:"token punctuation"},"("),a("env"),n("span",{class:"token punctuation"},","),a(),n("span",{class:"token string"},'"hello"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),a(" Napi"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token class-name"},"Function"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token function"},"New"),n("span",{class:"token punctuation"},"("),a("env"),n("span",{class:"token punctuation"},","),a(" hello"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
  `),n("span",{class:"token keyword"},"return"),a(" exports"),n("span",{class:"token punctuation"},";"),a(`
`),n("span",{class:"token punctuation"},"}"),a(`

`),n("span",{class:"token function"},"NODE_API_MODULE"),n("span",{class:"token punctuation"},"("),a("NODE_GYP_MODULE_NAME"),n("span",{class:"token punctuation"},","),a(" Init"),n("span",{class:"token punctuation"},")"),a(`
`)])],-1),j=n("pre",null,[n("code",{class:"language-cpp"},[a("var addon "),n("span",{class:"token operator"},"="),a(),n("span",{class:"token function"},"require"),n("span",{class:"token punctuation"},"("),n("span",{class:"token char"},"'bindings'"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"("),n("span",{class:"token char"},"'hello_world'"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`

console`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"log"),n("span",{class:"token punctuation"},"("),a("addon"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"hello"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(),n("span",{class:"token comment"},"// 'world'"),a(`
`)])],-1),O=n("h3",{id:"案例-function-arguments函数参数",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#案例-function-arguments函数参数"},[n("span",null,"案例：function_arguments函数参数")])],-1),B=n("code",null,"src/hello_world.cc",-1),x=n("code",null,"index.js",-1),M=n("pre",null,[n("code",{class:"language-cpp"},[n("span",{class:"token macro property"},[n("span",{class:"token directive-hash"},"#"),n("span",{class:"token directive keyword"},"include"),a(),n("span",{class:"token string"},"<napi.h>")]),a(`

`),n("span",{class:"token comment"},"// function hello(a,b){ return a+b }"),a(`
Napi`),n("span",{class:"token double-colon punctuation"},"::"),a("Value "),n("span",{class:"token function"},"add"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"const"),a(" Napi"),n("span",{class:"token double-colon punctuation"},"::"),a("CallbackInfo "),n("span",{class:"token operator"},"&"),a("info"),n("span",{class:"token punctuation"},")"),a(`
`),n("span",{class:"token punctuation"},"{"),a(`
  Napi`),n("span",{class:"token double-colon punctuation"},"::"),a("Env env "),n("span",{class:"token operator"},"="),a(" info"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"Env"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`

  `),n("span",{class:"token keyword"},"if"),a(),n("span",{class:"token punctuation"},"("),a("info"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"Length"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token operator"},"<"),a(),n("span",{class:"token number"},"2"),n("span",{class:"token punctuation"},")"),a(`
  `),n("span",{class:"token punctuation"},"{"),a(`
    `),n("span",{class:"token comment"},'// throw new TypeError("Wring number of arguments.");'),a(`
    Napi`),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token class-name"},"TypeError"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token function"},"New"),n("span",{class:"token punctuation"},"("),a("env"),n("span",{class:"token punctuation"},","),a(),n("span",{class:"token string"},'"Wrong number of arguments."'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"ThrowAsJavaScriptException"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
    `),n("span",{class:"token keyword"},"return"),a(" env"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"Null"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
  `),n("span",{class:"token punctuation"},"}"),a(`

  `),n("span",{class:"token keyword"},"if"),a(),n("span",{class:"token punctuation"},"("),n("span",{class:"token operator"},"!"),a("info"),n("span",{class:"token punctuation"},"["),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"IsNumber"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token operator"},"||"),a(),n("span",{class:"token operator"},"!"),a("info"),n("span",{class:"token punctuation"},"["),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"IsNumber"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),a(`
  `),n("span",{class:"token punctuation"},"{"),a(`
    `),n("span",{class:"token comment"},'// throw new TypeError("Wrong type of arguments.");'),a(`
    Napi`),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token class-name"},"TypeError"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token function"},"New"),n("span",{class:"token punctuation"},"("),a("env"),n("span",{class:"token punctuation"},","),a(),n("span",{class:"token string"},'"Wrong type of arguments."'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"ThrowAsJavaScriptException"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
    `),n("span",{class:"token keyword"},"return"),a(" env"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"Null"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
  `),n("span",{class:"token punctuation"},"}"),a(`

  `),n("span",{class:"token keyword"},"double"),a(" arg0 "),n("span",{class:"token operator"},"="),a(" info"),n("span",{class:"token punctuation"},"["),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},"."),n("span",{class:"token generic-function"},[n("span",{class:"token function"},"As"),n("span",{class:"token generic class-name"},[n("span",{class:"token operator"},"<"),a("Napi"),n("span",{class:"token double-colon punctuation"},"::"),a("Number"),n("span",{class:"token operator"},">")])]),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"DoubleValue"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
  `),n("span",{class:"token keyword"},"double"),a(" arg1 "),n("span",{class:"token operator"},"="),a(" info"),n("span",{class:"token punctuation"},"["),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},"."),n("span",{class:"token generic-function"},[n("span",{class:"token function"},"As"),n("span",{class:"token generic class-name"},[n("span",{class:"token operator"},"<"),a("Napi"),n("span",{class:"token double-colon punctuation"},"::"),a("Number"),n("span",{class:"token operator"},">")])]),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"DoubleValue"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
  `),n("span",{class:"token keyword"},"double"),a(" result "),n("span",{class:"token operator"},"="),a(" arg0 "),n("span",{class:"token operator"},"+"),a(" arg1"),n("span",{class:"token punctuation"},";"),a(`

  `),n("span",{class:"token keyword"},"return"),a(" Napi"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token class-name"},"Number"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token function"},"New"),n("span",{class:"token punctuation"},"("),a("env"),n("span",{class:"token punctuation"},","),a(" result"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
`),n("span",{class:"token punctuation"},"}"),a(`

Napi`),n("span",{class:"token double-colon punctuation"},"::"),a("Object "),n("span",{class:"token function"},"Init"),n("span",{class:"token punctuation"},"("),a("Napi"),n("span",{class:"token double-colon punctuation"},"::"),a("Env env"),n("span",{class:"token punctuation"},","),a(" Napi"),n("span",{class:"token double-colon punctuation"},"::"),a("Object exports"),n("span",{class:"token punctuation"},")"),a(`
`),n("span",{class:"token punctuation"},"{"),a(`
  `),n("span",{class:"token comment"},"// exports['add'] = add"),a(`
  exports`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"Set"),n("span",{class:"token punctuation"},"("),a("Napi"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token class-name"},"String"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token function"},"New"),n("span",{class:"token punctuation"},"("),a("env"),n("span",{class:"token punctuation"},","),a(),n("span",{class:"token string"},'"add"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),a(" Napi"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token class-name"},"Function"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token function"},"New"),n("span",{class:"token punctuation"},"("),a("env"),n("span",{class:"token punctuation"},","),a(" add"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
  `),n("span",{class:"token keyword"},"return"),a(" exports"),n("span",{class:"token punctuation"},";"),a(`
`),n("span",{class:"token punctuation"},"}"),a(`

`),n("span",{class:"token function"},"NODE_API_MODULE"),n("span",{class:"token punctuation"},"("),a("NODE_GYP_MODULE_NAME"),n("span",{class:"token punctuation"},","),a(" Init"),n("span",{class:"token punctuation"},")"),a(`
`)])],-1),C=n("pre",null,[n("code",{class:"language-cpp"},[a("var addon "),n("span",{class:"token operator"},"="),a(),n("span",{class:"token function"},"require"),n("span",{class:"token punctuation"},"("),n("span",{class:"token char"},"'bindings'"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"("),n("span",{class:"token char"},"'hello_world'"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`

console`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"log"),n("span",{class:"token punctuation"},"("),a("addon"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"add"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(),n("span",{class:"token comment"},"// TypeError: Wring number of arguments."),a(`
console`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"log"),n("span",{class:"token punctuation"},"("),a("addon"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"add"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(),n("span",{class:"token comment"},"// TypeError: Wring number of arguments."),a(`
console`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"log"),n("span",{class:"token punctuation"},"("),a("addon"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"add"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"111"'),n("span",{class:"token punctuation"},","),n("span",{class:"token string"},'"222"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(),n("span",{class:"token comment"},"// TypeError: Wrong type of arguments."),a(`
console`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"log"),n("span",{class:"token punctuation"},"("),a("addon"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"add"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},","),a(),n("span",{class:"token number"},"2"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(),n("span",{class:"token comment"},"// 3"),a(`
`)])],-1),D=n("h3",{id:"案例-callback-函数回调",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#案例-callback-函数回调"},[n("span",null,"案例：callback_函数回调")])],-1),F=n("code",null,"src/hello_world.cc",-1),I=n("code",null,"index.js",-1),S=n("pre",null,[n("code",{class:"language-cpp"},[n("span",{class:"token macro property"},[n("span",{class:"token directive-hash"},"#"),n("span",{class:"token directive keyword"},"include"),a(),n("span",{class:"token string"},"<napi.h>")]),a(`

`),n("span",{class:"token comment"},'// function hello(callback){ callback("hello_world"); }'),a(`
`),n("span",{class:"token keyword"},"void"),a(),n("span",{class:"token function"},"call"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"const"),a(" Napi"),n("span",{class:"token double-colon punctuation"},"::"),a("CallbackInfo "),n("span",{class:"token operator"},"&"),a("info"),n("span",{class:"token punctuation"},")"),a(`
`),n("span",{class:"token punctuation"},"{"),a(`
  Napi`),n("span",{class:"token double-colon punctuation"},"::"),a("Env env "),n("span",{class:"token operator"},"="),a(" info"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"Env"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`

  Napi`),n("span",{class:"token double-colon punctuation"},"::"),a("Function callbaack "),n("span",{class:"token operator"},"="),a(" info"),n("span",{class:"token punctuation"},"["),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},"."),n("span",{class:"token generic-function"},[n("span",{class:"token function"},"As"),n("span",{class:"token generic class-name"},[n("span",{class:"token operator"},"<"),a("Napi"),n("span",{class:"token double-colon punctuation"},"::"),a("Function"),n("span",{class:"token operator"},">")])]),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
  Napi`),n("span",{class:"token double-colon punctuation"},"::"),a("String arg0 "),n("span",{class:"token operator"},"="),a(" Napi"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token class-name"},"String"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token function"},"New"),n("span",{class:"token punctuation"},"("),a("env"),n("span",{class:"token punctuation"},","),a(),n("span",{class:"token string"},'"hello_world"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`

  callbaack`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"Call"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"{"),a("arg0"),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
`),n("span",{class:"token punctuation"},"}"),a(`

Napi`),n("span",{class:"token double-colon punctuation"},"::"),a("Object "),n("span",{class:"token function"},"Init"),n("span",{class:"token punctuation"},"("),a("Napi"),n("span",{class:"token double-colon punctuation"},"::"),a("Env env"),n("span",{class:"token punctuation"},","),a(" Napi"),n("span",{class:"token double-colon punctuation"},"::"),a("Object exports"),n("span",{class:"token punctuation"},")"),a(`
`),n("span",{class:"token punctuation"},"{"),a(`
  `),n("span",{class:"token comment"},"// exports['call'] = call"),a(`
  exports`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"Set"),n("span",{class:"token punctuation"},"("),a("Napi"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token class-name"},"String"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token function"},"New"),n("span",{class:"token punctuation"},"("),a("env"),n("span",{class:"token punctuation"},","),a(),n("span",{class:"token string"},'"call"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),a(" Napi"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token class-name"},"Function"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token function"},"New"),n("span",{class:"token punctuation"},"("),a("env"),n("span",{class:"token punctuation"},","),a(" call"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
  `),n("span",{class:"token keyword"},"return"),a(" exports"),n("span",{class:"token punctuation"},";"),a(`
`),n("span",{class:"token punctuation"},"}"),a(`

`),n("span",{class:"token function"},"NODE_API_MODULE"),n("span",{class:"token punctuation"},"("),a("NODE_GYP_MODULE_NAME"),n("span",{class:"token punctuation"},","),a(" Init"),n("span",{class:"token punctuation"},")"),a(`
`)])],-1),q=n("pre",null,[n("code",{class:"language-cpp"},[a("var addon "),n("span",{class:"token operator"},"="),a(),n("span",{class:"token function"},"require"),n("span",{class:"token punctuation"},"("),n("span",{class:"token char"},"'bindings'"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"("),n("span",{class:"token char"},"'hello_world'"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`

addon`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"call"),n("span",{class:"token punctuation"},"("),a(`
    `),n("span",{class:"token function"},"function"),a(),n("span",{class:"token punctuation"},"("),a("msg"),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token punctuation"},"{"),a(`
        console`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"log"),n("span",{class:"token punctuation"},"("),a("msg"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(),n("span",{class:"token comment"},'// "hello_world"'),a(`
    `),n("span",{class:"token punctuation"},"}"),a(`
`),n("span",{class:"token punctuation"},")"),a(`
`)])],-1),T=n("h3",{id:"案例-factory-of-function",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#案例-factory-of-function"},[n("span",null,"案例：Factory_Of_function")])],-1),V=n("code",null,"src/hello_world.cc",-1),P=n("code",null,"index.js",-1),W=n("pre",null,[n("code",{class:"language-cpp"},[n("span",{class:"token macro property"},[n("span",{class:"token directive-hash"},"#"),n("span",{class:"token directive keyword"},"include"),a(),n("span",{class:"token string"},"<napi.h>")]),a(`

`),n("span",{class:"token comment"},`/*
  function hello_world(){
    return "hello_world"
  }
*/`),a(`
Napi`),n("span",{class:"token double-colon punctuation"},"::"),a("String "),n("span",{class:"token function"},"hello_world"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"const"),a(" Napi"),n("span",{class:"token double-colon punctuation"},"::"),a("CallbackInfo "),n("span",{class:"token operator"},"&"),a("info"),n("span",{class:"token punctuation"},")"),a(`
`),n("span",{class:"token punctuation"},"{"),a(`
  Napi`),n("span",{class:"token double-colon punctuation"},"::"),a("Env env "),n("span",{class:"token operator"},"="),a(" info"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"Env"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
  `),n("span",{class:"token keyword"},"return"),a(" Napi"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token class-name"},"String"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token function"},"New"),n("span",{class:"token punctuation"},"("),a("env"),n("span",{class:"token punctuation"},","),a(),n("span",{class:"token string"},'"hello_world"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
`),n("span",{class:"token punctuation"},"}"),a(`

`),n("span",{class:"token comment"},`/*
  function creatFunction(){
    return function hello_world(){
      return "hello_world"
    }
  }
*/`),a(`
Napi`),n("span",{class:"token double-colon punctuation"},"::"),a("Function "),n("span",{class:"token function"},"createFunction"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"const"),a(" Napi"),n("span",{class:"token double-colon punctuation"},"::"),a("CallbackInfo "),n("span",{class:"token operator"},"&"),a("info"),n("span",{class:"token punctuation"},")"),a(`
`),n("span",{class:"token punctuation"},"{"),a(`
  Napi`),n("span",{class:"token double-colon punctuation"},"::"),a("Env env "),n("span",{class:"token operator"},"="),a(" info"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"Env"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
  `),n("span",{class:"token comment"},`/*
    return function hello_world(){
      return "hello_world"
    }
  */`),a(`
  `),n("span",{class:"token keyword"},"return"),a(" Napi"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token class-name"},"Function"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token function"},"New"),n("span",{class:"token punctuation"},"("),a("env"),n("span",{class:"token punctuation"},","),a(" hello_world"),n("span",{class:"token punctuation"},","),a(),n("span",{class:"token string"},'"hello_world"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
`),n("span",{class:"token punctuation"},"}"),a(`

Napi`),n("span",{class:"token double-colon punctuation"},"::"),a("Object "),n("span",{class:"token function"},"Init"),n("span",{class:"token punctuation"},"("),a("Napi"),n("span",{class:"token double-colon punctuation"},"::"),a("Env env"),n("span",{class:"token punctuation"},","),a(" Napi"),n("span",{class:"token double-colon punctuation"},"::"),a("Object exports"),n("span",{class:"token punctuation"},")"),a(`
`),n("span",{class:"token punctuation"},"{"),a(`
  `),n("span",{class:"token comment"},"// exports['creatFunction'] = creatFunction"),a(`
  exports`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"Set"),n("span",{class:"token punctuation"},"("),a("Napi"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token class-name"},"String"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token function"},"New"),n("span",{class:"token punctuation"},"("),a("env"),n("span",{class:"token punctuation"},","),a(),n("span",{class:"token string"},'"createFunction"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),a(" Napi"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token class-name"},"Function"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token function"},"New"),n("span",{class:"token punctuation"},"("),a("env"),n("span",{class:"token punctuation"},","),a(" createFunction"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
  `),n("span",{class:"token keyword"},"return"),a(" exports"),n("span",{class:"token punctuation"},";"),a(`
`),n("span",{class:"token punctuation"},"}"),a(`

`),n("span",{class:"token function"},"NODE_API_MODULE"),n("span",{class:"token punctuation"},"("),a("NODE_GYP_MODULE_NAME"),n("span",{class:"token punctuation"},","),a(" Init"),n("span",{class:"token punctuation"},")"),a(`
`)])],-1),z=n("pre",null,[n("code",{class:"language-cpp"},[a("#"),n("span",{class:"token operator"},"!"),a(` node
var addon `),n("span",{class:"token operator"},"="),a(),n("span",{class:"token function"},"require"),n("span",{class:"token punctuation"},"("),n("span",{class:"token char"},"'bindings'"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"("),n("span",{class:"token char"},"'hello_world'"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`

let fun `),n("span",{class:"token operator"},"="),a(" addon"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"createFunction"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),a(`

console`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"dir"),n("span",{class:"token punctuation"},"("),a("fun"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"toString"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token comment"},"// 'function hello_world() { [native code] }'"),a(`
console`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"log"),n("span",{class:"token punctuation"},"("),n("span",{class:"token function"},"fun"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token comment"},"// 'hello_world'"),a(`

`)])],-1),L=p(`<h2 id="object对象" tabindex="-1"><a class="header-anchor" href="#object对象"><span>Object对象</span></a></h2><blockquote><p><a href="https://github.com/nodejs/node-addon-api/blob/main/doc/object.md" target="_blank" rel="noopener noreferrer">https://github.com/nodejs/node-addon-api/blob/main/doc/object.md</a></p></blockquote><p><code>Napi::Object</code> 类继承自类 [<code>Napi::TypeTaggable</code>][]。</p><p><code>Napi::Object</code> 类对应于一个JavaScript对象。当处理更具体类型时，该类被以下node-addon-api类扩展，你可能会在开发中使用它们：</p><ul><li>[Napi::Array]</li><li>[Napi::ArrayBuffer]</li><li>[<code>Napi::Buffer&lt;T&gt;</code>]</li><li>[Napi::Function]</li><li>[Napi::TypedArray]</li></ul><p>此类提供了许多便利方法，主要用于在JavaScript对象上设置或获取属性。例如，Set() 和 Get() 方法。</p><h3 id="示例-1" tabindex="-1"><a class="header-anchor" href="#示例-1"><span>示例</span></a></h3><pre><code class="language-cpp"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;napi.h&gt;</span></span>

<span class="token keyword">using</span> <span class="token keyword">namespace</span> Napi<span class="token punctuation">;</span>

<span class="token keyword">void</span> <span class="token function">Init</span><span class="token punctuation">(</span>Env env<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// 创建一个新的对象实例</span>
  Object obj <span class="token operator">=</span> <span class="token class-name">Object</span><span class="token double-colon punctuation">::</span><span class="token function">New</span><span class="token punctuation">(</span>env<span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">// 分配属性值</span>
  obj<span class="token punctuation">.</span><span class="token function">Set</span><span class="token punctuation">(</span><span class="token string">&quot;hello&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;world&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  obj<span class="token punctuation">.</span><span class="token function">Set</span><span class="token punctuation">(</span><span class="token keyword">uint32_t</span><span class="token punctuation">(</span><span class="token number">42</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;生命、宇宙及一切的答案&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  obj<span class="token punctuation">.</span><span class="token function">Set</span><span class="token punctuation">(</span><span class="token string">&quot;道格拉斯·亚当斯&quot;</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">// 获取属性</span>
  Value val1 <span class="token operator">=</span> obj<span class="token punctuation">.</span><span class="token function">Get</span><span class="token punctuation">(</span><span class="token string">&quot;hello&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  Value val2 <span class="token operator">=</span> obj<span class="token punctuation">.</span><span class="token function">Get</span><span class="token punctuation">(</span><span class="token keyword">uint32_t</span><span class="token punctuation">(</span><span class="token number">42</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  Value val3 <span class="token operator">=</span> obj<span class="token punctuation">.</span><span class="token function">Get</span><span class="token punctuation">(</span><span class="token string">&quot;道格拉斯·亚当斯&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">// 检查对象是否有指定属性</span>
  <span class="token keyword">bool</span> hasHello <span class="token operator">=</span> obj<span class="token punctuation">.</span><span class="token function">Has</span><span class="token punctuation">(</span><span class="token string">&quot;hello&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
  <span class="token keyword">bool</span> hasWorld <span class="token operator">=</span> obj<span class="token punctuation">.</span><span class="token function">Has</span><span class="token punctuation">(</span><span class="token string">&quot;world&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// false</span>
<span class="token punctuation">}</span>
</code></pre><h3 id="方法" tabindex="-1"><a class="header-anchor" href="#方法"><span>方法</span></a></h3><h4 id="空构造函数" tabindex="-1"><a class="header-anchor" href="#空构造函数"><span>空构造函数</span></a></h4><pre><code class="language-cpp">Napi<span class="token double-colon punctuation">::</span><span class="token class-name">Object</span><span class="token double-colon punctuation">::</span><span class="token function">Object</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><p>创建一个新的空 <code>Object</code> 实例。</p><h4 id="构造函数-2" tabindex="-1"><a class="header-anchor" href="#构造函数-2"><span>构造函数</span></a></h4><pre><code class="language-cpp">Napi<span class="token double-colon punctuation">::</span><span class="token class-name">Object</span><span class="token double-colon punctuation">::</span><span class="token function">Object</span><span class="token punctuation">(</span>napi_env env<span class="token punctuation">,</span> napi_value value<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><ul><li><code>[in] env</code>: 构造 <code>Value</code> 对象的 <code>napi_env</code> 环境。</li><li><code>[in] value</code>: 表示JavaScript对象的 <code>napi_value</code>。</li></ul><p>创建一个非空的 <code>Napi::Object</code> 实例。</p><h4 id="new-1" tabindex="-1"><a class="header-anchor" href="#new-1"><span>New()</span></a></h4><pre><code class="language-cpp">Napi<span class="token double-colon punctuation">::</span>Object Napi<span class="token double-colon punctuation">::</span><span class="token class-name">Object</span><span class="token double-colon punctuation">::</span><span class="token function">New</span><span class="token punctuation">(</span>napi_env env<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><ul><li><code>[in] env</code>: 用于构造 <code>Napi::Value</code> 对象的 <code>napi_env</code> 环境。</li></ul><p>创建一个新的 <code>Napi::Object</code> 值。</p><h4 id="set" tabindex="-1"><a class="header-anchor" href="#set"><span>Set()</span></a></h4><pre><code class="language-cpp"><span class="token keyword">bool</span> Napi<span class="token double-colon punctuation">::</span><span class="token class-name">Object</span><span class="token double-colon punctuation">::</span><span class="token function">Set</span><span class="token punctuation">(</span>____ key<span class="token punctuation">,</span> ____ value<span class="token punctuation">)</span> <span class="token keyword">const</span><span class="token punctuation">;</span>
</code></pre><ul><li><code>[in] key</code>: 被赋值属性的名称。</li><li><code>[in] value</code>: 被赋予属性的值。</li></ul><p>向对象添加指定键和值的属性。</p><p>键可以是以下类型之一：</p><ul><li><code>napi_value</code></li><li>[<code>Napi::Value</code>]</li><li><code>const char*</code></li><li><code>const std::string&amp;</code></li><li><code>uint32_t</code></li></ul><p><code>value</code> 可以是任何被 [<code>Napi::Value::From</code>][] 接受的类型。</p><h4 id="delete" tabindex="-1"><a class="header-anchor" href="#delete"><span>Delete()</span></a></h4><pre><code class="language-cpp"><span class="token keyword">bool</span> Napi<span class="token double-colon punctuation">::</span><span class="token class-name">Object</span><span class="token double-colon punctuation">::</span><span class="token function">Delete</span><span class="token punctuation">(</span>____ key<span class="token punctuation">)</span> <span class="token keyword">const</span><span class="token punctuation">;</span>
</code></pre><ul><li><code>[in] key</code>: 要删除的属性的名称。</li></ul><p>删除与给定键关联的属性。如果属性被删除，则返回 <code>true</code>。</p><p><code>key</code> 可以是以下类型之一：</p><ul><li><code>napi_value</code></li><li>[<code>Napi::Value</code>]</li><li><code>const char *</code></li><li><code>const std::string &amp;</code></li><li><code>uint32_t</code></li></ul><h4 id="get" tabindex="-1"><a class="header-anchor" href="#get"><span>Get()</span></a></h4><pre><code class="language-cpp">Napi<span class="token double-colon punctuation">::</span>Value Napi<span class="token double-colon punctuation">::</span><span class="token class-name">Object</span><span class="token double-colon punctuation">::</span><span class="token function">Get</span><span class="token punctuation">(</span>____ key<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><ul><li><code>[in] key</code>: 要检索其值的属性的名称。</li></ul><p>返回与键属性关联的 【Napi::Value】。如果键不存在，则返回值“未定义”。</p><p><code>key</code> 可以是以下类型之一：</p><ul><li><code>napi_value</code></li><li>[<code>Napi::Value</code>]</li><li><code>const char *</code></li><li><code>const std::string &amp;</code></li><li><code>uint32_t</code></li></ul><h4 id="has" tabindex="-1"><a class="header-anchor" href="#has"><span>Has()</span></a></h4><pre><code class="language-cpp"><span class="token keyword">bool</span> Napi<span class="token double-colon punctuation">::</span><span class="token class-name">Object</span><span class="token double-colon punctuation">::</span><span class="token function">Has</span><span class="token punctuation">(</span>____ key<span class="token punctuation">)</span> <span class="token keyword">const</span><span class="token punctuation">;</span>
</code></pre><ul><li><code>[in] key</code>: 要检查的属性名称。</li></ul><p>如果对象有名为 <code>key</code> 的属性则返回 <code>true</code>，否则返回 <code>false</code>。</p><h4 id="instanceof" tabindex="-1"><a class="header-anchor" href="#instanceof"><span>InstanceOf()</span></a></h4><pre><code class="language-cpp"><span class="token keyword">bool</span> Napi<span class="token double-colon punctuation">::</span><span class="token class-name">Object</span><span class="token double-colon punctuation">::</span><span class="token function">InstanceOf</span><span class="token punctuation">(</span><span class="token keyword">const</span> Function<span class="token operator">&amp;</span> constructor<span class="token punctuation">)</span> <span class="token keyword">const</span><span class="token punctuation">;</span>
</code></pre><ul><li><code>[in] constructor</code>: 用于比较对象的构造函数【Napi::Function】。</li></ul><p>如果 <code>Napi::Object</code> 是由 <code>constructor</code> 创建的实例，则返回 <code>true</code>，否则返回 <code>false</code>。</p><p>注意：这等同于JavaScript中的 <code>instanceof</code> 运算符。</p><h4 id="addfinalizer" tabindex="-1"><a class="header-anchor" href="#addfinalizer"><span>AddFinalizer()</span></a></h4><pre><code class="language-cpp"><span class="token keyword">template</span> <span class="token operator">&lt;</span><span class="token keyword">typename</span> <span class="token class-name">Finalizer</span><span class="token punctuation">,</span> <span class="token keyword">typename</span> <span class="token class-name">T</span><span class="token operator">&gt;</span>
<span class="token keyword">inline</span> <span class="token keyword">void</span> <span class="token function">AddFinalizer</span><span class="token punctuation">(</span>Finalizer finalizeCallback<span class="token punctuation">,</span> T<span class="token operator">*</span> data<span class="token punctuation">)</span> <span class="token keyword">const</span><span class="token punctuation">;</span>
</code></pre><ul><li><code>[in] finalizeCallback</code>: 当对象被垃圾回收时调用的函数。</li><li><code>[in] data</code>: 与对象关联的数据。</li></ul><p>将 <code>data</code> 与对象关联，并在对象被垃圾回收时调用 <code>finalizeCallback</code>。<code>finalizeCallback</code> 的签名如下：</p><pre><code class="language-cpp"><span class="token keyword">void</span> <span class="token function">finalizeCallback</span><span class="token punctuation">(</span>Napi<span class="token double-colon punctuation">::</span>Env env<span class="token punctuation">,</span> T<span class="token operator">*</span> data<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><p>其中 <code>data</code> 是传递给 <code>AddFinalizer()</code> 调用的指针。</p><h4 id="addfinalizer-1" tabindex="-1"><a class="header-anchor" href="#addfinalizer-1"><span>AddFinalizer()</span></a></h4><pre><code class="language-cpp"><span class="token keyword">template</span> <span class="token operator">&lt;</span><span class="token keyword">typename</span> <span class="token class-name">Finalizer</span><span class="token punctuation">,</span> <span class="token keyword">typename</span> <span class="token class-name">T</span><span class="token punctuation">,</span> <span class="token keyword">typename</span> <span class="token class-name">Hint</span><span class="token operator">&gt;</span>
<span class="token keyword">inline</span> <span class="token keyword">void</span> <span class="token function">AddFinalizer</span><span class="token punctuation">(</span>Finalizer finalizeCallback<span class="token punctuation">,</span>
                         T<span class="token operator">*</span> data<span class="token punctuation">,</span>
                         Hint<span class="token operator">*</span> finalizeHint<span class="token punctuation">)</span> <span class="token keyword">const</span><span class="token punctuation">;</span>
</code></pre><ul><li><code>[in] data</code>: 与对象关联的数据。</li><li><code>[in] finalizeCallback</code>: 当对象被垃圾回收时调用的函数。</li></ul><p>将 <code>data</code> 与对象关联，并在对象被垃圾回收时调用 <code>finalizeCallback</code>。可以提供一个额外的提示，也会传递给 <code>finalizeCallback</code>，其签名如下：</p><pre><code class="language-cpp"><span class="token keyword">void</span> <span class="token function">finalizeCallback</span><span class="token punctuation">(</span>Napi<span class="token double-colon punctuation">::</span>Env env<span class="token punctuation">,</span> T<span class="token operator">*</span> data<span class="token punctuation">,</span> Hint<span class="token operator">*</span> hint<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><p>其中 <code>data</code> 和 <code>hint</code> 是传递给 <code>AddFinalizer()</code> 调用的指针。</p><h4 id="getpropertynames" tabindex="-1"><a class="header-anchor" href="#getpropertynames"><span>GetPropertyNames()</span></a></h4><pre><code class="language-cpp">Napi<span class="token double-colon punctuation">::</span>Array Napi<span class="token double-colon punctuation">::</span><span class="token class-name">Object</span><span class="token double-colon punctuation">::</span><span class="token function">GetPropertyNames</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">const</span><span class="token punctuation">;</span>
</code></pre><p>返回对象可枚举属性的名称作为字符串的【Napi::Array】数组。以 <code>Symbol</code> 为键的属性不会被包含在内。</p><h4 id="hasownproperty" tabindex="-1"><a class="header-anchor" href="#hasownproperty"><span>HasOwnProperty()</span></a></h4><pre><code class="language-cpp"><span class="token keyword">bool</span> Napi<span class="token double-colon punctuation">::</span><span class="token class-name">Object</span><span class="token double-colon punctuation">::</span><span class="token function">HasOwnProperty</span><span class="token punctuation">(</span>____ key<span class="token punctuation">)</span> <span class="token keyword">const</span><span class="token punctuation">;</span>
</code></pre><ul><li><code>[in] key</code>: 要检查的属性名称。</li></ul><p>如果对象有一个名为 <code>key</code> 的自有属性，则返回 <code>true</code>，否则返回 <code>false</code>。</p><h4 id="defineproperty" tabindex="-1"><a class="header-anchor" href="#defineproperty"><span>DefineProperty()</span></a></h4><pre><code class="language-cpp"><span class="token keyword">bool</span> Napi<span class="token double-colon punctuation">::</span><span class="token class-name">Object</span><span class="token double-colon punctuation">::</span><span class="token function">DefineProperty</span><span class="token punctuation">(</span><span class="token keyword">const</span> Napi<span class="token double-colon punctuation">::</span>PropertyDescriptor<span class="token operator">&amp;</span> property<span class="token punctuation">)</span> <span class="token keyword">const</span><span class="token punctuation">;</span>
</code></pre><ul><li><code>[in] property</code>: 一个 【Napi::PropertyDescriptor】。</li></ul><p>在对象上定义一个属性。</p><h4 id="defineproperties" tabindex="-1"><a class="header-anchor" href="#defineproperties"><span>DefineProperties()</span></a></h4><pre><code class="language-cpp"><span class="token keyword">bool</span> Napi<span class="token double-colon punctuation">::</span><span class="token class-name">Object</span><span class="token double-colon punctuation">::</span><span class="token function">DefineProperties</span><span class="token punctuation">(</span>____ properties<span class="token punctuation">)</span> <span class="token keyword">const</span><span class="token punctuation">;</span>
</code></pre><ul><li><code>[in] properties</code>: 一个【Napi::PropertyDescriptor】列表。可以是以下类型之一： <ul><li><code>const std::initializer_list&lt;Napi::PropertyDescriptor&gt;&amp;</code></li><li><code>const std::vector&lt;Napi::PropertyDescriptor&gt;&amp;</code></li></ul></li></ul><p>在对象上定义属性。</p><h4 id="freeze" tabindex="-1"><a class="header-anchor" href="#freeze"><span>Freeze()</span></a></h4><pre><code class="language-cpp"><span class="token keyword">void</span> Napi<span class="token double-colon punctuation">::</span><span class="token class-name">Object</span><span class="token double-colon punctuation">::</span><span class="token function">Freeze</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">const</span><span class="token punctuation">;</span>
</code></pre><p><code>Napi::Object::Freeze()</code> 方法冻结一个对象。冻结后的对象不能再被更改。冻结对象会阻止新属性被添加，现有属性被删除，阻止现有属性的可枚举性、可配置性和可写性被改变，同时也阻止现有属性的值被改变。此外，冻结对象还会阻止其原型被改变。</p><h4 id="seal" tabindex="-1"><a class="header-anchor" href="#seal"><span>Seal()</span></a></h4><pre><code class="language-cpp"><span class="token keyword">void</span> Napi<span class="token double-colon punctuation">::</span><span class="token class-name">Object</span><span class="token double-colon punctuation">::</span><span class="token function">Seal</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">const</span><span class="token punctuation">;</span>
</code></pre><p><code>Napi::Object::Seal()</code> 方法密封一个对象，阻止新属性被添加，并标记所有现有属性为不可配置。现有属性的值只要可写仍然可以被更改。</p><h4 id="operator" tabindex="-1"><a class="header-anchor" href="#operator"><span>operator<a href=""></a></span></a></h4><pre><code class="language-cpp">Napi<span class="token double-colon punctuation">::</span>PropertyLValue<span class="token operator">&lt;</span>std<span class="token double-colon punctuation">::</span>string<span class="token operator">&gt;</span> Napi<span class="token double-colon punctuation">::</span>Object<span class="token double-colon punctuation">::</span><span class="token keyword">operator</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token keyword">const</span> <span class="token keyword">char</span><span class="token operator">*</span> utf8name<span class="token punctuation">)</span> <span class="token keyword">const</span><span class="token punctuation">;</span>
</code></pre><ul><li><code>[in] utf8name</code>: UTF-8编码的属性名称的空终止符。</li></ul><p>返回作为命名属性的【Napi::Object::PropertyLValue】或设置命名属性。</p><pre><code class="language-cpp">Napi<span class="token double-colon punctuation">::</span>PropertyLValue<span class="token operator">&lt;</span>std<span class="token double-colon punctuation">::</span>string<span class="token operator">&gt;</span> Napi<span class="token double-colon punctuation">::</span>Object<span class="token double-colon punctuation">::</span><span class="token keyword">operator</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token keyword">const</span> std<span class="token double-colon punctuation">::</span>string<span class="token operator">&amp;</span> utf8name<span class="token punctuation">)</span> <span class="token keyword">const</span><span class="token punctuation">;</span>
</code></pre><ul><li><code>[in] utf8name</code>: UTF-8编码的属性名称。</li></ul><p>返回作为命名属性的【Napi::Object::PropertyLValue】或设置命名属性。</p><pre><code class="language-cpp">Napi<span class="token double-colon punctuation">::</span>PropertyLValue<span class="token operator">&lt;</span><span class="token keyword">uint32_t</span><span class="token operator">&gt;</span> Napi<span class="token double-colon punctuation">::</span>Object<span class="token double-colon punctuation">::</span><span class="token keyword">operator</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token keyword">uint32_t</span> index<span class="token punctuation">)</span> <span class="token keyword">const</span><span class="token punctuation">;</span>
</code></pre><ul><li><code>[in] index</code>: 元素索引。</li></ul><p>返回作为索引属性或数组元素的【Napi::Object::PropertyLValue】或设置索引属性或数组元素。</p><h4 id="begin" tabindex="-1"><a class="header-anchor" href="#begin"><span>begin()</span></a></h4><pre><code class="language-cpp">Napi<span class="token double-colon punctuation">::</span>Object<span class="token double-colon punctuation">::</span>iterator Napi<span class="token double-colon punctuation">::</span><span class="token class-name">Object</span><span class="token double-colon punctuation">::</span><span class="token function">begin</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">const</span><span class="token punctuation">;</span>
</code></pre><p>返回对象常量迭代器的起始位置。</p><pre><code class="language-cpp">Napi<span class="token double-colon punctuation">::</span>Object<span class="token double-colon punctuation">::</span>iterator Napi<span class="token double-colon punctuation">::</span><span class="token class-name">Object</span><span class="token double-colon punctuation">::</span><span class="token function">begin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><p>返回对象非常量迭代器的起始位置。</p><h4 id="end" tabindex="-1"><a class="header-anchor" href="#end"><span>end()</span></a></h4><pre><code class="language-cpp">Napi<span class="token double-colon punctuation">::</span>Object<span class="token double-colon punctuation">::</span>iterator Napi<span class="token double-colon punctuation">::</span><span class="token class-name">Object</span><span class="token double-colon punctuation">::</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">const</span><span class="token punctuation">;</span>
</code></pre><p>返回对象常量迭代器的结束位置。</p><pre><code class="language-cpp">Napi<span class="token double-colon punctuation">::</span>Object<span class="token double-colon punctuation">::</span>iterator Napi<span class="token double-colon punctuation">::</span><span class="token class-name">Object</span><span class="token double-colon punctuation">::</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><p>返回对象非常量迭代器的结束位置。</p><h3 id="迭代器" tabindex="-1"><a class="header-anchor" href="#迭代器"><span>迭代器</span></a></h3><p>迭代器暴露一个 <code>std::pair&lt;...&gt;</code>，其中 <code>first</code> 属性是一个持有当前迭代键的 【Napi::Value】，而 <code>second</code> 属性是一个持有当前迭代值的 【Napi::Object::PropertyLValue】。迭代器仅在启用C++异常（通过构建时定义 <code>NAPI_CPP_EXCEPTIONS</code>）时可用。</p><h3 id="常量迭代器" tabindex="-1"><a class="header-anchor" href="#常量迭代器"><span>常量迭代器</span></a></h3><p>在常量迭代器中，迭代的值是不可变的。</p><h4 id="operator-1" tabindex="-1"><a class="header-anchor" href="#operator-1"><span><code>operator++()</code></span></a></h4><pre><code class="language-cpp"><span class="token keyword">inline</span> Napi<span class="token double-colon punctuation">::</span>Object<span class="token double-colon punctuation">::</span>const_iterator<span class="token operator">&amp;</span> Napi<span class="token double-colon punctuation">::</span>Object<span class="token double-colon punctuation">::</span>const_iterator<span class="token double-colon punctuation">::</span><span class="token keyword">operator</span><span class="token operator">++</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><p>使迭代器向前移动一位，即遍历到下一个属性。</p><h4 id="operator-2" tabindex="-1"><a class="header-anchor" href="#operator-2"><span><code>operator==</code></span></a></h4><pre><code class="language-cpp"><span class="token keyword">inline</span> <span class="token keyword">bool</span> Napi<span class="token double-colon punctuation">::</span>Object<span class="token double-colon punctuation">::</span>const_iterator<span class="token double-colon punctuation">::</span><span class="token keyword">operator</span><span class="token operator">==</span><span class="token punctuation">(</span><span class="token keyword">const</span> Napi<span class="token double-colon punctuation">::</span>Object<span class="token double-colon punctuation">::</span>const_iterator<span class="token operator">&amp;</span> other<span class="token punctuation">)</span> <span class="token keyword">const</span><span class="token punctuation">;</span>
</code></pre><ul><li><code>[in] other</code>: 另一个要与此迭代器进行比较的迭代器。</li></ul><p>如果两个迭代器指向相同的索引位置，则返回 <code>true</code>。</p><h4 id="operator-3" tabindex="-1"><a class="header-anchor" href="#operator-3"><span><code>operator!=</code></span></a></h4><pre><code class="language-cpp"><span class="token keyword">inline</span> <span class="token keyword">bool</span> Napi<span class="token double-colon punctuation">::</span>Object<span class="token double-colon punctuation">::</span>const_iterator<span class="token double-colon punctuation">::</span><span class="token keyword">operator</span><span class="token operator">!=</span><span class="token punctuation">(</span><span class="token keyword">const</span> Napi<span class="token double-colon punctuation">::</span>Object<span class="token double-colon punctuation">::</span>const_iterator<span class="token operator">&amp;</span> other<span class="token punctuation">)</span> <span class="token keyword">const</span><span class="token punctuation">;</span>
</code></pre><ul><li><code>[in] other</code>: 另一个要与此迭代器进行比较的迭代器。</li></ul><p>如果两个迭代器指向不同的索引位置，则返回 <code>true</code>。</p><h4 id="operator-4" tabindex="-1"><a class="header-anchor" href="#operator-4"><span><code>operator*()</code></span></a></h4><pre><code class="language-cpp"><span class="token keyword">inline</span> <span class="token keyword">const</span> std<span class="token double-colon punctuation">::</span>pair<span class="token operator">&lt;</span>Napi<span class="token double-colon punctuation">::</span>Value<span class="token punctuation">,</span> Napi<span class="token double-colon punctuation">::</span>Object<span class="token double-colon punctuation">::</span>PropertyLValue<span class="token operator">&lt;</span>Napi<span class="token double-colon punctuation">::</span>Value<span class="token operator">&gt;&gt;</span> Napi<span class="token double-colon punctuation">::</span>Object<span class="token double-colon punctuation">::</span>const_iterator<span class="token double-colon punctuation">::</span><span class="token keyword">operator</span><span class="token operator">*</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">const</span><span class="token punctuation">;</span>
</code></pre><p>返回当前迭代的属性键值对，键为 <code>Napi::Value</code> 类型，值为不可修改的 <code>Napi::Object::PropertyLValue</code> 对象。</p><h4 id="示例-2" tabindex="-1"><a class="header-anchor" href="#示例-2"><span>示例</span></a></h4><pre><code class="language-cpp">Value <span class="token function">Sum</span><span class="token punctuation">(</span><span class="token keyword">const</span> CallbackInfo<span class="token operator">&amp;</span> info<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  Object object <span class="token operator">=</span> info<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token generic-function"><span class="token function">As</span><span class="token generic class-name"><span class="token operator">&lt;</span>Object<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">int64_t</span> sum <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>

  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> <span class="token keyword">auto</span><span class="token operator">&amp;</span> e <span class="token operator">:</span> object<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    sum <span class="token operator">+=</span> <span class="token generic-function"><span class="token function">static_cast</span><span class="token generic class-name"><span class="token operator">&lt;</span>Value<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>second<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token generic-function"><span class="token function">As</span><span class="token generic class-name"><span class="token operator">&lt;</span>Number<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Int64Value</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">return</span> <span class="token class-name">Number</span><span class="token double-colon punctuation">::</span><span class="token function">New</span><span class="token punctuation">(</span>info<span class="token punctuation">.</span><span class="token function">Env</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> sum<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><h3 id="非常量迭代器" tabindex="-1"><a class="header-anchor" href="#非常量迭代器"><span>非常量迭代器</span></a></h3><p>在非常量迭代器中，迭代的值是可以修改的。</p><h4 id="operator-5" tabindex="-1"><a class="header-anchor" href="#operator-5"><span><code>operator++()</code></span></a></h4><pre><code class="language-cpp"><span class="token keyword">inline</span> Napi<span class="token double-colon punctuation">::</span>Object<span class="token double-colon punctuation">::</span>iterator<span class="token operator">&amp;</span> Napi<span class="token double-colon punctuation">::</span>Object<span class="token double-colon punctuation">::</span>iterator<span class="token double-colon punctuation">::</span><span class="token keyword">operator</span><span class="token operator">++</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><p>使迭代器向前移动一位，进行下一项属性的迭代。</p><h4 id="operator-6" tabindex="-1"><a class="header-anchor" href="#operator-6"><span><code>operator==</code></span></a></h4><pre><code class="language-cpp"><span class="token keyword">inline</span> <span class="token keyword">bool</span> Napi<span class="token double-colon punctuation">::</span>Object<span class="token double-colon punctuation">::</span>iterator<span class="token double-colon punctuation">::</span><span class="token keyword">operator</span><span class="token operator">==</span><span class="token punctuation">(</span><span class="token keyword">const</span> Napi<span class="token double-colon punctuation">::</span>Object<span class="token double-colon punctuation">::</span>iterator<span class="token operator">&amp;</span> other<span class="token punctuation">)</span> <span class="token keyword">const</span><span class="token punctuation">;</span>
</code></pre><ul><li><code>[in] other</code>: 用于与当前迭代器进行比较的另一个迭代器。</li></ul><p>如果两个迭代器位于同一索引，则返回 <code>true</code>。</p><h4 id="operator-7" tabindex="-1"><a class="header-anchor" href="#operator-7"><span><code>operator!=</code></span></a></h4><pre><code class="language-cpp"><span class="token keyword">inline</span> <span class="token keyword">bool</span> Napi<span class="token double-colon punctuation">::</span>Object<span class="token double-colon punctuation">::</span>iterator<span class="token double-colon punctuation">::</span><span class="token keyword">operator</span><span class="token operator">!=</span><span class="token punctuation">(</span><span class="token keyword">const</span> Napi<span class="token double-colon punctuation">::</span>Object<span class="token double-colon punctuation">::</span>iterator<span class="token operator">&amp;</span> other<span class="token punctuation">)</span> <span class="token keyword">const</span><span class="token punctuation">;</span>
</code></pre><ul><li><code>[in] other</code>: 用于与当前迭代器进行比较的另一个迭代器。</li></ul><p>如果两个迭代器位于不同索引，则返回 <code>true</code>。</p><h4 id="operator-8" tabindex="-1"><a class="header-anchor" href="#operator-8"><span><code>operator*()</code></span></a></h4><pre><code class="language-cpp"><span class="token keyword">inline</span> std<span class="token double-colon punctuation">::</span>pair<span class="token operator">&lt;</span>Napi<span class="token double-colon punctuation">::</span>Value<span class="token punctuation">,</span> Napi<span class="token double-colon punctuation">::</span>Object<span class="token double-colon punctuation">::</span>PropertyLValue<span class="token operator">&lt;</span>Napi<span class="token double-colon punctuation">::</span>Value<span class="token operator">&gt;&gt;</span> Napi<span class="token double-colon punctuation">::</span>Object<span class="token double-colon punctuation">::</span>iterator<span class="token double-colon punctuation">::</span><span class="token keyword">operator</span><span class="token operator">*</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><p>返回当前迭代的属性键值对，键为 <code>Napi::Value</code> 类型，值为可修改的 <code>Napi::Object::PropertyLValue</code> 对象。</p><h4 id="示例-3" tabindex="-1"><a class="header-anchor" href="#示例-3"><span>示例</span></a></h4><pre><code class="language-cpp"><span class="token keyword">void</span> <span class="token function">Increment</span><span class="token punctuation">(</span><span class="token keyword">const</span> CallbackInfo<span class="token operator">&amp;</span> info<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  Env env <span class="token operator">=</span> info<span class="token punctuation">.</span><span class="token function">Env</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  Object object <span class="token operator">=</span> info<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token generic-function"><span class="token function">As</span><span class="token generic class-name"><span class="token operator">&lt;</span>Object<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">auto</span> e <span class="token operator">:</span> object<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int64_t</span> value <span class="token operator">=</span> <span class="token generic-function"><span class="token function">static_cast</span><span class="token generic class-name"><span class="token operator">&lt;</span>Value<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>second<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token generic-function"><span class="token function">As</span><span class="token generic class-name"><span class="token operator">&lt;</span>Number<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Int64Value</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token operator">++</span>value<span class="token punctuation">;</span>
    e<span class="token punctuation">.</span>second <span class="token operator">=</span> Napi<span class="token double-colon punctuation">::</span><span class="token class-name">Number</span><span class="token double-colon punctuation">::</span><span class="token function">New</span><span class="token punctuation">(</span>env<span class="token punctuation">,</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><h3 id="案例-factory-of-object" tabindex="-1"><a class="header-anchor" href="#案例-factory-of-object"><span>案例：Factory_Of_Object</span></a></h3>`,140),R=n("code",null,"src/hello_world.cc",-1),J=n("code",null,"index.js",-1),U=n("pre",null,[n("code",{class:"language-cpp"},[n("span",{class:"token macro property"},[n("span",{class:"token directive-hash"},"#"),n("span",{class:"token directive keyword"},"include"),a(),n("span",{class:"token string"},"<napi.h>")]),a(`

`),n("span",{class:"token comment"},'// function creatObj(){ return {"hello":"world"} }'),a(`
Napi`),n("span",{class:"token double-colon punctuation"},"::"),a("Value "),n("span",{class:"token function"},"creatObj"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"const"),a(" Napi"),n("span",{class:"token double-colon punctuation"},"::"),a("CallbackInfo "),n("span",{class:"token operator"},"&"),a("info"),n("span",{class:"token punctuation"},")"),a(`
`),n("span",{class:"token punctuation"},"{"),a(`
  Napi`),n("span",{class:"token double-colon punctuation"},"::"),a("Env env "),n("span",{class:"token operator"},"="),a(" info"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"Env"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`

  `),n("span",{class:"token comment"},"// obj = {}"),a(`
  Napi`),n("span",{class:"token double-colon punctuation"},"::"),a("Object obj "),n("span",{class:"token operator"},"="),a(" Napi"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token class-name"},"Object"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token function"},"New"),n("span",{class:"token punctuation"},"("),a("env"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
  `),n("span",{class:"token comment"},'// obj["hello"] = "world"'),a(`
  obj`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"Set"),n("span",{class:"token punctuation"},"("),a("Napi"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token class-name"},"String"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token function"},"New"),n("span",{class:"token punctuation"},"("),a("env"),n("span",{class:"token punctuation"},","),a(),n("span",{class:"token string"},'"hello"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),a(" Napi"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token class-name"},"String"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token function"},"New"),n("span",{class:"token punctuation"},"("),a("env"),n("span",{class:"token punctuation"},","),a(),n("span",{class:"token string"},'"world"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`

  `),n("span",{class:"token keyword"},"return"),a(" obj"),n("span",{class:"token punctuation"},";"),a(`
`),n("span",{class:"token punctuation"},"}"),a(`

Napi`),n("span",{class:"token double-colon punctuation"},"::"),a("Object "),n("span",{class:"token function"},"Init"),n("span",{class:"token punctuation"},"("),a("Napi"),n("span",{class:"token double-colon punctuation"},"::"),a("Env env"),n("span",{class:"token punctuation"},","),a(" Napi"),n("span",{class:"token double-colon punctuation"},"::"),a("Object exports"),n("span",{class:"token punctuation"},")"),a(`
`),n("span",{class:"token punctuation"},"{"),a(`
  `),n("span",{class:"token comment"},"// exports['creatObj'] = creatObj"),a(`
  exports`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"Set"),n("span",{class:"token punctuation"},"("),a("Napi"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token class-name"},"String"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token function"},"New"),n("span",{class:"token punctuation"},"("),a("env"),n("span",{class:"token punctuation"},","),a(),n("span",{class:"token string"},'"creatObj"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),a(" Napi"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token class-name"},"Function"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token function"},"New"),n("span",{class:"token punctuation"},"("),a("env"),n("span",{class:"token punctuation"},","),a(" creatObj"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
  `),n("span",{class:"token keyword"},"return"),a(" exports"),n("span",{class:"token punctuation"},";"),a(`
`),n("span",{class:"token punctuation"},"}"),a(`

`),n("span",{class:"token function"},"NODE_API_MODULE"),n("span",{class:"token punctuation"},"("),a("NODE_GYP_MODULE_NAME"),n("span",{class:"token punctuation"},","),a(" Init"),n("span",{class:"token punctuation"},")"),a(`
`)])],-1),G=n("pre",null,[n("code",{class:"language-cpp"},[a("var addon "),n("span",{class:"token operator"},"="),a(),n("span",{class:"token function"},"require"),n("span",{class:"token punctuation"},"("),n("span",{class:"token char"},"'bindings'"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"("),n("span",{class:"token char"},"'hello_world'"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`

let obj `),n("span",{class:"token operator"},"="),a(" addon"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"creatObj"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),a(`

console`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"log"),n("span",{class:"token punctuation"},"("),a("obj"),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token comment"},"// { hello: 'world' }"),a(`

`)])],-1),K=p('<h2 id="objectwrap" tabindex="-1"><a class="header-anchor" href="#objectwrap"><span>ObjectWrap</span></a></h2><p><strong>ObjectWrap简介</strong></p><ul><li><code>Napi::ObjectWrap&lt;T&gt;</code>继承自<code>Napi::InstanceWrap&lt;T&gt;</code></li><li>ObjectWrap类用于将c++代码的生命周期绑定到js上</li><li>绑定后， <ul><li>当js对象创建时，则c++代码的对象实例也将被创建</li><li>当js对象上的方法（通过InstanceMethod定义的），则c++对象上的实例方法也将被调用</li><li>当js对象被垃圾收集后，c++的析构函数会在之后一段时间被调用。</li></ul></li></ul><h3 id="案例-objectwrap" tabindex="-1"><a class="header-anchor" href="#案例-objectwrap"><span>案例：objectWrap</span></a></h3>',4),Y=n("code",null,"ddon.cc",-1),H=n("code",null,"src/MyObject.cc",-1),Q=n("code",null,"src/MyObject.hh",-1),X=n("code",null,"index.js",-1),Z=n("pre",null,[n("code",{class:"language-cpp"},[n("span",{class:"token macro property"},[n("span",{class:"token directive-hash"},"#"),n("span",{class:"token directive keyword"},"include"),a(),n("span",{class:"token string"},'"./MyObject.hh"')]),a(`

Napi`),n("span",{class:"token double-colon punctuation"},"::"),a("Object "),n("span",{class:"token function"},"Init"),n("span",{class:"token punctuation"},"("),a("Napi"),n("span",{class:"token double-colon punctuation"},"::"),a("Env env"),n("span",{class:"token punctuation"},","),a(" Napi"),n("span",{class:"token double-colon punctuation"},"::"),a("Object exports"),n("span",{class:"token punctuation"},")"),a(`
`),n("span",{class:"token punctuation"},"{"),a(`
    `),n("span",{class:"token class-name"},"MyObject"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token function"},"Init"),n("span",{class:"token punctuation"},"("),a("env"),n("span",{class:"token punctuation"},","),a(" exports"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
    `),n("span",{class:"token keyword"},"return"),a(" exports"),n("span",{class:"token punctuation"},";"),a(`
`),n("span",{class:"token punctuation"},"}"),a(`

`),n("span",{class:"token function"},"NODE_API_MODULE"),n("span",{class:"token punctuation"},"("),a("NODE_GYP_MODULE_NAME"),n("span",{class:"token punctuation"},","),a(" Init"),n("span",{class:"token punctuation"},")"),a(`
`)])],-1),$=n("pre",null,[n("code",{class:"language-cpp"},[n("span",{class:"token macro property"},[n("span",{class:"token directive-hash"},"#"),n("span",{class:"token directive keyword"},"include"),a(),n("span",{class:"token string"},'"MyObject.hh"')]),a(`

`),n("span",{class:"token comment"},"// 实现构造函数"),a(`
`),n("span",{class:"token class-name"},"MyObject"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token function"},"MyObject"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"const"),a(" Napi"),n("span",{class:"token double-colon punctuation"},"::"),a("CallbackInfo "),n("span",{class:"token operator"},"&"),a("info"),n("span",{class:"token punctuation"},")"),a(`
    `),n("span",{class:"token comment"},"// ↓ c++ 语法 ，调用父级的构造函数"),a(`
    `),n("span",{class:"token operator"},":"),a(" Napi"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token generic-function"},[n("span",{class:"token function"},"ObjectWrap"),n("span",{class:"token generic class-name"},[n("span",{class:"token operator"},"<"),a("MyObject"),n("span",{class:"token operator"},">")])]),n("span",{class:"token punctuation"},"("),a("info"),n("span",{class:"token punctuation"},")"),a(`
`),n("span",{class:"token punctuation"},"{"),a(`
  Napi`),n("span",{class:"token double-colon punctuation"},"::"),a("Env env "),n("span",{class:"token operator"},"="),a(" info"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"Env"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`

  `),n("span",{class:"token comment"},"// 期望得到一个number作为形参"),a(`
  `),n("span",{class:"token keyword"},"if"),a(),n("span",{class:"token punctuation"},"("),a("info"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"Length"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token operator"},"<"),a(),n("span",{class:"token number"},"1"),a(),n("span",{class:"token operator"},"||"),a(),n("span",{class:"token operator"},"!"),a("info"),n("span",{class:"token punctuation"},"["),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"IsNumber"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),a(`
  `),n("span",{class:"token punctuation"},"{"),a(`
    Napi`),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token class-name"},"TypeError"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token function"},"New"),n("span",{class:"token punctuation"},"("),a("env"),n("span",{class:"token punctuation"},","),a(),n("span",{class:"token string"},'"expected one number as arguments"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
    `),n("span",{class:"token keyword"},"return"),n("span",{class:"token punctuation"},";"),a(`
  `),n("span",{class:"token punctuation"},"}"),a(`
  `),n("span",{class:"token comment"},"// 初始化value"),a(`
  `),n("span",{class:"token keyword"},"double"),a(" val "),n("span",{class:"token operator"},"="),a(" info"),n("span",{class:"token punctuation"},"["),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},"."),n("span",{class:"token generic-function"},[n("span",{class:"token function"},"As"),n("span",{class:"token generic class-name"},[n("span",{class:"token operator"},"<"),a("Napi"),n("span",{class:"token double-colon punctuation"},"::"),a("Number"),n("span",{class:"token operator"},">")])]),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"ToNumber"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"DoubleValue"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
  `),n("span",{class:"token keyword"},"this"),n("span",{class:"token operator"},"->"),a("value "),n("span",{class:"token operator"},"="),a(" val"),n("span",{class:"token punctuation"},";"),a(`
`),n("span",{class:"token punctuation"},"}"),a(`
`),n("span",{class:"token comment"},`/**
 * 获取value的值
 */`),a(`
Napi`),n("span",{class:"token double-colon punctuation"},"::"),a("Value "),n("span",{class:"token class-name"},"MyObject"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token function"},"GetVal"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"const"),a(" Napi"),n("span",{class:"token double-colon punctuation"},"::"),a("CallbackInfo "),n("span",{class:"token operator"},"&"),a("info"),n("span",{class:"token punctuation"},")"),a(`
`),n("span",{class:"token punctuation"},"{"),a(`
  Napi`),n("span",{class:"token double-colon punctuation"},"::"),a("Env env "),n("span",{class:"token operator"},"="),a(" info"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"Env"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
  `),n("span",{class:"token keyword"},"return"),a(" Napi"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token class-name"},"Number"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token function"},"New"),n("span",{class:"token punctuation"},"("),a("env"),n("span",{class:"token punctuation"},","),a(),n("span",{class:"token keyword"},"this"),n("span",{class:"token operator"},"->"),a("value"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
`),n("span",{class:"token punctuation"},"}"),a(`

`),n("span",{class:"token comment"},`/**
 * 加上一个数
 */`),a(`
`),n("span",{class:"token keyword"},"void"),a(),n("span",{class:"token class-name"},"MyObject"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token function"},"AddVal"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"const"),a(" Napi"),n("span",{class:"token double-colon punctuation"},"::"),a("CallbackInfo "),n("span",{class:"token operator"},"&"),a("info"),n("span",{class:"token punctuation"},")"),a(`
`),n("span",{class:"token punctuation"},"{"),a(`
  Napi`),n("span",{class:"token double-colon punctuation"},"::"),a("Env env "),n("span",{class:"token operator"},"="),a(" info"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"Env"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
  `),n("span",{class:"token comment"},"// 期望得到一个number作为形参"),a(`
  `),n("span",{class:"token keyword"},"if"),a(),n("span",{class:"token punctuation"},"("),a("info"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"Length"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token operator"},"<"),a(),n("span",{class:"token number"},"1"),a(),n("span",{class:"token operator"},"||"),a(),n("span",{class:"token operator"},"!"),a("info"),n("span",{class:"token punctuation"},"["),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"IsNumber"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),a(`
  `),n("span",{class:"token punctuation"},"{"),a(`
    Napi`),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token class-name"},"TypeError"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token function"},"New"),n("span",{class:"token punctuation"},"("),a("env"),n("span",{class:"token punctuation"},","),a(),n("span",{class:"token string"},'"expected one number as arguments"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
    `),n("span",{class:"token keyword"},"return"),n("span",{class:"token punctuation"},";"),a(`
  `),n("span",{class:"token punctuation"},"}"),a(`
  `),n("span",{class:"token keyword"},"this"),n("span",{class:"token operator"},"->"),a("value "),n("span",{class:"token operator"},"+="),a(" info"),n("span",{class:"token punctuation"},"["),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},"."),n("span",{class:"token generic-function"},[n("span",{class:"token function"},"As"),n("span",{class:"token generic class-name"},[n("span",{class:"token operator"},"<"),a("Napi"),n("span",{class:"token double-colon punctuation"},"::"),a("Number"),n("span",{class:"token operator"},">")])]),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"ToNumber"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"DoubleValue"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
`),n("span",{class:"token punctuation"},"}"),a(`
`),n("span",{class:"token keyword"},"void"),a(),n("span",{class:"token class-name"},"MyObject"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token function"},"MutVal"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"const"),a(" Napi"),n("span",{class:"token double-colon punctuation"},"::"),a("CallbackInfo "),n("span",{class:"token operator"},"&"),a("info"),n("span",{class:"token punctuation"},")"),a(`
`),n("span",{class:"token punctuation"},"{"),a(`
  Napi`),n("span",{class:"token double-colon punctuation"},"::"),a("Env env "),n("span",{class:"token operator"},"="),a(" info"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"Env"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
  `),n("span",{class:"token comment"},"// 期望得到一个number作为形参"),a(`
  `),n("span",{class:"token keyword"},"if"),a(),n("span",{class:"token punctuation"},"("),a("info"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"Length"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token operator"},"<"),a(),n("span",{class:"token number"},"1"),a(),n("span",{class:"token operator"},"||"),a(),n("span",{class:"token operator"},"!"),a("info"),n("span",{class:"token punctuation"},"["),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"IsNumber"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),a(`
  `),n("span",{class:"token punctuation"},"{"),a(`
    Napi`),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token class-name"},"TypeError"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token function"},"New"),n("span",{class:"token punctuation"},"("),a("env"),n("span",{class:"token punctuation"},","),a(),n("span",{class:"token string"},'"expected one number as arguments"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
    `),n("span",{class:"token keyword"},"return"),n("span",{class:"token punctuation"},";"),a(`
  `),n("span",{class:"token punctuation"},"}"),a(`
  `),n("span",{class:"token keyword"},"this"),n("span",{class:"token operator"},"->"),a("value "),n("span",{class:"token operator"},"*="),a(" info"),n("span",{class:"token punctuation"},"["),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},"."),n("span",{class:"token generic-function"},[n("span",{class:"token function"},"As"),n("span",{class:"token generic class-name"},[n("span",{class:"token operator"},"<"),a("Napi"),n("span",{class:"token double-colon punctuation"},"::"),a("Number"),n("span",{class:"token operator"},">")])]),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"ToNumber"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"DoubleValue"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
`),n("span",{class:"token punctuation"},"}"),a(`

Napi`),n("span",{class:"token double-colon punctuation"},"::"),a("Object "),n("span",{class:"token class-name"},"MyObject"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token function"},"Init"),n("span",{class:"token punctuation"},"("),a("Napi"),n("span",{class:"token double-colon punctuation"},"::"),a("Env env"),n("span",{class:"token punctuation"},","),a(" Napi"),n("span",{class:"token double-colon punctuation"},"::"),a("Object exports"),n("span",{class:"token punctuation"},")"),a(`
`),n("span",{class:"token punctuation"},"{"),a(`
  Napi`),n("span",{class:"token double-colon punctuation"},"::"),a("Function MyObjectClassConstructerFun "),n("span",{class:"token operator"},"="),a(`
      `),n("span",{class:"token comment"},"// ↓ node-addon-api/doc/object_wrap.md"),a(`
      `),n("span",{class:"token function"},"DefineClass"),n("span",{class:"token punctuation"},"("),a(`
          env`),n("span",{class:"token punctuation"},","),a(`
          `),n("span",{class:"token string"},'"MyObject"'),n("span",{class:"token punctuation"},","),a(`
          `),n("span",{class:"token punctuation"},"{"),a(`
              `),n("span",{class:"token comment"},"// ↓ node-addon-api/doc/instance_wrap.md"),a(`
              `),n("span",{class:"token function"},"InstanceMethod"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"GetVal"'),n("span",{class:"token punctuation"},","),a(),n("span",{class:"token operator"},"&"),a("MyObject"),n("span",{class:"token double-colon punctuation"},"::"),a("GetVal"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),a(`
              `),n("span",{class:"token function"},"InstanceMethod"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"AddVal"'),n("span",{class:"token punctuation"},","),a(),n("span",{class:"token operator"},"&"),a("MyObject"),n("span",{class:"token double-colon punctuation"},"::"),a("AddVal"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),a(`
              `),n("span",{class:"token function"},"InstanceMethod"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"MutVal"'),n("span",{class:"token punctuation"},","),a(),n("span",{class:"token operator"},"&"),a("MyObject"),n("span",{class:"token double-colon punctuation"},"::"),a("MutVal"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),a(`
          `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`

  `),n("span",{class:"token comment"},"// 保证构造函数引用不被GC"),a(`
  `),n("span",{class:"token comment"},"// ↓ node-addon-api/doc/function_reference.md"),a(`
  Napi`),n("span",{class:"token double-colon punctuation"},"::"),a("FunctionReference "),n("span",{class:"token operator"},"*"),a("funRef "),n("span",{class:"token operator"},"="),a(),n("span",{class:"token keyword"},"new"),a(),n("span",{class:"token class-name"},"Napi"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token function"},"FunctionReference"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
  `),n("span",{class:"token operator"},"*"),a("funRef "),n("span",{class:"token operator"},"="),a(),n("span",{class:"token class-name"},"Napi"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token function"},"Persistent"),n("span",{class:"token punctuation"},"("),a("MyObjectClassConstructerFun"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
  env`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"SetInstanceData"),n("span",{class:"token punctuation"},"("),a("funRef"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`

  exports`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"Set"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"MyObject"'),n("span",{class:"token punctuation"},","),a(" MyObjectClassConstructerFun"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
  `),n("span",{class:"token keyword"},"return"),a(" exports"),n("span",{class:"token punctuation"},";"),a(`
`),n("span",{class:"token punctuation"},"}"),a(`
`)])],-1),nn=n("pre",null,[n("code",{class:"language-cpp"},[n("span",{class:"token macro property"},[n("span",{class:"token directive-hash"},"#"),n("span",{class:"token directive keyword"},"include"),a(),n("span",{class:"token string"},"<napi.h>")]),a(`
`),n("span",{class:"token macro property"},[n("span",{class:"token directive-hash"},"#"),n("span",{class:"token directive keyword"},"ifndef"),a(),n("span",{class:"token expression"},"__MY_OBJECT__")]),a(`
`),n("span",{class:"token macro property"},[n("span",{class:"token directive-hash"},"#"),n("span",{class:"token directive keyword"},"define"),a(),n("span",{class:"token macro-name"},"__MY_OBJECT__")]),a(`

`),n("span",{class:"token keyword"},"class"),a(),n("span",{class:"token class-name"},"MyObject"),a(),n("span",{class:"token operator"},":"),a(),n("span",{class:"token base-clause"},[n("span",{class:"token keyword"},"public"),a(" Napi"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token class-name"},"ObjectWrap"),n("span",{class:"token operator"},"<"),n("span",{class:"token class-name"},"MyObject"),n("span",{class:"token operator"},">")]),a(`
`),n("span",{class:"token punctuation"},"{"),a(`
`),n("span",{class:"token keyword"},"public"),n("span",{class:"token operator"},":"),a(`
  `),n("span",{class:"token keyword"},"static"),a(" Napi"),n("span",{class:"token double-colon punctuation"},"::"),a("Object "),n("span",{class:"token function"},"Init"),n("span",{class:"token punctuation"},"("),a("Napi"),n("span",{class:"token double-colon punctuation"},"::"),a("Env env"),n("span",{class:"token punctuation"},","),a(" Napi"),n("span",{class:"token double-colon punctuation"},"::"),a("Object exports"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
  `),n("span",{class:"token function"},"MyObject"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"const"),a(" Napi"),n("span",{class:"token double-colon punctuation"},"::"),a("CallbackInfo "),n("span",{class:"token operator"},"&"),a("info"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`

`),n("span",{class:"token keyword"},"private"),n("span",{class:"token operator"},":"),a(`
  `),n("span",{class:"token keyword"},"double"),a(" value"),n("span",{class:"token punctuation"},";"),a(`
  Napi`),n("span",{class:"token double-colon punctuation"},"::"),a("Value "),n("span",{class:"token function"},"GetVal"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"const"),a(" Napi"),n("span",{class:"token double-colon punctuation"},"::"),a("CallbackInfo "),n("span",{class:"token operator"},"&"),a("info"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
  `),n("span",{class:"token keyword"},"void"),a(),n("span",{class:"token function"},"AddVal"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"const"),a(" Napi"),n("span",{class:"token double-colon punctuation"},"::"),a("CallbackInfo "),n("span",{class:"token operator"},"&"),a("info"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
  `),n("span",{class:"token keyword"},"void"),a(),n("span",{class:"token function"},"MutVal"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"const"),a(" Napi"),n("span",{class:"token double-colon punctuation"},"::"),a("CallbackInfo "),n("span",{class:"token operator"},"&"),a("info"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},";"),a(`

`),n("span",{class:"token macro property"},[n("span",{class:"token directive-hash"},"#"),n("span",{class:"token directive keyword"},"endif")]),a(`
`)])],-1),an=n("pre",null,[n("code",{class:"language-cpp"},[a("#"),n("span",{class:"token operator"},"!"),a(` node
var addon `),n("span",{class:"token operator"},"="),a(),n("span",{class:"token function"},"require"),n("span",{class:"token punctuation"},"("),n("span",{class:"token char"},"'bindings'"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"("),n("span",{class:"token char"},"'hello_world'"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`

let MyObject `),n("span",{class:"token operator"},"="),a(" addon"),n("span",{class:"token punctuation"},"."),a(`MyObject

console`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"log"),n("span",{class:"token punctuation"},"("),a("MyObject"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"toString"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token comment"},"// function MyObject() { [native code] }"),a(`

let myObj `),n("span",{class:"token operator"},"="),a(),n("span",{class:"token keyword"},"new"),a(),n("span",{class:"token function"},"MyObject"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},")"),a(`

console`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"log"),n("span",{class:"token punctuation"},"("),a("myObj"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"GetVal"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token comment"},"// 1"),a(`
console`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"log"),n("span",{class:"token punctuation"},"("),a("myObj"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"AddVal"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"10"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token comment"},"// undefined "),a(`
console`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"log"),n("span",{class:"token punctuation"},"("),a("myObj"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"GetVal"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token comment"},"// 11 "),a(`
console`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"log"),n("span",{class:"token punctuation"},"("),a("myObj"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"MutVal"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"10"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token comment"},"// undefined"),a(`
console`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"log"),n("span",{class:"token punctuation"},"("),a("myObj"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"GetVal"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token comment"},"// 110"),a(`

`)])],-1),sn=n("h3",{id:"案例-factory-of-objectwrap",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#案例-factory-of-objectwrap"},[n("span",null,"案例：factory_of_objectWrap")])],-1),tn=n("code",null,"src/MyObject.hh",-1),on=n("code",null,"src/MyObject.cc",-1),en=n("code",null,"ddon.cc",-1),cn=n("code",null,"index.js",-1),pn=n("pre",null,[n("code",{class:"language-cpp"},[n("span",{class:"token macro property"},[n("span",{class:"token directive-hash"},"#"),n("span",{class:"token directive keyword"},"include"),a(),n("span",{class:"token string"},"<napi.h>")]),a(`
`),n("span",{class:"token macro property"},[n("span",{class:"token directive-hash"},"#"),n("span",{class:"token directive keyword"},"ifndef"),a(),n("span",{class:"token expression"},"__MY_OBJECT__")]),a(`
`),n("span",{class:"token macro property"},[n("span",{class:"token directive-hash"},"#"),n("span",{class:"token directive keyword"},"define"),a(),n("span",{class:"token macro-name"},"__MY_OBJECT__")]),a(`

`),n("span",{class:"token keyword"},"class"),a(),n("span",{class:"token class-name"},"MyObject"),a(),n("span",{class:"token operator"},":"),a(),n("span",{class:"token base-clause"},[n("span",{class:"token keyword"},"public"),a(" Napi"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token class-name"},"ObjectWrap"),n("span",{class:"token operator"},"<"),n("span",{class:"token class-name"},"MyObject"),n("span",{class:"token operator"},">")]),a(`
`),n("span",{class:"token punctuation"},"{"),a(`
`),n("span",{class:"token keyword"},"public"),n("span",{class:"token operator"},":"),a(`
  `),n("span",{class:"token keyword"},"static"),a(" Napi"),n("span",{class:"token double-colon punctuation"},"::"),a("Object "),n("span",{class:"token function"},"Init"),n("span",{class:"token punctuation"},"("),a("Napi"),n("span",{class:"token double-colon punctuation"},"::"),a("Env env"),n("span",{class:"token punctuation"},","),a(" Napi"),n("span",{class:"token double-colon punctuation"},"::"),a("Object exports"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
  `),n("span",{class:"token keyword"},"static"),a(" Napi"),n("span",{class:"token double-colon punctuation"},"::"),a("Object "),n("span",{class:"token function"},"NewInstance"),n("span",{class:"token punctuation"},"("),a("Napi"),n("span",{class:"token double-colon punctuation"},"::"),a("Env env"),n("span",{class:"token punctuation"},","),a(" Napi"),n("span",{class:"token double-colon punctuation"},"::"),a("Value arg"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
  `),n("span",{class:"token function"},"MyObject"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"const"),a(" Napi"),n("span",{class:"token double-colon punctuation"},"::"),a("CallbackInfo "),n("span",{class:"token operator"},"&"),a("info"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`

`),n("span",{class:"token keyword"},"private"),n("span",{class:"token operator"},":"),a(`
  `),n("span",{class:"token keyword"},"double"),a(" value"),n("span",{class:"token punctuation"},";"),a(`
  Napi`),n("span",{class:"token double-colon punctuation"},"::"),a("Value "),n("span",{class:"token function"},"GetVal"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"const"),a(" Napi"),n("span",{class:"token double-colon punctuation"},"::"),a("CallbackInfo "),n("span",{class:"token operator"},"&"),a("info"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
  `),n("span",{class:"token keyword"},"void"),a(),n("span",{class:"token function"},"AddVal"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"const"),a(" Napi"),n("span",{class:"token double-colon punctuation"},"::"),a("CallbackInfo "),n("span",{class:"token operator"},"&"),a("info"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
  `),n("span",{class:"token keyword"},"void"),a(),n("span",{class:"token function"},"MutVal"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"const"),a(" Napi"),n("span",{class:"token double-colon punctuation"},"::"),a("CallbackInfo "),n("span",{class:"token operator"},"&"),a("info"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},";"),a(`

`),n("span",{class:"token macro property"},[n("span",{class:"token directive-hash"},"#"),n("span",{class:"token directive keyword"},"endif")]),a(`
`)])],-1),ln=n("pre",null,[n("code",{class:"language-cpp"},[n("span",{class:"token macro property"},[n("span",{class:"token directive-hash"},"#"),n("span",{class:"token directive keyword"},"include"),a(),n("span",{class:"token string"},'"MyObject.hh"')]),a(`

`),n("span",{class:"token comment"},"// 实现构造函数"),a(`
`),n("span",{class:"token class-name"},"MyObject"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token function"},"MyObject"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"const"),a(" Napi"),n("span",{class:"token double-colon punctuation"},"::"),a("CallbackInfo "),n("span",{class:"token operator"},"&"),a("info"),n("span",{class:"token punctuation"},")"),a(`
    `),n("span",{class:"token comment"},"// ↓ c++ 语法 ，调用父级的构造函数"),a(`
    `),n("span",{class:"token operator"},":"),a(" Napi"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token generic-function"},[n("span",{class:"token function"},"ObjectWrap"),n("span",{class:"token generic class-name"},[n("span",{class:"token operator"},"<"),a("MyObject"),n("span",{class:"token operator"},">")])]),n("span",{class:"token punctuation"},"("),a("info"),n("span",{class:"token punctuation"},")"),a(`
`),n("span",{class:"token punctuation"},"{"),a(`
  Napi`),n("span",{class:"token double-colon punctuation"},"::"),a("Env env "),n("span",{class:"token operator"},"="),a(" info"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"Env"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`

  `),n("span",{class:"token comment"},"// 期望得到一个number作为形参"),a(`
  `),n("span",{class:"token keyword"},"if"),a(),n("span",{class:"token punctuation"},"("),a("info"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"Length"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token operator"},"<"),a(),n("span",{class:"token number"},"1"),a(),n("span",{class:"token operator"},"||"),a(),n("span",{class:"token operator"},"!"),a("info"),n("span",{class:"token punctuation"},"["),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"IsNumber"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),a(`
  `),n("span",{class:"token punctuation"},"{"),a(`
    Napi`),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token class-name"},"TypeError"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token function"},"New"),n("span",{class:"token punctuation"},"("),a("env"),n("span",{class:"token punctuation"},","),a(),n("span",{class:"token string"},'"expected one number as arguments"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
    `),n("span",{class:"token keyword"},"return"),n("span",{class:"token punctuation"},";"),a(`
  `),n("span",{class:"token punctuation"},"}"),a(`
  `),n("span",{class:"token comment"},"// 初始化value"),a(`
  `),n("span",{class:"token keyword"},"double"),a(" val "),n("span",{class:"token operator"},"="),a(" info"),n("span",{class:"token punctuation"},"["),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},"."),n("span",{class:"token generic-function"},[n("span",{class:"token function"},"As"),n("span",{class:"token generic class-name"},[n("span",{class:"token operator"},"<"),a("Napi"),n("span",{class:"token double-colon punctuation"},"::"),a("Number"),n("span",{class:"token operator"},">")])]),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"ToNumber"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"DoubleValue"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
  `),n("span",{class:"token keyword"},"this"),n("span",{class:"token operator"},"->"),a("value "),n("span",{class:"token operator"},"="),a(" val"),n("span",{class:"token punctuation"},";"),a(`
`),n("span",{class:"token punctuation"},"}"),a(`

Napi`),n("span",{class:"token double-colon punctuation"},"::"),a("Value "),n("span",{class:"token class-name"},"MyObject"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token function"},"GetVal"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"const"),a(" Napi"),n("span",{class:"token double-colon punctuation"},"::"),a("CallbackInfo "),n("span",{class:"token operator"},"&"),a("info"),n("span",{class:"token punctuation"},")"),a(`
`),n("span",{class:"token punctuation"},"{"),a(`
  Napi`),n("span",{class:"token double-colon punctuation"},"::"),a("Env env "),n("span",{class:"token operator"},"="),a(" info"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"Env"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
  `),n("span",{class:"token keyword"},"return"),a(" Napi"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token class-name"},"Number"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token function"},"New"),n("span",{class:"token punctuation"},"("),a("env"),n("span",{class:"token punctuation"},","),a(),n("span",{class:"token keyword"},"this"),n("span",{class:"token operator"},"->"),a("value"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
`),n("span",{class:"token punctuation"},"}"),a(`
`),n("span",{class:"token keyword"},"void"),a(),n("span",{class:"token class-name"},"MyObject"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token function"},"AddVal"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"const"),a(" Napi"),n("span",{class:"token double-colon punctuation"},"::"),a("CallbackInfo "),n("span",{class:"token operator"},"&"),a("info"),n("span",{class:"token punctuation"},")"),a(`
`),n("span",{class:"token punctuation"},"{"),a(`
  Napi`),n("span",{class:"token double-colon punctuation"},"::"),a("Env env "),n("span",{class:"token operator"},"="),a(" info"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"Env"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
  `),n("span",{class:"token comment"},"// 期望得到一个number作为形参"),a(`
  `),n("span",{class:"token keyword"},"if"),a(),n("span",{class:"token punctuation"},"("),a("info"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"Length"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token operator"},"<"),a(),n("span",{class:"token number"},"1"),a(),n("span",{class:"token operator"},"||"),a(),n("span",{class:"token operator"},"!"),a("info"),n("span",{class:"token punctuation"},"["),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"IsNumber"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),a(`
  `),n("span",{class:"token punctuation"},"{"),a(`
    Napi`),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token class-name"},"TypeError"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token function"},"New"),n("span",{class:"token punctuation"},"("),a("env"),n("span",{class:"token punctuation"},","),a(),n("span",{class:"token string"},'"expected one number as arguments"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
    `),n("span",{class:"token keyword"},"return"),n("span",{class:"token punctuation"},";"),a(`
  `),n("span",{class:"token punctuation"},"}"),a(`
  `),n("span",{class:"token keyword"},"this"),n("span",{class:"token operator"},"->"),a("value "),n("span",{class:"token operator"},"+="),a(" info"),n("span",{class:"token punctuation"},"["),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},"."),n("span",{class:"token generic-function"},[n("span",{class:"token function"},"As"),n("span",{class:"token generic class-name"},[n("span",{class:"token operator"},"<"),a("Napi"),n("span",{class:"token double-colon punctuation"},"::"),a("Number"),n("span",{class:"token operator"},">")])]),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"ToNumber"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"DoubleValue"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
`),n("span",{class:"token punctuation"},"}"),a(`
`),n("span",{class:"token keyword"},"void"),a(),n("span",{class:"token class-name"},"MyObject"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token function"},"MutVal"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"const"),a(" Napi"),n("span",{class:"token double-colon punctuation"},"::"),a("CallbackInfo "),n("span",{class:"token operator"},"&"),a("info"),n("span",{class:"token punctuation"},")"),a(`
`),n("span",{class:"token punctuation"},"{"),a(`
  Napi`),n("span",{class:"token double-colon punctuation"},"::"),a("Env env "),n("span",{class:"token operator"},"="),a(" info"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"Env"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
  `),n("span",{class:"token comment"},"// 期望得到一个number作为形参"),a(`
  `),n("span",{class:"token keyword"},"if"),a(),n("span",{class:"token punctuation"},"("),a("info"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"Length"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token operator"},"<"),a(),n("span",{class:"token number"},"1"),a(),n("span",{class:"token operator"},"||"),a(),n("span",{class:"token operator"},"!"),a("info"),n("span",{class:"token punctuation"},"["),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"IsNumber"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),a(`
  `),n("span",{class:"token punctuation"},"{"),a(`
    Napi`),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token class-name"},"TypeError"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token function"},"New"),n("span",{class:"token punctuation"},"("),a("env"),n("span",{class:"token punctuation"},","),a(),n("span",{class:"token string"},'"expected one number as arguments"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
    `),n("span",{class:"token keyword"},"return"),n("span",{class:"token punctuation"},";"),a(`
  `),n("span",{class:"token punctuation"},"}"),a(`
  `),n("span",{class:"token keyword"},"this"),n("span",{class:"token operator"},"->"),a("value "),n("span",{class:"token operator"},"*="),a(" info"),n("span",{class:"token punctuation"},"["),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},"."),n("span",{class:"token generic-function"},[n("span",{class:"token function"},"As"),n("span",{class:"token generic class-name"},[n("span",{class:"token operator"},"<"),a("Napi"),n("span",{class:"token double-colon punctuation"},"::"),a("Number"),n("span",{class:"token operator"},">")])]),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"ToNumber"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"DoubleValue"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
`),n("span",{class:"token punctuation"},"}"),a(`

Napi`),n("span",{class:"token double-colon punctuation"},"::"),a("Object "),n("span",{class:"token class-name"},"MyObject"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token function"},"Init"),n("span",{class:"token punctuation"},"("),a("Napi"),n("span",{class:"token double-colon punctuation"},"::"),a("Env env"),n("span",{class:"token punctuation"},","),a(" Napi"),n("span",{class:"token double-colon punctuation"},"::"),a("Object exports"),n("span",{class:"token punctuation"},")"),a(`
`),n("span",{class:"token punctuation"},"{"),a(`
  Napi`),n("span",{class:"token double-colon punctuation"},"::"),a("Function MyObjectClassConstructerFun "),n("span",{class:"token operator"},"="),a(`
      `),n("span",{class:"token comment"},"// ↓ node-addon-api/doc/object_wrap.md"),a(`
      `),n("span",{class:"token function"},"DefineClass"),n("span",{class:"token punctuation"},"("),a(`
          env`),n("span",{class:"token punctuation"},","),a(`
          `),n("span",{class:"token string"},'"MyObject"'),n("span",{class:"token punctuation"},","),a(`
          `),n("span",{class:"token punctuation"},"{"),a(`
              `),n("span",{class:"token comment"},"// ↓ node-addon-api/doc/instance_wrap.md"),a(`
              `),n("span",{class:"token function"},"InstanceMethod"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"GetVal"'),n("span",{class:"token punctuation"},","),a(),n("span",{class:"token operator"},"&"),a("MyObject"),n("span",{class:"token double-colon punctuation"},"::"),a("GetVal"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),a(`
              `),n("span",{class:"token function"},"InstanceMethod"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"AddVal"'),n("span",{class:"token punctuation"},","),a(),n("span",{class:"token operator"},"&"),a("MyObject"),n("span",{class:"token double-colon punctuation"},"::"),a("AddVal"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),a(`
              `),n("span",{class:"token function"},"InstanceMethod"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"MutVal"'),n("span",{class:"token punctuation"},","),a(),n("span",{class:"token operator"},"&"),a("MyObject"),n("span",{class:"token double-colon punctuation"},"::"),a("MutVal"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),a(`
          `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`

  `),n("span",{class:"token comment"},"// 保证构造函数引用不被GC"),a(`
  `),n("span",{class:"token comment"},"// ↓ node-addon-api/doc/function_reference.md"),a(`
  Napi`),n("span",{class:"token double-colon punctuation"},"::"),a("FunctionReference "),n("span",{class:"token operator"},"*"),a("funRef "),n("span",{class:"token operator"},"="),a(),n("span",{class:"token keyword"},"new"),a(),n("span",{class:"token class-name"},"Napi"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token function"},"FunctionReference"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
  `),n("span",{class:"token operator"},"*"),a("funRef "),n("span",{class:"token operator"},"="),a(),n("span",{class:"token class-name"},"Napi"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token function"},"Persistent"),n("span",{class:"token punctuation"},"("),a("MyObjectClassConstructerFun"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
  env`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"SetInstanceData"),n("span",{class:"token punctuation"},"("),a("funRef"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`

  exports`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"Set"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"MyObject"'),n("span",{class:"token punctuation"},","),a(" MyObjectClassConstructerFun"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
  `),n("span",{class:"token keyword"},"return"),a(" exports"),n("span",{class:"token punctuation"},";"),a(`
`),n("span",{class:"token punctuation"},"}"),a(`

Napi`),n("span",{class:"token double-colon punctuation"},"::"),a("Object "),n("span",{class:"token class-name"},"MyObject"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token function"},"NewInstance"),n("span",{class:"token punctuation"},"("),a("Napi"),n("span",{class:"token double-colon punctuation"},"::"),a("Env env"),n("span",{class:"token punctuation"},","),a(" Napi"),n("span",{class:"token double-colon punctuation"},"::"),a("Value arg"),n("span",{class:"token punctuation"},")"),a(`
`),n("span",{class:"token punctuation"},"{"),a(`
  `),n("span",{class:"token comment"},"// 获取构造函数"),a(`
  Napi`),n("span",{class:"token double-colon punctuation"},"::"),a("FunctionReference "),n("span",{class:"token operator"},"*"),a("funRef "),n("span",{class:"token operator"},"="),a(" env"),n("span",{class:"token punctuation"},"."),n("span",{class:"token generic-function"},[n("span",{class:"token function"},"GetInstanceData"),n("span",{class:"token generic class-name"},[n("span",{class:"token operator"},"<"),a("Napi"),n("span",{class:"token double-colon punctuation"},"::"),a("FunctionReference"),n("span",{class:"token operator"},">")])]),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
  `),n("span",{class:"token comment"},"// 调用构造函数来创建实例对象"),a(`
  Napi`),n("span",{class:"token double-colon punctuation"},"::"),a("Object obj "),n("span",{class:"token operator"},"="),a(" funRef"),n("span",{class:"token operator"},"->"),n("span",{class:"token function"},"New"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"{"),n("span",{class:"token function"},"napi_value"),n("span",{class:"token punctuation"},"("),a("arg"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`

  `),n("span",{class:"token comment"},"// 为了得到能够逃离局部作用域后仍然能够存活的对象"),a(`
  `),n("span",{class:"token comment"},"// https://github.com/nodejs/node-addon-api/blob/main/doc/escapable_handle_scope.md"),a(`
  Napi`),n("span",{class:"token double-colon punctuation"},"::"),a("EscapableHandleScope "),n("span",{class:"token function"},"scope"),n("span",{class:"token punctuation"},"("),a("env"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
  Napi`),n("span",{class:"token double-colon punctuation"},"::"),a("Object escapableObj "),n("span",{class:"token operator"},"="),a(" scope"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"Escape"),n("span",{class:"token punctuation"},"("),n("span",{class:"token function"},"napi_value"),n("span",{class:"token punctuation"},"("),a("obj"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"ToObject"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`

  `),n("span",{class:"token keyword"},"return"),a(" escapableObj"),n("span",{class:"token punctuation"},";"),a(`
`),n("span",{class:"token punctuation"},"}"),a(`
`)])],-1),un=n("pre",null,[n("code",{class:"language-cpp"},[n("span",{class:"token macro property"},[n("span",{class:"token directive-hash"},"#"),n("span",{class:"token directive keyword"},"include"),a(),n("span",{class:"token string"},'"./MyObject.hh"')]),a(`

Napi`),n("span",{class:"token double-colon punctuation"},"::"),a("Object "),n("span",{class:"token function"},"creatMyObject"),n("span",{class:"token punctuation"},"("),a("Napi"),n("span",{class:"token double-colon punctuation"},"::"),a("CallbackInfo "),n("span",{class:"token operator"},"&"),a("info"),n("span",{class:"token punctuation"},")"),a(`
`),n("span",{class:"token punctuation"},"{"),a(`
    Napi`),n("span",{class:"token double-colon punctuation"},"::"),a("Env env "),n("span",{class:"token operator"},"="),a(" info"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"Env"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
    Napi`),n("span",{class:"token double-colon punctuation"},"::"),a("Value arg "),n("span",{class:"token operator"},"="),a(" info"),n("span",{class:"token punctuation"},"["),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},";"),a(`

    `),n("span",{class:"token keyword"},"return"),a(),n("span",{class:"token class-name"},"MyObject"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token function"},"NewInstance"),n("span",{class:"token punctuation"},"("),a("env"),n("span",{class:"token punctuation"},","),a(" arg"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
`),n("span",{class:"token punctuation"},"}"),a(`

Napi`),n("span",{class:"token double-colon punctuation"},"::"),a("Object "),n("span",{class:"token function"},"Init"),n("span",{class:"token punctuation"},"("),a("Napi"),n("span",{class:"token double-colon punctuation"},"::"),a("Env env"),n("span",{class:"token punctuation"},","),a(" Napi"),n("span",{class:"token double-colon punctuation"},"::"),a("Object exports"),n("span",{class:"token punctuation"},")"),a(`
`),n("span",{class:"token punctuation"},"{"),a(`
    `),n("span",{class:"token class-name"},"MyObject"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token function"},"Init"),n("span",{class:"token punctuation"},"("),a("env"),n("span",{class:"token punctuation"},","),a(" exports"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
    exports`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"Set"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"creatMyObject"'),n("span",{class:"token punctuation"},","),a(" Napi"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token class-name"},"Function"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token function"},"New"),n("span",{class:"token punctuation"},"("),a("env"),n("span",{class:"token punctuation"},","),a(" creatMyObject"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
    `),n("span",{class:"token keyword"},"return"),a(" exports"),n("span",{class:"token punctuation"},";"),a(`
`),n("span",{class:"token punctuation"},"}"),a(`

`),n("span",{class:"token function"},"NODE_API_MODULE"),n("span",{class:"token punctuation"},"("),a("NODE_GYP_MODULE_NAME"),n("span",{class:"token punctuation"},","),a(" Init"),n("span",{class:"token punctuation"},")"),a(`
`)])],-1),kn=n("pre",null,[n("code",{class:"language-cpp"},[a("#"),n("span",{class:"token operator"},"!"),a(` node
var addon `),n("span",{class:"token operator"},"="),a(),n("span",{class:"token function"},"require"),n("span",{class:"token punctuation"},"("),n("span",{class:"token char"},"'bindings'"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"("),n("span",{class:"token char"},"'hello_world'"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`

let MyObject `),n("span",{class:"token operator"},"="),a(" addon"),n("span",{class:"token punctuation"},"."),a(`MyObject
let creatMyObject `),n("span",{class:"token operator"},"="),a(" addon"),n("span",{class:"token punctuation"},"."),a(`creatMyObject

console`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"log"),n("span",{class:"token punctuation"},"("),a("MyObject"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"toString"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token comment"},"// function MyObject() { [native code] }"),a(`

let myObj1 `),n("span",{class:"token operator"},"="),a(),n("span",{class:"token keyword"},"new"),a(),n("span",{class:"token function"},"MyObject"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},")"),a(`

console`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"log"),n("span",{class:"token punctuation"},"("),a("myObj1"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"GetVal"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token comment"},"// 1"),a(`
console`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"log"),n("span",{class:"token punctuation"},"("),a("myObj1"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"AddVal"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"10"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token comment"},"// undefined "),a(`
console`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"log"),n("span",{class:"token punctuation"},"("),a("myObj1"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"GetVal"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token comment"},"// 11 "),a(`
console`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"log"),n("span",{class:"token punctuation"},"("),a("myObj1"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"MutVal"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"10"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token comment"},"// undefined"),a(`
console`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"log"),n("span",{class:"token punctuation"},"("),a("myObj1"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"GetVal"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token comment"},"// 110"),a(`


let myObj2 `),n("span",{class:"token operator"},"="),a(),n("span",{class:"token function"},"creatMyObject"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},")"),a(`

console`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"log"),n("span",{class:"token punctuation"},"("),a("myObj2"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"GetVal"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token comment"},"// 1"),a(`
console`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"log"),n("span",{class:"token punctuation"},"("),a("myObj2"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"AddVal"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"10"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token comment"},"// undefined "),a(`
console`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"log"),n("span",{class:"token punctuation"},"("),a("myObj2"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"GetVal"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token comment"},"// 11 "),a(`
console`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"log"),n("span",{class:"token punctuation"},"("),a("myObj2"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"MutVal"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"10"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token comment"},"// undefined"),a(`
console`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"log"),n("span",{class:"token punctuation"},"("),a("myObj2"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"GetVal"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token comment"},"// 110"),a(`
`)])],-1),rn=n("h3",{id:"案例-passing-wrapped-obj-to-native",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#案例-passing-wrapped-obj-to-native"},[n("span",null,"案例：passing_wrapped_obj_to_native")])],-1),dn=n("code",null,"src/MyObject.hh",-1),bn=n("code",null,"src/MyObject.cc",-1),fn=n("code",null,"ddon.cc",-1),hn=n("code",null,"index.js",-1),yn=n("pre",null,[n("code",{class:"language-cpp"},[n("span",{class:"token macro property"},[n("span",{class:"token directive-hash"},"#"),n("span",{class:"token directive keyword"},"include"),a(),n("span",{class:"token string"},"<napi.h>")]),a(`
`),n("span",{class:"token macro property"},[n("span",{class:"token directive-hash"},"#"),n("span",{class:"token directive keyword"},"ifndef"),a(),n("span",{class:"token expression"},"__MY_OBJECT__")]),a(`
`),n("span",{class:"token macro property"},[n("span",{class:"token directive-hash"},"#"),n("span",{class:"token directive keyword"},"define"),a(),n("span",{class:"token macro-name"},"__MY_OBJECT__")]),a(`

`),n("span",{class:"token keyword"},"class"),a(),n("span",{class:"token class-name"},"MyObject"),a(),n("span",{class:"token operator"},":"),a(),n("span",{class:"token base-clause"},[n("span",{class:"token keyword"},"public"),a(" Napi"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token class-name"},"ObjectWrap"),n("span",{class:"token operator"},"<"),n("span",{class:"token class-name"},"MyObject"),n("span",{class:"token operator"},">")]),a(`
`),n("span",{class:"token punctuation"},"{"),a(`
`),n("span",{class:"token keyword"},"public"),n("span",{class:"token operator"},":"),a(`
  `),n("span",{class:"token keyword"},"static"),a(" Napi"),n("span",{class:"token double-colon punctuation"},"::"),a("Object "),n("span",{class:"token function"},"Init"),n("span",{class:"token punctuation"},"("),a("Napi"),n("span",{class:"token double-colon punctuation"},"::"),a("Env env"),n("span",{class:"token punctuation"},","),a(" Napi"),n("span",{class:"token double-colon punctuation"},"::"),a("Object exports"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
  `),n("span",{class:"token keyword"},"static"),a(" Napi"),n("span",{class:"token double-colon punctuation"},"::"),a("Object "),n("span",{class:"token function"},"NewInstance"),n("span",{class:"token punctuation"},"("),a("Napi"),n("span",{class:"token double-colon punctuation"},"::"),a("Env env"),n("span",{class:"token punctuation"},","),a(" Napi"),n("span",{class:"token double-colon punctuation"},"::"),a("Value arg"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
  `),n("span",{class:"token function"},"MyObject"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"const"),a(" Napi"),n("span",{class:"token double-colon punctuation"},"::"),a("CallbackInfo "),n("span",{class:"token operator"},"&"),a("info"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`

  Napi`),n("span",{class:"token double-colon punctuation"},"::"),a("Value "),n("span",{class:"token function"},"GetVal"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"const"),a(" Napi"),n("span",{class:"token double-colon punctuation"},"::"),a("CallbackInfo "),n("span",{class:"token operator"},"&"),a("info"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
  `),n("span",{class:"token keyword"},"void"),a(),n("span",{class:"token function"},"AddVal"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"const"),a(" Napi"),n("span",{class:"token double-colon punctuation"},"::"),a("CallbackInfo "),n("span",{class:"token operator"},"&"),a("info"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
  `),n("span",{class:"token keyword"},"void"),a(),n("span",{class:"token function"},"MutVal"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"const"),a(" Napi"),n("span",{class:"token double-colon punctuation"},"::"),a("CallbackInfo "),n("span",{class:"token operator"},"&"),a("info"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`

  `),n("span",{class:"token keyword"},"double"),a(" value"),n("span",{class:"token punctuation"},";"),a(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},";"),a(`

`),n("span",{class:"token macro property"},[n("span",{class:"token directive-hash"},"#"),n("span",{class:"token directive keyword"},"endif")]),a(`
`)])],-1),mn=n("pre",null,[n("code",{class:"language-cpp"},[n("span",{class:"token macro property"},[n("span",{class:"token directive-hash"},"#"),n("span",{class:"token directive keyword"},"include"),a(),n("span",{class:"token string"},'"MyObject.hh"')]),a(`

`),n("span",{class:"token comment"},"// 实现构造函数"),a(`
`),n("span",{class:"token class-name"},"MyObject"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token function"},"MyObject"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"const"),a(" Napi"),n("span",{class:"token double-colon punctuation"},"::"),a("CallbackInfo "),n("span",{class:"token operator"},"&"),a("info"),n("span",{class:"token punctuation"},")"),a(`
    `),n("span",{class:"token comment"},"// ↓ c++ 语法 ，调用父级的构造函数"),a(`
    `),n("span",{class:"token operator"},":"),a(" Napi"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token generic-function"},[n("span",{class:"token function"},"ObjectWrap"),n("span",{class:"token generic class-name"},[n("span",{class:"token operator"},"<"),a("MyObject"),n("span",{class:"token operator"},">")])]),n("span",{class:"token punctuation"},"("),a("info"),n("span",{class:"token punctuation"},")"),a(`
`),n("span",{class:"token punctuation"},"{"),a(`
  Napi`),n("span",{class:"token double-colon punctuation"},"::"),a("Env env "),n("span",{class:"token operator"},"="),a(" info"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"Env"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`

  `),n("span",{class:"token comment"},"// 期望得到一个number作为形参"),a(`
  `),n("span",{class:"token keyword"},"if"),a(),n("span",{class:"token punctuation"},"("),a("info"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"Length"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token operator"},"<"),a(),n("span",{class:"token number"},"1"),a(),n("span",{class:"token operator"},"||"),a(),n("span",{class:"token operator"},"!"),a("info"),n("span",{class:"token punctuation"},"["),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"IsNumber"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),a(`
  `),n("span",{class:"token punctuation"},"{"),a(`
    Napi`),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token class-name"},"TypeError"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token function"},"New"),n("span",{class:"token punctuation"},"("),a("env"),n("span",{class:"token punctuation"},","),a(),n("span",{class:"token string"},'"expected one number as arguments"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
    `),n("span",{class:"token keyword"},"return"),n("span",{class:"token punctuation"},";"),a(`
  `),n("span",{class:"token punctuation"},"}"),a(`
  `),n("span",{class:"token comment"},"// 初始化value"),a(`
  `),n("span",{class:"token keyword"},"double"),a(" val "),n("span",{class:"token operator"},"="),a(" info"),n("span",{class:"token punctuation"},"["),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},"."),n("span",{class:"token generic-function"},[n("span",{class:"token function"},"As"),n("span",{class:"token generic class-name"},[n("span",{class:"token operator"},"<"),a("Napi"),n("span",{class:"token double-colon punctuation"},"::"),a("Number"),n("span",{class:"token operator"},">")])]),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"ToNumber"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"DoubleValue"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
  `),n("span",{class:"token keyword"},"this"),n("span",{class:"token operator"},"->"),a("value "),n("span",{class:"token operator"},"="),a(" val"),n("span",{class:"token punctuation"},";"),a(`
`),n("span",{class:"token punctuation"},"}"),a(`

Napi`),n("span",{class:"token double-colon punctuation"},"::"),a("Value "),n("span",{class:"token class-name"},"MyObject"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token function"},"GetVal"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"const"),a(" Napi"),n("span",{class:"token double-colon punctuation"},"::"),a("CallbackInfo "),n("span",{class:"token operator"},"&"),a("info"),n("span",{class:"token punctuation"},")"),a(`
`),n("span",{class:"token punctuation"},"{"),a(`
  Napi`),n("span",{class:"token double-colon punctuation"},"::"),a("Env env "),n("span",{class:"token operator"},"="),a(" info"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"Env"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
  `),n("span",{class:"token keyword"},"return"),a(" Napi"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token class-name"},"Number"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token function"},"New"),n("span",{class:"token punctuation"},"("),a("env"),n("span",{class:"token punctuation"},","),a(),n("span",{class:"token keyword"},"this"),n("span",{class:"token operator"},"->"),a("value"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
`),n("span",{class:"token punctuation"},"}"),a(`
`),n("span",{class:"token keyword"},"void"),a(),n("span",{class:"token class-name"},"MyObject"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token function"},"AddVal"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"const"),a(" Napi"),n("span",{class:"token double-colon punctuation"},"::"),a("CallbackInfo "),n("span",{class:"token operator"},"&"),a("info"),n("span",{class:"token punctuation"},")"),a(`
`),n("span",{class:"token punctuation"},"{"),a(`
  Napi`),n("span",{class:"token double-colon punctuation"},"::"),a("Env env "),n("span",{class:"token operator"},"="),a(" info"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"Env"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
  `),n("span",{class:"token comment"},"// 期望得到一个number作为形参"),a(`
  `),n("span",{class:"token keyword"},"if"),a(),n("span",{class:"token punctuation"},"("),a("info"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"Length"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token operator"},"<"),a(),n("span",{class:"token number"},"1"),a(),n("span",{class:"token operator"},"||"),a(),n("span",{class:"token operator"},"!"),a("info"),n("span",{class:"token punctuation"},"["),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"IsNumber"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),a(`
  `),n("span",{class:"token punctuation"},"{"),a(`
    Napi`),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token class-name"},"TypeError"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token function"},"New"),n("span",{class:"token punctuation"},"("),a("env"),n("span",{class:"token punctuation"},","),a(),n("span",{class:"token string"},'"expected one number as arguments"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
    `),n("span",{class:"token keyword"},"return"),n("span",{class:"token punctuation"},";"),a(`
  `),n("span",{class:"token punctuation"},"}"),a(`
  `),n("span",{class:"token keyword"},"this"),n("span",{class:"token operator"},"->"),a("value "),n("span",{class:"token operator"},"+="),a(" info"),n("span",{class:"token punctuation"},"["),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},"."),n("span",{class:"token generic-function"},[n("span",{class:"token function"},"As"),n("span",{class:"token generic class-name"},[n("span",{class:"token operator"},"<"),a("Napi"),n("span",{class:"token double-colon punctuation"},"::"),a("Number"),n("span",{class:"token operator"},">")])]),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"ToNumber"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"DoubleValue"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
`),n("span",{class:"token punctuation"},"}"),a(`
`),n("span",{class:"token keyword"},"void"),a(),n("span",{class:"token class-name"},"MyObject"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token function"},"MutVal"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"const"),a(" Napi"),n("span",{class:"token double-colon punctuation"},"::"),a("CallbackInfo "),n("span",{class:"token operator"},"&"),a("info"),n("span",{class:"token punctuation"},")"),a(`
`),n("span",{class:"token punctuation"},"{"),a(`
  Napi`),n("span",{class:"token double-colon punctuation"},"::"),a("Env env "),n("span",{class:"token operator"},"="),a(" info"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"Env"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
  `),n("span",{class:"token comment"},"// 期望得到一个number作为形参"),a(`
  `),n("span",{class:"token keyword"},"if"),a(),n("span",{class:"token punctuation"},"("),a("info"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"Length"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token operator"},"<"),a(),n("span",{class:"token number"},"1"),a(),n("span",{class:"token operator"},"||"),a(),n("span",{class:"token operator"},"!"),a("info"),n("span",{class:"token punctuation"},"["),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"IsNumber"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),a(`
  `),n("span",{class:"token punctuation"},"{"),a(`
    Napi`),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token class-name"},"TypeError"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token function"},"New"),n("span",{class:"token punctuation"},"("),a("env"),n("span",{class:"token punctuation"},","),a(),n("span",{class:"token string"},'"expected one number as arguments"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
    `),n("span",{class:"token keyword"},"return"),n("span",{class:"token punctuation"},";"),a(`
  `),n("span",{class:"token punctuation"},"}"),a(`
  `),n("span",{class:"token keyword"},"this"),n("span",{class:"token operator"},"->"),a("value "),n("span",{class:"token operator"},"*="),a(" info"),n("span",{class:"token punctuation"},"["),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},"."),n("span",{class:"token generic-function"},[n("span",{class:"token function"},"As"),n("span",{class:"token generic class-name"},[n("span",{class:"token operator"},"<"),a("Napi"),n("span",{class:"token double-colon punctuation"},"::"),a("Number"),n("span",{class:"token operator"},">")])]),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"ToNumber"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"DoubleValue"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
`),n("span",{class:"token punctuation"},"}"),a(`

Napi`),n("span",{class:"token double-colon punctuation"},"::"),a("Object "),n("span",{class:"token class-name"},"MyObject"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token function"},"Init"),n("span",{class:"token punctuation"},"("),a("Napi"),n("span",{class:"token double-colon punctuation"},"::"),a("Env env"),n("span",{class:"token punctuation"},","),a(" Napi"),n("span",{class:"token double-colon punctuation"},"::"),a("Object exports"),n("span",{class:"token punctuation"},")"),a(`
`),n("span",{class:"token punctuation"},"{"),a(`
  Napi`),n("span",{class:"token double-colon punctuation"},"::"),a("Function MyObjectClassConstructerFun "),n("span",{class:"token operator"},"="),a(`
      `),n("span",{class:"token comment"},"// ↓ node-addon-api/doc/object_wrap.md"),a(`
      `),n("span",{class:"token function"},"DefineClass"),n("span",{class:"token punctuation"},"("),a(`
          env`),n("span",{class:"token punctuation"},","),a(`
          `),n("span",{class:"token string"},'"MyObject"'),n("span",{class:"token punctuation"},","),a(`
          `),n("span",{class:"token punctuation"},"{"),a(`
              `),n("span",{class:"token comment"},"// ↓ node-addon-api/doc/instance_wrap.md"),a(`
              `),n("span",{class:"token function"},"InstanceMethod"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"GetVal"'),n("span",{class:"token punctuation"},","),a(),n("span",{class:"token operator"},"&"),a("MyObject"),n("span",{class:"token double-colon punctuation"},"::"),a("GetVal"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),a(`
              `),n("span",{class:"token function"},"InstanceMethod"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"AddVal"'),n("span",{class:"token punctuation"},","),a(),n("span",{class:"token operator"},"&"),a("MyObject"),n("span",{class:"token double-colon punctuation"},"::"),a("AddVal"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),a(`
              `),n("span",{class:"token function"},"InstanceMethod"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"MutVal"'),n("span",{class:"token punctuation"},","),a(),n("span",{class:"token operator"},"&"),a("MyObject"),n("span",{class:"token double-colon punctuation"},"::"),a("MutVal"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),a(`
          `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`

  `),n("span",{class:"token comment"},"// 保证构造函数引用不被GC"),a(`
  `),n("span",{class:"token comment"},"// ↓ node-addon-api/doc/function_reference.md"),a(`
  Napi`),n("span",{class:"token double-colon punctuation"},"::"),a("FunctionReference "),n("span",{class:"token operator"},"*"),a("funRef "),n("span",{class:"token operator"},"="),a(),n("span",{class:"token keyword"},"new"),a(),n("span",{class:"token class-name"},"Napi"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token function"},"FunctionReference"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
  `),n("span",{class:"token operator"},"*"),a("funRef "),n("span",{class:"token operator"},"="),a(),n("span",{class:"token class-name"},"Napi"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token function"},"Persistent"),n("span",{class:"token punctuation"},"("),a("MyObjectClassConstructerFun"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
  env`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"SetInstanceData"),n("span",{class:"token punctuation"},"("),a("funRef"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`

  exports`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"Set"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"MyObject"'),n("span",{class:"token punctuation"},","),a(" MyObjectClassConstructerFun"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
  `),n("span",{class:"token keyword"},"return"),a(" exports"),n("span",{class:"token punctuation"},";"),a(`
`),n("span",{class:"token punctuation"},"}"),a(`

Napi`),n("span",{class:"token double-colon punctuation"},"::"),a("Object "),n("span",{class:"token class-name"},"MyObject"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token function"},"NewInstance"),n("span",{class:"token punctuation"},"("),a("Napi"),n("span",{class:"token double-colon punctuation"},"::"),a("Env env"),n("span",{class:"token punctuation"},","),a(" Napi"),n("span",{class:"token double-colon punctuation"},"::"),a("Value arg"),n("span",{class:"token punctuation"},")"),a(`
`),n("span",{class:"token punctuation"},"{"),a(`
  `),n("span",{class:"token comment"},"// 获取构造函数"),a(`
  Napi`),n("span",{class:"token double-colon punctuation"},"::"),a("FunctionReference "),n("span",{class:"token operator"},"*"),a("funRef "),n("span",{class:"token operator"},"="),a(" env"),n("span",{class:"token punctuation"},"."),n("span",{class:"token generic-function"},[n("span",{class:"token function"},"GetInstanceData"),n("span",{class:"token generic class-name"},[n("span",{class:"token operator"},"<"),a("Napi"),n("span",{class:"token double-colon punctuation"},"::"),a("FunctionReference"),n("span",{class:"token operator"},">")])]),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
  `),n("span",{class:"token comment"},"// 调用构造函数来创建实例对象"),a(`
  Napi`),n("span",{class:"token double-colon punctuation"},"::"),a("Object obj "),n("span",{class:"token operator"},"="),a(" funRef"),n("span",{class:"token operator"},"->"),n("span",{class:"token function"},"New"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"{"),n("span",{class:"token function"},"napi_value"),n("span",{class:"token punctuation"},"("),a("arg"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`

  `),n("span",{class:"token comment"},"// 为了得到能够逃离局部作用域后仍然能够存活的对象"),a(`
  Napi`),n("span",{class:"token double-colon punctuation"},"::"),a("EscapableHandleScope "),n("span",{class:"token function"},"scope"),n("span",{class:"token punctuation"},"("),a("env"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
  Napi`),n("span",{class:"token double-colon punctuation"},"::"),a("Object escapableObj "),n("span",{class:"token operator"},"="),a(" scope"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"Escape"),n("span",{class:"token punctuation"},"("),n("span",{class:"token function"},"napi_value"),n("span",{class:"token punctuation"},"("),a("obj"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"ToObject"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`

  `),n("span",{class:"token keyword"},"return"),a(" escapableObj"),n("span",{class:"token punctuation"},";"),a(`
`),n("span",{class:"token punctuation"},"}"),a(`
`)])],-1),gn=n("pre",null,[n("code",{class:"language-cpp"},[n("span",{class:"token macro property"},[n("span",{class:"token directive-hash"},"#"),n("span",{class:"token directive keyword"},"include"),a(),n("span",{class:"token string"},'"./MyObject.hh"')]),a(`

Napi`),n("span",{class:"token double-colon punctuation"},"::"),a("Object "),n("span",{class:"token function"},"creatMyObject"),n("span",{class:"token punctuation"},"("),a("Napi"),n("span",{class:"token double-colon punctuation"},"::"),a("CallbackInfo "),n("span",{class:"token operator"},"&"),a("info"),n("span",{class:"token punctuation"},")"),a(`
`),n("span",{class:"token punctuation"},"{"),a(`
    Napi`),n("span",{class:"token double-colon punctuation"},"::"),a("Env env "),n("span",{class:"token operator"},"="),a(" info"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"Env"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
    Napi`),n("span",{class:"token double-colon punctuation"},"::"),a("Value arg "),n("span",{class:"token operator"},"="),a(" info"),n("span",{class:"token punctuation"},"["),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},";"),a(`

    `),n("span",{class:"token keyword"},"return"),a(),n("span",{class:"token class-name"},"MyObject"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token function"},"NewInstance"),n("span",{class:"token punctuation"},"("),a("env"),n("span",{class:"token punctuation"},","),a(" arg"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
`),n("span",{class:"token punctuation"},"}"),a(`
Napi`),n("span",{class:"token double-colon punctuation"},"::"),a("Object "),n("span",{class:"token function"},"addMyObj"),n("span",{class:"token punctuation"},"("),a("Napi"),n("span",{class:"token double-colon punctuation"},"::"),a("CallbackInfo "),n("span",{class:"token operator"},"&"),a("info"),n("span",{class:"token punctuation"},")"),a(`
`),n("span",{class:"token punctuation"},"{"),a(`
    Napi`),n("span",{class:"token double-colon punctuation"},"::"),a("Env env "),n("span",{class:"token operator"},"="),a(" info"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"Env"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
    MyObject `),n("span",{class:"token operator"},"*"),a("obj0 "),n("span",{class:"token operator"},"="),a(" Napi"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token class-name"},"ObjectWrap"),n("span",{class:"token operator"},"<"),a("MyObject"),n("span",{class:"token operator"},">"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token function"},"Unwrap"),n("span",{class:"token punctuation"},"("),a("info"),n("span",{class:"token punctuation"},"["),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},"."),n("span",{class:"token generic-function"},[n("span",{class:"token function"},"As"),n("span",{class:"token generic class-name"},[n("span",{class:"token operator"},"<"),a("Napi"),n("span",{class:"token double-colon punctuation"},"::"),a("Object"),n("span",{class:"token operator"},">")])]),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
    MyObject `),n("span",{class:"token operator"},"*"),a("obj1 "),n("span",{class:"token operator"},"="),a(" Napi"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token class-name"},"ObjectWrap"),n("span",{class:"token operator"},"<"),a("MyObject"),n("span",{class:"token operator"},">"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token function"},"Unwrap"),n("span",{class:"token punctuation"},"("),a("info"),n("span",{class:"token punctuation"},"["),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},"."),n("span",{class:"token generic-function"},[n("span",{class:"token function"},"As"),n("span",{class:"token generic class-name"},[n("span",{class:"token operator"},"<"),a("Napi"),n("span",{class:"token double-colon punctuation"},"::"),a("Object"),n("span",{class:"token operator"},">")])]),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
    `),n("span",{class:"token keyword"},"double"),a(" res "),n("span",{class:"token operator"},"="),a(" obj0"),n("span",{class:"token operator"},"->"),a("value "),n("span",{class:"token operator"},"+"),a(" obj1"),n("span",{class:"token operator"},"->"),a("value"),n("span",{class:"token punctuation"},";"),a(`
    `),n("span",{class:"token keyword"},"return"),a(),n("span",{class:"token class-name"},"MyObject"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token function"},"NewInstance"),n("span",{class:"token punctuation"},"("),a("env"),n("span",{class:"token punctuation"},","),a(" Napi"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token class-name"},"Number"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token function"},"New"),n("span",{class:"token punctuation"},"("),a("env"),n("span",{class:"token punctuation"},","),a(" res"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
`),n("span",{class:"token punctuation"},"}"),a(`

Napi`),n("span",{class:"token double-colon punctuation"},"::"),a("Object "),n("span",{class:"token function"},"InitAll"),n("span",{class:"token punctuation"},"("),a("Napi"),n("span",{class:"token double-colon punctuation"},"::"),a("Env env"),n("span",{class:"token punctuation"},","),a(" Napi"),n("span",{class:"token double-colon punctuation"},"::"),a("Object exports"),n("span",{class:"token punctuation"},")"),a(`
`),n("span",{class:"token punctuation"},"{"),a(`
    `),n("span",{class:"token class-name"},"MyObject"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token function"},"Init"),n("span",{class:"token punctuation"},"("),a("env"),n("span",{class:"token punctuation"},","),a(" exports"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
    exports`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"Set"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"creatMyObject"'),n("span",{class:"token punctuation"},","),a(" Napi"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token class-name"},"Function"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token function"},"New"),n("span",{class:"token punctuation"},"("),a("env"),n("span",{class:"token punctuation"},","),a(" creatMyObject"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
    exports`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"Set"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"addMyObj"'),n("span",{class:"token punctuation"},","),a(" Napi"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token class-name"},"Function"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token function"},"New"),n("span",{class:"token punctuation"},"("),a("env"),n("span",{class:"token punctuation"},","),a(" addMyObj"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
    `),n("span",{class:"token keyword"},"return"),a(" exports"),n("span",{class:"token punctuation"},";"),a(`
`),n("span",{class:"token punctuation"},"}"),a(`

`),n("span",{class:"token function"},"NODE_API_MODULE"),n("span",{class:"token punctuation"},"("),a("NODE_GYP_MODULE_NAME"),n("span",{class:"token punctuation"},","),a(" InitAll"),n("span",{class:"token punctuation"},")"),a(`
`)])],-1),vn=n("pre",null,[n("code",{class:"language-cpp"},[a("#"),n("span",{class:"token operator"},"!"),a(` node
var addon `),n("span",{class:"token operator"},"="),a(),n("span",{class:"token function"},"require"),n("span",{class:"token punctuation"},"("),n("span",{class:"token char"},"'bindings'"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"("),n("span",{class:"token char"},"'hello_world'"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`

let MyObject `),n("span",{class:"token operator"},"="),a(" addon"),n("span",{class:"token punctuation"},"."),a(`MyObject
let creatMyObject `),n("span",{class:"token operator"},"="),a(" addon"),n("span",{class:"token punctuation"},"."),a(`creatMyObject
let addMyObj `),n("span",{class:"token operator"},"="),a(" addon"),n("span",{class:"token punctuation"},"."),a(`addMyObj

let myObj0 `),n("span",{class:"token operator"},"="),a(),n("span",{class:"token keyword"},"new"),a(),n("span",{class:"token function"},"MyObject"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"321"),n("span",{class:"token punctuation"},")"),a(`
let myObj1 `),n("span",{class:"token operator"},"="),a(),n("span",{class:"token function"},"creatMyObject"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"123"),n("span",{class:"token punctuation"},")"),a(`

let myObj3 `),n("span",{class:"token operator"},"="),a(),n("span",{class:"token function"},"addMyObj"),n("span",{class:"token punctuation"},"("),a("myObj0"),n("span",{class:"token punctuation"},","),a(" myObj1"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`

console`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"log"),n("span",{class:"token punctuation"},"("),a("myObj3"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"GetVal"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token comment"},"// 444"),a(`
`)])],-1),Nn=p(`<h2 id="arraybuffer" tabindex="-1"><a class="header-anchor" href="#arraybuffer"><span>ArrayBuffer</span></a></h2><blockquote><p><a href="https://github.com/nodejs/node-addon-api/blob/main/doc/array_buffer.md" target="_blank" rel="noopener noreferrer">https://github.com/nodejs/node-addon-api/blob/main/doc/array_buffer.md</a></p></blockquote><p><code>Napi::ArrayBuffer</code> 类继承自类 <code>Napi::Object</code>, 对应于 JavaScript 中的 <a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer" target="_blank" rel="noopener noreferrer">ArrayBuffer</a> 类。</p><h3 id="new-字节长度" tabindex="-1"><a class="header-anchor" href="#new-字节长度"><span><code>New(字节长度)</code></span></a></h3><p>分配一个具有指定长度的新 <code>Napi::ArrayBuffer</code> 实例。</p><pre><code class="language-cpp"><span class="token keyword">static</span> Napi<span class="token double-colon punctuation">::</span>ArrayBuffer Napi<span class="token double-colon punctuation">::</span><span class="token class-name">ArrayBuffer</span><span class="token double-colon punctuation">::</span><span class="token function">New</span><span class="token punctuation">(</span>napi_env env<span class="token punctuation">,</span> size_t byteLength<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><ul><li><code>[in] env</code>: 创建 <code>Napi::ArrayBuffer</code> 实例的环境。</li><li><code>[in] byteLength</code>: 分配的字节长度。</li></ul><p>返回一个新的 <code>Napi::ArrayBuffer</code> 实例。</p><h3 id="new-外部数据" tabindex="-1"><a class="header-anchor" href="#new-外部数据"><span><code>New(外部数据)</code></span></a></h3><blockquote><p>当定义了 <code>NODE_API_NO_EXTERNAL_BUFFERS_ALLOWED</code> 时，此方法不可用。</p></blockquote><p>将提供的外部数据封装进一个新的 <code>Napi::ArrayBuffer</code> 实例中。</p><ul><li><code>Napi::ArrayBuffer</code> 实例并不拥有这些数据，且期望数据在其生命周期内保持有效。</li><li>由于 <code>Napi::ArrayBuffer</code> 可能被垃圾回收，此重载仅适用于静态数据，这些数据永远不需要释放。</li><li>此工厂方法不会提供机会让调用者在 <code>Napi::ArrayBuffer</code> 被垃圾回收时释放数据。</li><li>如果你需要释放 <code>Napi::ArrayBuffer</code> 对象保留的数据，请使用接受 <code>Napi::Finalizer</code> 的 <code>Napi::ArrayBuffer::New</code> 工厂方法的其他变体，这是一个在 <code>Napi::ArrayBuffer</code> 对象被销毁时将被调用的函数。</li></ul><pre><code class="language-cpp"><span class="token keyword">static</span> Napi<span class="token double-colon punctuation">::</span>ArrayBuffer Napi<span class="token double-colon punctuation">::</span><span class="token class-name">ArrayBuffer</span><span class="token double-colon punctuation">::</span><span class="token function">New</span><span class="token punctuation">(</span>napi_env env<span class="token punctuation">,</span> <span class="token keyword">void</span><span class="token operator">*</span> externalData<span class="token punctuation">,</span> size_t byteLength<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><ul><li><code>[in] env</code>: 创建 <code>Napi::ArrayBuffer</code> 实例的环境。</li><li><code>[in] externalData</code>: 要封装的外部数据的指针。</li><li><code>[in] byteLength</code>: <code>externalData</code> 的长度，单位为字节。</li></ul><p>返回一个新的 <code>Napi::ArrayBuffer</code> 实例。</p><h3 id="new-带析构回调" tabindex="-1"><a class="header-anchor" href="#new-带析构回调"><span><code>New（带析构回调）</code></span></a></h3><blockquote><p>当定义了 <code>NODE_API_NO_EXTERNAL_BUFFERS_ALLOWED</code> 时，此方法不可用。</p></blockquote><p>将提供的外部数据封装进一个新的 <code>Napi::ArrayBuffer</code> 实例，并允许提供析构回调。</p><p><code>Napi::ArrayBuffer</code> 实例不拥有数据，但期望数据在其生存期内有效。数据只有在 <code>finalizeCallback</code> 被调用时才能被释放，这表明 <code>Napi::ArrayBuffer</code> 已经被释放。</p><pre><code class="language-cpp"><span class="token keyword">template</span> <span class="token operator">&lt;</span><span class="token keyword">typename</span> <span class="token class-name">Finalizer</span><span class="token operator">&gt;</span>
<span class="token keyword">static</span> Napi<span class="token double-colon punctuation">::</span>ArrayBuffer Napi<span class="token double-colon punctuation">::</span><span class="token class-name">ArrayBuffer</span><span class="token double-colon punctuation">::</span><span class="token function">New</span><span class="token punctuation">(</span>napi_env env<span class="token punctuation">,</span>
                       <span class="token keyword">void</span><span class="token operator">*</span> externalData<span class="token punctuation">,</span>
                       size_t byteLength<span class="token punctuation">,</span>
                       Finalizer finalizeCallback<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><ul><li><code>[in] env</code>: 创建 <code>Napi::ArrayBuffer</code> 实例的环境。</li><li><code>[in] externalData</code>: 要封装的外部数据的指针。</li><li><code>[in] byteLength</code>: <code>externalData</code> 的长度，单位为字节。</li><li><code>[in] finalizeCallback</code>: 当 <code>Napi::ArrayBuffer</code> 被销毁时调用的函数。它必须实现 <code>operator()</code>，接受一个 <code>Napi::Env</code>、一个 <code>void*</code>（即 <code>externalData</code> 指针）并返回 <code>void</code>。</li></ul><p>返回一个新的 <code>Napi::ArrayBuffer</code> 实例。</p><h3 id="new-带析构回调和提示" tabindex="-1"><a class="header-anchor" href="#new-带析构回调和提示"><span><code>New（带析构回调和提示）</code></span></a></h3><blockquote><p>当定义了 <code>NODE_API_NO_EXTERNAL_BUFFERS_ALLOWED</code> 时，此方法不可用。</p></blockquote><p>同上，但允许提供一个额外的提示参数给析构回调。</p><pre><code class="language-cpp"><span class="token keyword">template</span> <span class="token operator">&lt;</span><span class="token keyword">typename</span> <span class="token class-name">Finalizer</span><span class="token punctuation">,</span> <span class="token keyword">typename</span> <span class="token class-name">Hint</span><span class="token operator">&gt;</span>
<span class="token keyword">static</span> Napi<span class="token double-colon punctuation">::</span>ArrayBuffer Napi<span class="token double-colon punctuation">::</span><span class="token class-name">ArrayBuffer</span><span class="token double-colon punctuation">::</span><span class="token function">New</span><span class="token punctuation">(</span>napi_env env<span class="token punctuation">,</span>
                       <span class="token keyword">void</span><span class="token operator">*</span> externalData<span class="token punctuation">,</span>
                       size_t byteLength<span class="token punctuation">,</span>
                       Finalizer finalizeCallback<span class="token punctuation">,</span>
                       Hint<span class="token operator">*</span> finalizeHint<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><ul><li><code>[in] env</code>: 创建 <code>Napi::ArrayBuffer</code> 实例的环境。</li><li><code>[in] externalData</code>: 要封装的外部数据的指针。</li><li><code>[in] byteLength</code>: <code>externalData</code> 的长度，单位为字节。</li><li><code>[in] finalizeCallback</code>: 当 <code>Napi::ArrayBuffer</code> 被销毁时调用的函数。 <ul><li>它必须实现 <code>operator()</code>，接受一个 <code>Napi::Env</code>、一个 <code>void*</code>（即 <code>externalData</code> 指针）和一个 <code>Hint*</code>，并返回 <code>void</code>。</li></ul></li><li><code>[in] finalizeHint</code>: 作为析构回调第二个参数传递的提示。</li></ul><p>返回一个新的 <code>Napi::ArrayBuffer</code> 实例。</p><h3 id="构造函数-3" tabindex="-1"><a class="header-anchor" href="#构造函数-3"><span><code>构造函数()</code></span></a></h3><p>初始化一个空的 <code>Napi::ArrayBuffer</code> 类实例。</p><pre><code class="language-cpp">Napi<span class="token double-colon punctuation">::</span><span class="token class-name">ArrayBuffer</span><span class="token double-colon punctuation">::</span><span class="token function">ArrayBuffer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><h3 id="构造函数-env-arraybuffer" tabindex="-1"><a class="header-anchor" href="#构造函数-env-arraybuffer"><span><code>构造函数(env,arrayBuffer)</code></span></a></h3><p>初始化一个现有 <code>Napi::ArrayBuffer</code> 对象的包装实例。</p><pre><code class="language-cpp">Napi<span class="token double-colon punctuation">::</span><span class="token class-name">ArrayBuffer</span><span class="token double-colon punctuation">::</span><span class="token function">ArrayBuffer</span><span class="token punctuation">(</span>napi_env env<span class="token punctuation">,</span> napi_value value<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><ul><li><code>[in] env</code>: 创建 <code>Napi::ArrayBuffer</code> 实例的环境。</li><li><code>[in] value</code>: 要封装的 <code>Napi::ArrayBuffer</code> 引用。</li></ul><h3 id="bytelength" tabindex="-1"><a class="header-anchor" href="#bytelength"><span><code>ByteLength()</code></span></a></h3><p>返回封装数据的长度，单位为字节。</p><pre><code class="language-cpp">size_t Napi<span class="token double-colon punctuation">::</span><span class="token class-name">ArrayBuffer</span><span class="token double-colon punctuation">::</span><span class="token function">ByteLength</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">const</span><span class="token punctuation">;</span>
</code></pre><h3 id="void-data" tabindex="-1"><a class="header-anchor" href="#void-data"><span><code>void* Data()</code></span></a></h3><p>返回指向封装数据的指针。</p><pre><code class="language-cpp"><span class="token keyword">void</span><span class="token operator">*</span> Napi<span class="token double-colon punctuation">::</span><span class="token class-name">ArrayBuffer</span><span class="token double-colon punctuation">::</span><span class="token function">Data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">const</span><span class="token punctuation">;</span>
</code></pre><h3 id="void-detach" tabindex="-1"><a class="header-anchor" href="#void-detach"><span><code>void Detach()</code></span></a></h3><p>在可分离的 <code>ArrayBuffer</code> 上调用 <code>ArrayBuffer</code> 分离操作。</p><pre><code class="language-cpp"><span class="token keyword">void</span> Napi<span class="token double-colon punctuation">::</span><span class="token class-name">ArrayBuffer</span><span class="token double-colon punctuation">::</span><span class="token function">Detach</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><h3 id="bool-isdetached" tabindex="-1"><a class="header-anchor" href="#bool-isdetached"><span><code>bool IsDetached()</code></span></a></h3><p>如果此 <code>ArrayBuffer</code> 已经分离，则返回 <code>true</code>。</p><pre><code class="language-cpp"><span class="token keyword">bool</span> Napi<span class="token double-colon punctuation">::</span><span class="token class-name">ArrayBuffer</span><span class="token double-colon punctuation">::</span><span class="token function">IsDetached</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">const</span><span class="token punctuation">;</span>
</code></pre><h3 id="案例-passing-array-buffer-to-native" tabindex="-1"><a class="header-anchor" href="#案例-passing-array-buffer-to-native"><span>案例：passing_array_buffer_to_native</span></a></h3>`,48),_n=n("code",null,"src/MyObject.hh",-1),wn=n("code",null,"index.js",-1),En=n("pre",null,[n("code",{class:"language-cpp"},[n("span",{class:"token macro property"},[n("span",{class:"token directive-hash"},"#"),n("span",{class:"token directive keyword"},"include"),a(),n("span",{class:"token string"},"<napi.h>")]),a(`
`),n("span",{class:"token macro property"},[n("span",{class:"token directive-hash"},"#"),n("span",{class:"token directive keyword"},"include"),a(),n("span",{class:"token string"},"<iostream>")]),a(`

`),n("span",{class:"token keyword"},"void"),a(),n("span",{class:"token function"},"processArrayBuffer"),n("span",{class:"token punctuation"},"("),a("Napi"),n("span",{class:"token double-colon punctuation"},"::"),a("ArrayBuffer buffer"),n("span",{class:"token punctuation"},")"),a(`
`),n("span",{class:"token punctuation"},"{"),a(`
    `),n("span",{class:"token comment"},"// print"),a(`
    `),n("span",{class:"token keyword"},"uint8_t"),a(),n("span",{class:"token operator"},"*"),a("data "),n("span",{class:"token operator"},"="),a(),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"uint8_t"),a(),n("span",{class:"token operator"},"*"),n("span",{class:"token punctuation"},")"),a("buffer"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"Data"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
    `),n("span",{class:"token keyword"},"uint32_t"),a(" length "),n("span",{class:"token operator"},"="),a(" buffer"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"ByteLength"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token operator"},"/"),a(),n("span",{class:"token keyword"},"sizeof"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"uint8_t"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
    
    std`),n("span",{class:"token double-colon punctuation"},"::"),a("cout "),n("span",{class:"token operator"},"<<"),a(),n("span",{class:"token string"},'"bytes:"'),n("span",{class:"token punctuation"},";"),a(`
    `),n("span",{class:"token keyword"},"for"),a(),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"int32_t"),a(" i "),n("span",{class:"token operator"},"="),a(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},";"),a(" i "),n("span",{class:"token operator"},"<"),a(" length"),n("span",{class:"token punctuation"},";"),a(" i"),n("span",{class:"token operator"},"++"),n("span",{class:"token punctuation"},")"),a(`
        std`),n("span",{class:"token double-colon punctuation"},"::"),a("cout "),n("span",{class:"token operator"},"<<"),a(),n("span",{class:"token operator"},"+"),a("data"),n("span",{class:"token punctuation"},"["),a("i"),n("span",{class:"token punctuation"},"]"),a(),n("span",{class:"token operator"},"<<"),a(),n("span",{class:"token string"},'","'),n("span",{class:"token punctuation"},";"),a(`
    std`),n("span",{class:"token double-colon punctuation"},"::"),a("cout "),n("span",{class:"token operator"},"<<"),a(" std"),n("span",{class:"token double-colon punctuation"},"::"),a("endl"),n("span",{class:"token punctuation"},";"),a(`

    `),n("span",{class:"token comment"},"// test for copy to vector"),a(`
    std`),n("span",{class:"token double-colon punctuation"},"::"),a("vector"),n("span",{class:"token operator"},"<"),n("span",{class:"token keyword"},"uint8_t"),n("span",{class:"token operator"},">"),a(),n("span",{class:"token function"},"u8Vector"),n("span",{class:"token punctuation"},"("),a("data"),n("span",{class:"token punctuation"},","),a(" data "),n("span",{class:"token operator"},"+"),a(" length"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
    `),n("span",{class:"token comment"},"// print vector"),a(`
    std`),n("span",{class:"token double-colon punctuation"},"::"),a("cout "),n("span",{class:"token operator"},"<<"),a(),n("span",{class:"token string"},'"bytes:"'),n("span",{class:"token punctuation"},";"),a(`
    `),n("span",{class:"token keyword"},"for"),a(),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"uint8_t"),a(" item "),n("span",{class:"token operator"},":"),a(" u8Vector"),n("span",{class:"token punctuation"},")"),a(`
        std`),n("span",{class:"token double-colon punctuation"},"::"),a("cout "),n("span",{class:"token operator"},"<<"),a(),n("span",{class:"token operator"},"+"),a("item "),n("span",{class:"token operator"},"<<"),a(),n("span",{class:"token string"},'","'),n("span",{class:"token punctuation"},";"),a(`
    std`),n("span",{class:"token double-colon punctuation"},"::"),a("cout "),n("span",{class:"token operator"},"<<"),a(" std"),n("span",{class:"token double-colon punctuation"},"::"),a("endl"),n("span",{class:"token punctuation"},";"),a(`
`),n("span",{class:"token punctuation"},"}"),a(`

Napi`),n("span",{class:"token double-colon punctuation"},"::"),a("Value "),n("span",{class:"token function"},"readArrayBuffer"),n("span",{class:"token punctuation"},"("),a("Napi"),n("span",{class:"token double-colon punctuation"},"::"),a("CallbackInfo "),n("span",{class:"token operator"},"&"),a("info"),n("span",{class:"token punctuation"},")"),a(`
`),n("span",{class:"token punctuation"},"{"),a(`
    Napi`),n("span",{class:"token double-colon punctuation"},"::"),a("Env env "),n("span",{class:"token operator"},"="),a(" info"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"Env"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
    `),n("span",{class:"token comment"},"// type check"),a(`
    `),n("span",{class:"token keyword"},"if"),a(),n("span",{class:"token punctuation"},"("),a("info"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"Length"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token operator"},"<"),a(),n("span",{class:"token number"},"1"),a(),n("span",{class:"token operator"},"||"),a(),n("span",{class:"token operator"},"!"),a("info"),n("span",{class:"token punctuation"},"["),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"IsArrayBuffer"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),a(`
    `),n("span",{class:"token punctuation"},"{"),a(`
        Napi`),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token class-name"},"TypeError"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token function"},"New"),n("span",{class:"token punctuation"},"("),a("env"),n("span",{class:"token punctuation"},","),a(),n("span",{class:"token string"},'"expect arg0 is ArrayBuffer."'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"ThrowAsJavaScriptException"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
        `),n("span",{class:"token keyword"},"return"),a(" Napi"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token class-name"},"Boolean"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token function"},"New"),n("span",{class:"token punctuation"},"("),a("env"),n("span",{class:"token punctuation"},","),a(),n("span",{class:"token boolean"},"false"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
    `),n("span",{class:"token punctuation"},"}"),a(`
    Napi`),n("span",{class:"token double-colon punctuation"},"::"),a("ArrayBuffer buffer "),n("span",{class:"token operator"},"="),a(" info"),n("span",{class:"token punctuation"},"["),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},"."),n("span",{class:"token generic-function"},[n("span",{class:"token function"},"As"),n("span",{class:"token generic class-name"},[n("span",{class:"token operator"},"<"),a("Napi"),n("span",{class:"token double-colon punctuation"},"::"),a("ArrayBuffer"),n("span",{class:"token operator"},">")])]),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`

    `),n("span",{class:"token function"},"processArrayBuffer"),n("span",{class:"token punctuation"},"("),a("buffer"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`

    `),n("span",{class:"token keyword"},"return"),a(" Napi"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token class-name"},"Boolean"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token function"},"New"),n("span",{class:"token punctuation"},"("),a("env"),n("span",{class:"token punctuation"},","),a(),n("span",{class:"token boolean"},"true"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
`),n("span",{class:"token punctuation"},"}"),a(`

Napi`),n("span",{class:"token double-colon punctuation"},"::"),a("Object "),n("span",{class:"token function"},"InitAll"),n("span",{class:"token punctuation"},"("),a("Napi"),n("span",{class:"token double-colon punctuation"},"::"),a("Env env"),n("span",{class:"token punctuation"},","),a(" Napi"),n("span",{class:"token double-colon punctuation"},"::"),a("Object exports"),n("span",{class:"token punctuation"},")"),a(`
`),n("span",{class:"token punctuation"},"{"),a(`
    exports`),n("span",{class:"token punctuation"},"["),n("span",{class:"token string"},'"readArrayBuffer"'),n("span",{class:"token punctuation"},"]"),a(),n("span",{class:"token operator"},"="),a(" Napi"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token class-name"},"Function"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token function"},"New"),n("span",{class:"token punctuation"},"("),a("env"),n("span",{class:"token punctuation"},","),a(" readArrayBuffer"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
    `),n("span",{class:"token keyword"},"return"),a(" exports"),n("span",{class:"token punctuation"},";"),a(`
`),n("span",{class:"token punctuation"},"}"),a(`

`),n("span",{class:"token function"},"NODE_API_MODULE"),n("span",{class:"token punctuation"},"("),a("NODE_GYP_MODULE_NAME"),n("span",{class:"token punctuation"},","),a(" InitAll"),n("span",{class:"token punctuation"},")"),a(`
`)])],-1),An=n("pre",null,[n("code",{class:"language-cpp"},[a("#"),n("span",{class:"token operator"},"!"),a(` node
var addon `),n("span",{class:"token operator"},"="),a(),n("span",{class:"token function"},"require"),n("span",{class:"token punctuation"},"("),n("span",{class:"token char"},"'bindings'"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"("),n("span",{class:"token char"},"'hello_world'"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`

let readArrayBuffer `),n("span",{class:"token operator"},"="),a(" addon"),n("span",{class:"token punctuation"},"."),a(`readArrayBuffer

let arrayBuf `),n("span",{class:"token operator"},"="),a(),n("span",{class:"token keyword"},"new"),a(),n("span",{class:"token function"},"ArrayBuffer"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"10"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
let dataView `),n("span",{class:"token operator"},"="),a(),n("span",{class:"token keyword"},"new"),a(),n("span",{class:"token function"},"DataView"),n("span",{class:"token punctuation"},"("),a("arrayBuf"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
let typedAry `),n("span",{class:"token operator"},"="),a(),n("span",{class:"token keyword"},"new"),a(),n("span",{class:"token function"},"Uint8Array"),n("span",{class:"token punctuation"},"("),a("arrayBuf"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`

dataView`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"setUint8"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},","),a(),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
dataView`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"setUint8"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},","),a(),n("span",{class:"token number"},"2"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
dataView`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"setUint8"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"2"),n("span",{class:"token punctuation"},","),a(),n("span",{class:"token number"},"3"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
typedAry`),n("span",{class:"token punctuation"},"["),n("span",{class:"token number"},"3"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token operator"},"="),n("span",{class:"token number"},"4"),a(`
typedAry`),n("span",{class:"token punctuation"},"["),n("span",{class:"token number"},"4"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token operator"},"="),n("span",{class:"token number"},"5"),a(`
typedAry`),n("span",{class:"token punctuation"},"["),n("span",{class:"token number"},"5"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token operator"},"="),n("span",{class:"token number"},"6"),a(`

console`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"log"),n("span",{class:"token punctuation"},"("),a("arrayBuf"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`

console`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"log"),n("span",{class:"token punctuation"},"("),n("span",{class:"token function"},"readArrayBuffer"),n("span",{class:"token punctuation"},"("),a("arrayBuf"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),a(`
`),n("span",{class:"token comment"},`/**
 * bytes:1,2,3,4,5,6,0,0,0,0,
 * bytes:1,2,3,4,5,6,0,0,0,0,
 * true
 */`),a(`
`)])],-1),jn=p(`<h2 id="typedarray" tabindex="-1"><a class="header-anchor" href="#typedarray"><span>TypedArray</span></a></h2><p><code>Napi::TypedArray</code> 类是从类 [<code>Napi::Object</code>][] 继承的。</p><p>这个 <code>Napi::TypedArray</code> 类对应于 JavaScript 中的 <a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/TypedArray" target="_blank" rel="noopener noreferrer">TypedArray</a> 类。</p><h3 id="构造函数-4" tabindex="-1"><a class="header-anchor" href="#构造函数-4"><span><code>构造函数()</code></span></a></h3><p>初始化一个空的 <code>Napi::TypedArray</code> 类实例。</p><pre><code class="language-cpp">Napi<span class="token double-colon punctuation">::</span><span class="token class-name">TypedArray</span><span class="token double-colon punctuation">::</span><span class="token function">TypedArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><h3 id="构造函数-env-typedarray" tabindex="-1"><a class="header-anchor" href="#构造函数-env-typedarray"><span><code>构造函数(env,typedArray)</code></span></a></h3><p>根据现有的 <code>Napi::TypedArray</code> 实例初始化一个包装器实例。</p><pre><code class="language-cpp">Napi<span class="token double-colon punctuation">::</span><span class="token class-name">TypedArray</span><span class="token double-colon punctuation">::</span><span class="token function">TypedArray</span><span class="token punctuation">(</span>napi_env env<span class="token punctuation">,</span> napi_value value<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><ul><li><code>[in] env</code>：用于创建 <code>Napi::TypedArray</code> 实例的环境。</li><li><code>[in] value</code>：要封装的 <code>Napi::TypedArray</code> 引用。</li></ul><h3 id="napi-typedarray-type-typedarraytype" tabindex="-1"><a class="header-anchor" href="#napi-typedarray-type-typedarraytype"><span><code>napi_typedarray_type TypedArrayType()</code></span></a></h3><p>返回此实例的类型。</p><pre><code class="language-cpp">napi_typedarray_type Napi<span class="token double-colon punctuation">::</span><span class="token class-name">TypedArray</span><span class="token double-colon punctuation">::</span><span class="token function">TypedArrayType</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">const</span><span class="token punctuation">;</span>
</code></pre><h3 id="arraybuffer-1" tabindex="-1"><a class="header-anchor" href="#arraybuffer-1"><span><code>ArrayBuffer()</code></span></a></h3><p>返回支持此 <code>TypedArray</code> 的 <code>Napi::ArrayBuffer</code>。</p><pre><code class="language-cpp">Napi<span class="token double-colon punctuation">::</span>ArrayBuffer Napi<span class="token double-colon punctuation">::</span><span class="token class-name">TypedArray</span><span class="token double-colon punctuation">::</span><span class="token function">ArrayBuffer</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">const</span><span class="token punctuation">;</span>
</code></pre><h3 id="uint8-t-elementsize" tabindex="-1"><a class="header-anchor" href="#uint8-t-elementsize"><span><code>uint8_t ElementSize()</code></span></a></h3><p>返回单个元素的大小，单位为字节。</p><pre><code class="language-cpp"><span class="token keyword">uint8_t</span> Napi<span class="token double-colon punctuation">::</span><span class="token class-name">TypedArray</span><span class="token double-colon punctuation">::</span><span class="token function">ElementSize</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">const</span><span class="token punctuation">;</span>
</code></pre><h3 id="size-t-elementlength" tabindex="-1"><a class="header-anchor" href="#size-t-elementlength"><span><code>size_t ElementLength()</code></span></a></h3><p>返回元素的数量。</p><pre><code class="language-cpp">size_t Napi<span class="token double-colon punctuation">::</span><span class="token class-name">TypedArray</span><span class="token double-colon punctuation">::</span><span class="token function">ElementLength</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">const</span><span class="token punctuation">;</span>
</code></pre><h3 id="size-t-byteoffset" tabindex="-1"><a class="header-anchor" href="#size-t-byteoffset"><span><code>size_t ByteOffset()</code></span></a></h3><p>返回数组在 <code>Napi::ArrayBuffer</code> 中起始的偏移量，单位为字节。</p><pre><code class="language-cpp">size_t Napi<span class="token double-colon punctuation">::</span><span class="token class-name">TypedArray</span><span class="token double-colon punctuation">::</span><span class="token function">ByteOffset</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">const</span><span class="token punctuation">;</span>
</code></pre><h3 id="size-t-bytelength" tabindex="-1"><a class="header-anchor" href="#size-t-bytelength"><span><code>size_t ByteLength()</code></span></a></h3><p>返回数组的总长度，单位为字节。</p><pre><code class="language-cpp">size_t Napi<span class="token double-colon punctuation">::</span><span class="token class-name">TypedArray</span><span class="token double-colon punctuation">::</span><span class="token function">ByteLength</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">const</span><span class="token punctuation">;</span>
</code></pre><p><strong>注：</strong></p><p>TypedArray 实际上是对底层 ArrayBuffer 的一个视图，这意味着它可以指向 ArrayBuffer 内存中的任意位置，而不一定从头开始。</p><pre><code class="language-cpp"><span class="token comment">// 假设我们已经有了一个 ArrayBuffer，大小为 20 字节</span>
Napi<span class="token double-colon punctuation">::</span>ArrayBuffer buffer <span class="token operator">=</span> Napi<span class="token double-colon punctuation">::</span><span class="token class-name">ArrayBuffer</span><span class="token double-colon punctuation">::</span><span class="token function">New</span><span class="token punctuation">(</span>env<span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 创建一个从第4字节开始的Float32Array，假设每个浮点数占用4字节</span>
Napi<span class="token double-colon punctuation">::</span>Float32Array typedArray <span class="token operator">=</span> Napi<span class="token double-colon punctuation">::</span><span class="token class-name">Float32Array</span><span class="token double-colon punctuation">::</span><span class="token function">New</span><span class="token punctuation">(</span>env<span class="token punctuation">,</span> buffer<span class="token punctuation">,</span> <span class="token number">4</span> <span class="token comment">/* byteOffset */</span><span class="token punctuation">,</span> <span class="token number">3</span> <span class="token comment">/* length */</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><h3 id="案例-passing-typed-array-to-native" tabindex="-1"><a class="header-anchor" href="#案例-passing-typed-array-to-native"><span>案例：passing_typed_array_to_native</span></a></h3>`,32),On=n("code",null,"src/MyObject.hh",-1),Bn=n("code",null,"index.js",-1),xn=n("pre",null,[n("code",{class:"language-cpp"},[n("span",{class:"token macro property"},[n("span",{class:"token directive-hash"},"#"),n("span",{class:"token directive keyword"},"include"),a(),n("span",{class:"token string"},"<napi.h>")]),a(`
`),n("span",{class:"token macro property"},[n("span",{class:"token directive-hash"},"#"),n("span",{class:"token directive keyword"},"include"),a(),n("span",{class:"token string"},"<iostream>")]),a(`

`),n("span",{class:"token keyword"},"void"),a(),n("span",{class:"token function"},"processUint16Array"),n("span",{class:"token punctuation"},"("),a("Napi"),n("span",{class:"token double-colon punctuation"},"::"),a("Uint16Array uint16Array"),n("span",{class:"token punctuation"},")"),a(`
`),n("span",{class:"token punctuation"},"{"),a(`
    `),n("span",{class:"token keyword"},"uint16_t"),a(),n("span",{class:"token operator"},"*"),a("data "),n("span",{class:"token operator"},"="),a(" uint16Array"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"Data"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
    `),n("span",{class:"token keyword"},"uint32_t"),a(" length "),n("span",{class:"token operator"},"="),a(" uint16Array"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"ByteLength"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token operator"},"/"),a(),n("span",{class:"token keyword"},"sizeof"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"uint16_t"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
    `),n("span",{class:"token keyword"},"for"),a(),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"int32_t"),a(" i "),n("span",{class:"token operator"},"="),a(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},";"),a(" i "),n("span",{class:"token operator"},"<"),a(" length"),n("span",{class:"token punctuation"},";"),a(" i"),n("span",{class:"token operator"},"++"),n("span",{class:"token punctuation"},")"),a(`
        std`),n("span",{class:"token double-colon punctuation"},"::"),a("cout "),n("span",{class:"token operator"},"<<"),a(" data"),n("span",{class:"token punctuation"},"["),a("i"),n("span",{class:"token punctuation"},"]"),a(),n("span",{class:"token operator"},"<<"),a(),n("span",{class:"token string"},'","'),n("span",{class:"token punctuation"},";"),a(`
    std`),n("span",{class:"token double-colon punctuation"},"::"),a("cout "),n("span",{class:"token operator"},"<<"),a(" std"),n("span",{class:"token double-colon punctuation"},"::"),a("endl"),n("span",{class:"token punctuation"},";"),a(`

    `),n("span",{class:"token comment"},"// test for copy to vector"),a(`
    std`),n("span",{class:"token double-colon punctuation"},"::"),a("vector"),n("span",{class:"token operator"},"<"),n("span",{class:"token keyword"},"uint16_t"),n("span",{class:"token operator"},">"),a(),n("span",{class:"token function"},"u16Vector"),n("span",{class:"token punctuation"},"("),a("uint16Array"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"Data"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),a(" uint16Array"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"Data"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token operator"},"+"),a(" uint16Array"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"ElementLength"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
    `),n("span",{class:"token comment"},"// print vector"),a(`
    std`),n("span",{class:"token double-colon punctuation"},"::"),a("cout "),n("span",{class:"token operator"},"<<"),a(),n("span",{class:"token string"},'"vector:"'),n("span",{class:"token punctuation"},";"),a(`
    `),n("span",{class:"token keyword"},"for"),a(),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"uint16_t"),a(" item "),n("span",{class:"token operator"},":"),a(" u16Vector"),n("span",{class:"token punctuation"},")"),a(`
        std`),n("span",{class:"token double-colon punctuation"},"::"),a("cout "),n("span",{class:"token operator"},"<<"),a(" item "),n("span",{class:"token operator"},"<<"),a(),n("span",{class:"token string"},'","'),n("span",{class:"token punctuation"},";"),a(`
    std`),n("span",{class:"token double-colon punctuation"},"::"),a("cout "),n("span",{class:"token operator"},"<<"),a(" std"),n("span",{class:"token double-colon punctuation"},"::"),a("endl"),n("span",{class:"token punctuation"},";"),a(`
`),n("span",{class:"token punctuation"},"}"),a(`

Napi`),n("span",{class:"token double-colon punctuation"},"::"),a("Value "),n("span",{class:"token function"},"readTypedArray"),n("span",{class:"token punctuation"},"("),a("Napi"),n("span",{class:"token double-colon punctuation"},"::"),a("CallbackInfo "),n("span",{class:"token operator"},"&"),a("info"),n("span",{class:"token punctuation"},")"),a(`
`),n("span",{class:"token punctuation"},"{"),a(`
    Napi`),n("span",{class:"token double-colon punctuation"},"::"),a("Env env "),n("span",{class:"token operator"},"="),a(" info"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"Env"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`

    `),n("span",{class:"token comment"},"// type check"),a(`
    `),n("span",{class:"token keyword"},"if"),a(),n("span",{class:"token punctuation"},"("),a("info"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"Length"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token operator"},"<"),a(),n("span",{class:"token number"},"1"),a(),n("span",{class:"token operator"},"||"),a(),n("span",{class:"token operator"},"!"),a("info"),n("span",{class:"token punctuation"},"["),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"IsTypedArray"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token operator"},"||"),a(" info"),n("span",{class:"token punctuation"},"["),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},"."),n("span",{class:"token generic-function"},[n("span",{class:"token function"},"As"),n("span",{class:"token generic class-name"},[n("span",{class:"token operator"},"<"),a("Napi"),n("span",{class:"token double-colon punctuation"},"::"),a("TypedArray"),n("span",{class:"token operator"},">")])]),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"TypedArrayType"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token operator"},"!="),a(" napi_uint16_array"),n("span",{class:"token punctuation"},")"),a(`
    `),n("span",{class:"token punctuation"},"{"),a(`
        Napi`),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token class-name"},"TypeError"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token function"},"New"),n("span",{class:"token punctuation"},"("),a("env"),n("span",{class:"token punctuation"},","),a(),n("span",{class:"token string"},'"expect arg0 is uint16_array."'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"ThrowAsJavaScriptException"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
        `),n("span",{class:"token keyword"},"return"),a(" Napi"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token class-name"},"Boolean"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token function"},"New"),n("span",{class:"token punctuation"},"("),a("env"),n("span",{class:"token punctuation"},","),a(),n("span",{class:"token boolean"},"false"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
    `),n("span",{class:"token punctuation"},"}"),a(`

    Napi`),n("span",{class:"token double-colon punctuation"},"::"),a("TypedArray typedArray "),n("span",{class:"token operator"},"="),a(" info"),n("span",{class:"token punctuation"},"["),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},"."),n("span",{class:"token generic-function"},[n("span",{class:"token function"},"As"),n("span",{class:"token generic class-name"},[n("span",{class:"token operator"},"<"),a("Napi"),n("span",{class:"token double-colon punctuation"},"::"),a("TypedArray"),n("span",{class:"token operator"},">")])]),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
    Napi`),n("span",{class:"token double-colon punctuation"},"::"),a("Uint16Array uint16Array "),n("span",{class:"token operator"},"="),a(" typedArray"),n("span",{class:"token punctuation"},"."),n("span",{class:"token generic-function"},[n("span",{class:"token function"},"As"),n("span",{class:"token generic class-name"},[n("span",{class:"token operator"},"<"),a("Napi"),n("span",{class:"token double-colon punctuation"},"::"),a("Uint16Array"),n("span",{class:"token operator"},">")])]),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`

    `),n("span",{class:"token comment"},"// process"),a(`
    `),n("span",{class:"token function"},"processUint16Array"),n("span",{class:"token punctuation"},"("),a("uint16Array"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`

    `),n("span",{class:"token keyword"},"return"),a(" Napi"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token class-name"},"Boolean"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token function"},"New"),n("span",{class:"token punctuation"},"("),a("env"),n("span",{class:"token punctuation"},","),a(),n("span",{class:"token boolean"},"true"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
`),n("span",{class:"token punctuation"},"}"),a(`

Napi`),n("span",{class:"token double-colon punctuation"},"::"),a("Object "),n("span",{class:"token function"},"InitAll"),n("span",{class:"token punctuation"},"("),a("Napi"),n("span",{class:"token double-colon punctuation"},"::"),a("Env env"),n("span",{class:"token punctuation"},","),a(" Napi"),n("span",{class:"token double-colon punctuation"},"::"),a("Object exports"),n("span",{class:"token punctuation"},")"),a(`
`),n("span",{class:"token punctuation"},"{"),a(`
    exports`),n("span",{class:"token punctuation"},"["),n("span",{class:"token string"},'"readTypedArray"'),n("span",{class:"token punctuation"},"]"),a(),n("span",{class:"token operator"},"="),a(" Napi"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token class-name"},"Function"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token function"},"New"),n("span",{class:"token punctuation"},"("),a("env"),n("span",{class:"token punctuation"},","),a(" readTypedArray"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
    `),n("span",{class:"token keyword"},"return"),a(" exports"),n("span",{class:"token punctuation"},";"),a(`
`),n("span",{class:"token punctuation"},"}"),a(`

`),n("span",{class:"token function"},"NODE_API_MODULE"),n("span",{class:"token punctuation"},"("),a("NODE_GYP_MODULE_NAME"),n("span",{class:"token punctuation"},","),a(" InitAll"),n("span",{class:"token punctuation"},")"),a(`
`)])],-1),Mn=n("pre",null,[n("code",{class:"language-cpp"},[a("#"),n("span",{class:"token operator"},"!"),a(` node
var addon `),n("span",{class:"token operator"},"="),a(),n("span",{class:"token function"},"require"),n("span",{class:"token punctuation"},"("),n("span",{class:"token char"},"'bindings'"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"("),n("span",{class:"token char"},"'hello_world'"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`

let readTypedArray `),n("span",{class:"token operator"},"="),a(" addon"),n("span",{class:"token punctuation"},"."),a(`readTypedArray


let typedArray `),n("span",{class:"token operator"},"="),a(),n("span",{class:"token keyword"},"new"),a(),n("span",{class:"token function"},"Uint16Array"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"10"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`

typedArray`),n("span",{class:"token punctuation"},"["),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},"]"),a(),n("span",{class:"token operator"},"="),a(),n("span",{class:"token number"},"1"),a(`
typedArray`),n("span",{class:"token punctuation"},"["),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},"]"),a(),n("span",{class:"token operator"},"="),a(),n("span",{class:"token number"},"2"),a(`
typedArray`),n("span",{class:"token punctuation"},"["),n("span",{class:"token number"},"2"),n("span",{class:"token punctuation"},"]"),a(),n("span",{class:"token operator"},"="),a(),n("span",{class:"token number"},"3"),a(`

console`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"log"),n("span",{class:"token punctuation"},"("),n("span",{class:"token function"},"readTypedArray"),n("span",{class:"token punctuation"},"("),a("typedArray"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),a(`
`),n("span",{class:"token comment"},`/**
    1,2,3,0,0,0,0,0,0,0,
    vector:1,2,3,0,0,0,0,0,0,0,
    true
 */`),a(` 
`)])],-1),Cn=p('<h2 id="reference" tabindex="-1"><a class="header-anchor" href="#reference"><span>Reference</span></a></h2><ul><li>保存对 <code>Napi::Value</code> 对象的计数引用；</li><li>除非另有说明，否则最初是弱引用，可以通过调整引用计数将其更改为强引用。</li><li>当引用计数为零时，引用的“Napi::Value”不会立即销毁； 如果没有其他对“Napi::Value”的引用，那么它才有资格进行垃圾收集。</li><li>在静态空间中分配的“Napi::Reference”对象（例如全局静态实例）必须调用“SuppressDestruct”方法，以防止在程序关闭时运行的析构函数在环境不再有效时尝试重置引用。如果可能的话，避免使用这个。</li></ul><h3 id="functionreference" tabindex="-1"><a class="header-anchor" href="#functionreference"><span>FunctionReference</span></a></h3><ul><li><code>Napi::FunctionReference</code> 是 <code>Napi::Reference</code> 的子类，并且相当于 <code>Napi::Reference&lt;Napi::Function&gt;</code> 的实例。</li><li>这意味着<code>Napi::FunctionReference</code> 包含一个 <code>Napi::Function</code> 和一个对“Napi::Function”的引用次数的计数。</li><li>当计数为大于 0，<code>Napi::FunctionReference</code> 不符合垃圾回收条件。</li><li>这确保了“Function”仍然可以访问，即使原始的不再提供对其的引用。</li><li><code>Napi::FunctionReference</code> 允许引用的 JavaScript 函数对象使用两种不同的方法从本机附加组件调用：“Call”和“MakeCallback”。</li><li><code>Napi::FunctionReference</code> 类继承了 <code>Napi::Reference</code> 的行为</li></ul><h4 id="案例-function-reference" tabindex="-1"><a class="header-anchor" href="#案例-function-reference"><span>案例：function_reference</span></a></h4>',5),Dn=n("code",null,"src/addon.cc",-1),Fn=n("code",null,"index.js",-1),In=n("pre",null,[n("code",{class:"language-cpp"},[n("span",{class:"token macro property"},[n("span",{class:"token directive-hash"},"#"),n("span",{class:"token directive keyword"},"include"),a(),n("span",{class:"token string"},"<napi.h>")]),a(`
`),n("span",{class:"token macro property"},[n("span",{class:"token directive-hash"},"#"),n("span",{class:"token directive keyword"},"include"),a(),n("span",{class:"token string"},"<iostream>")]),a(`

`),n("span",{class:"token keyword"},"class"),a(),n("span",{class:"token class-name"},"Demo"),a(),n("span",{class:"token operator"},":"),a(),n("span",{class:"token base-clause"},[n("span",{class:"token keyword"},"public"),a(" Napi"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token class-name"},"ObjectWrap"),n("span",{class:"token operator"},"<"),n("span",{class:"token class-name"},"Demo"),n("span",{class:"token operator"},">")]),a(`
`),n("span",{class:"token punctuation"},"{"),a(`
`),n("span",{class:"token keyword"},"public"),n("span",{class:"token operator"},":"),a(`
    Napi`),n("span",{class:"token double-colon punctuation"},"::"),a("Function fun"),n("span",{class:"token punctuation"},";"),a(`
    Napi`),n("span",{class:"token double-colon punctuation"},"::"),a("FunctionReference funRef"),n("span",{class:"token punctuation"},";"),a(`
    `),n("span",{class:"token function"},"Demo"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"const"),a(" Napi"),n("span",{class:"token double-colon punctuation"},"::"),a("CallbackInfo "),n("span",{class:"token operator"},"&"),a("info"),n("span",{class:"token punctuation"},")"),a(`
        `),n("span",{class:"token operator"},":"),a(),n("span",{class:"token function"},"ObjectWrap"),n("span",{class:"token punctuation"},"("),a("info"),n("span",{class:"token punctuation"},")"),a(`
    `),n("span",{class:"token punctuation"},"{"),a(`
    `),n("span",{class:"token punctuation"},"}"),a(`
    `),n("span",{class:"token keyword"},"void"),a(),n("span",{class:"token function"},"setFun"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"const"),a(" Napi"),n("span",{class:"token double-colon punctuation"},"::"),a("CallbackInfo "),n("span",{class:"token operator"},"&"),a("info"),n("span",{class:"token punctuation"},")"),a(`
    `),n("span",{class:"token punctuation"},"{"),a(`
        fun `),n("span",{class:"token operator"},"="),a(" info"),n("span",{class:"token punctuation"},"["),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},"."),n("span",{class:"token generic-function"},[n("span",{class:"token function"},"As"),n("span",{class:"token generic class-name"},[n("span",{class:"token operator"},"<"),a("Napi"),n("span",{class:"token double-colon punctuation"},"::"),a("Function"),n("span",{class:"token operator"},">")])]),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
        funRef `),n("span",{class:"token operator"},"="),a(),n("span",{class:"token class-name"},"Napi"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token function"},"Persistent"),n("span",{class:"token punctuation"},"("),a("fun"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
    `),n("span",{class:"token punctuation"},"}"),a(`
    `),n("span",{class:"token keyword"},"void"),a(),n("span",{class:"token function"},"callFun"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"const"),a(" Napi"),n("span",{class:"token double-colon punctuation"},"::"),a("CallbackInfo "),n("span",{class:"token operator"},"&"),a("info"),n("span",{class:"token punctuation"},")"),a(`
    `),n("span",{class:"token punctuation"},"{"),a(`
        fun`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"Call"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"{"),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
    `),n("span",{class:"token punctuation"},"}"),a(`
    `),n("span",{class:"token keyword"},"void"),a(),n("span",{class:"token function"},"callFunRef"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"const"),a(" Napi"),n("span",{class:"token double-colon punctuation"},"::"),a("CallbackInfo "),n("span",{class:"token operator"},"&"),a("info"),n("span",{class:"token punctuation"},")"),a(`
    `),n("span",{class:"token punctuation"},"{"),a(`
        funRef`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"Call"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"{"),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
    `),n("span",{class:"token punctuation"},"}"),a(`
    `),n("span",{class:"token keyword"},"static"),a(" Napi"),n("span",{class:"token double-colon punctuation"},"::"),a("FunctionReference constructor"),n("span",{class:"token punctuation"},";"),a(`
    `),n("span",{class:"token keyword"},"static"),a(" Napi"),n("span",{class:"token double-colon punctuation"},"::"),a("Object "),n("span",{class:"token function"},"Init"),n("span",{class:"token punctuation"},"("),a("Napi"),n("span",{class:"token double-colon punctuation"},"::"),a("Env env"),n("span",{class:"token punctuation"},","),a(" Napi"),n("span",{class:"token double-colon punctuation"},"::"),a("Object exports"),n("span",{class:"token punctuation"},")"),a(`
    `),n("span",{class:"token punctuation"},"{"),a(`
        Napi`),n("span",{class:"token double-colon punctuation"},"::"),a("Function fun "),n("span",{class:"token operator"},"="),a(),n("span",{class:"token function"},"DefineClass"),n("span",{class:"token punctuation"},"("),a(`
            env`),n("span",{class:"token punctuation"},","),a(`
            `),n("span",{class:"token string"},'"Demo"'),n("span",{class:"token punctuation"},","),a(`
            `),n("span",{class:"token punctuation"},"{"),a(`
                `),n("span",{class:"token function"},"InstanceMethod"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"setFun"'),n("span",{class:"token punctuation"},","),a(),n("span",{class:"token operator"},"&"),a("Demo"),n("span",{class:"token double-colon punctuation"},"::"),a("setFun"),n("span",{class:"token punctuation"},","),a(" napi_default_method"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),a(`
                `),n("span",{class:"token function"},"InstanceMethod"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"callFun"'),n("span",{class:"token punctuation"},","),a(),n("span",{class:"token operator"},"&"),a("Demo"),n("span",{class:"token double-colon punctuation"},"::"),a("callFun"),n("span",{class:"token punctuation"},","),a(" napi_default_method"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),a(`
                `),n("span",{class:"token function"},"InstanceMethod"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"callFunRef"'),n("span",{class:"token punctuation"},","),a(),n("span",{class:"token operator"},"&"),a("Demo"),n("span",{class:"token double-colon punctuation"},"::"),a("callFunRef"),n("span",{class:"token punctuation"},","),a(" napi_default_method"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),a(`
            `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`

        constructor `),n("span",{class:"token operator"},"="),a(),n("span",{class:"token class-name"},"Napi"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token function"},"Persistent"),n("span",{class:"token punctuation"},"("),a("fun"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
        constructor`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"SuppressDestruct"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`

        exports`),n("span",{class:"token punctuation"},"["),n("span",{class:"token string"},'"Demo"'),n("span",{class:"token punctuation"},"]"),a(),n("span",{class:"token operator"},"="),a(" fun"),n("span",{class:"token punctuation"},";"),a(`

        `),n("span",{class:"token keyword"},"return"),a(" exports"),n("span",{class:"token punctuation"},";"),a(`
    `),n("span",{class:"token punctuation"},"}"),a(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},";"),a(`
Napi`),n("span",{class:"token double-colon punctuation"},"::"),a("FunctionReference Demo"),n("span",{class:"token double-colon punctuation"},"::"),a("constructor"),n("span",{class:"token punctuation"},";"),a(`

Napi`),n("span",{class:"token double-colon punctuation"},"::"),a("Object "),n("span",{class:"token function"},"Init"),n("span",{class:"token punctuation"},"("),a("Napi"),n("span",{class:"token double-colon punctuation"},"::"),a("Env env"),n("span",{class:"token punctuation"},","),a(" Napi"),n("span",{class:"token double-colon punctuation"},"::"),a("Object exports"),n("span",{class:"token punctuation"},")"),a(`
`),n("span",{class:"token punctuation"},"{"),a(`
    `),n("span",{class:"token class-name"},"Demo"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token function"},"Init"),n("span",{class:"token punctuation"},"("),a("env"),n("span",{class:"token punctuation"},","),a(" exports"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
    `),n("span",{class:"token keyword"},"return"),a(" exports"),n("span",{class:"token punctuation"},";"),a(`
`),n("span",{class:"token punctuation"},"}"),a(`

`),n("span",{class:"token function"},"NODE_API_MODULE"),n("span",{class:"token punctuation"},"("),a("NODE_GYP_MODULE_NAME"),n("span",{class:"token punctuation"},","),a(" Init"),n("span",{class:"token punctuation"},")"),a(`
`)])],-1),Sn=n("pre",null,[n("code",{class:"language-cpp"},[a("#"),n("span",{class:"token operator"},"!"),a(` node
var `),n("span",{class:"token punctuation"},"{"),a(" Demo "),n("span",{class:"token punctuation"},"}"),a(),n("span",{class:"token operator"},"="),a(),n("span",{class:"token function"},"require"),n("span",{class:"token punctuation"},"("),n("span",{class:"token char"},"'bindings'"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"("),n("span",{class:"token char"},"'hello_world'"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`


async function `),n("span",{class:"token function"},"main"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token punctuation"},"{"),a(`
    let demo `),n("span",{class:"token operator"},"="),a(),n("span",{class:"token keyword"},"new"),a(),n("span",{class:"token function"},"Demo"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`

    let fun `),n("span",{class:"token operator"},"="),a(),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token operator"},"="),n("span",{class:"token operator"},">"),a(" console"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"log"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"hello world"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`

    demo`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"setFun"),n("span",{class:"token punctuation"},"("),a("fun"),n("span",{class:"token punctuation"},")"),a(`

    demo`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"callFunRef"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token comment"},"//  hello world"),a(`

    `),n("span",{class:"token keyword"},"try"),a(),n("span",{class:"token punctuation"},"{"),a(`
        demo`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"callFun"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token comment"},"// error"),a(`
    `),n("span",{class:"token punctuation"},"}"),a(),n("span",{class:"token keyword"},"catch"),a(),n("span",{class:"token punctuation"},"("),a("error"),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token punctuation"},"{"),a(`
        console`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"log"),n("span",{class:"token punctuation"},"("),a("error"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
    `),n("span",{class:"token punctuation"},"}"),a(`
`),n("span",{class:"token punctuation"},"}"),a(`

`),n("span",{class:"token function"},"main"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`

`)])],-1),qn=p('<h2 id="asyncworker" tabindex="-1"><a class="header-anchor" href="#asyncworker"><span>AsyncWorker</span></a></h2><p><code>Napi::AsyncWorker</code> 是 <code>node-addon-api</code> 提供的一个用于处理异步任务的抽象类。以下是关于它的详细说明：</p><h3 id="作用" tabindex="-1"><a class="header-anchor" href="#作用"><span>作用</span></a></h3><p><code>Napi::AsyncWorker</code> 旨在帮助开发者执行以下操作：</p><ul><li><strong>执行异步操作</strong>：处理那些不应该在 Node.js 主线程上执行的耗时或计算密集型任务。</li><li><strong>线程间数据传递</strong>：在工作线程和主线程之间安全地移动数据。</li><li><strong>线程间通信</strong>：允许工作线程通过回调与主线程上的 JavaScript 代码交互。</li></ul><h3 id="使用场景" tabindex="-1"><a class="header-anchor" href="#使用场景"><span>使用场景</span></a></h3><p>典型的使用场景包括：</p><ul><li>执行长时间运行的任务，如文件 I/O、网络请求或数据库操作。</li><li>执行 CPU 密集型计算，以避免阻塞主线程的事件循环。</li></ul><h3 id="queue-方法" tabindex="-1"><a class="header-anchor" href="#queue-方法"><span><code>Queue</code> 方法</span></a></h3><p>通过调用 <code>Napi::AsyncWorker</code> 实例的 <code>Queue</code> 方法，你可以将异步工作项添加到工作队列中。libuv 的工作线程池将异步地执行这些工作项。</p><h3 id="execute-和-onok-的重写" tabindex="-1"><a class="header-anchor" href="#execute-和-onok-的重写"><span><code>Execute</code> 和 <code>OnOK</code> 的重写</span></a></h3><p>在子类中，你需要重写以下方法：</p><ul><li><strong><code>Execute()</code></strong>：在工作线程上执行实际的异步任务。不应在此方法中直接调用 JavaScript 函数或 Node.js 的 C++ API，因为这可能导致线程安全问题。</li><li><strong><code>OnOK()</code></strong>：如果 <code>Execute</code> 成功完成，该方法将被调用。它用于处理执行结果，并通常在主线程上执行，以便与 JavaScript 代码交互。</li></ul><h3 id="线程执行环境" tabindex="-1"><a class="header-anchor" href="#线程执行环境"><span>线程执行环境</span></a></h3><ul><li><code>Execute()</code> 在 libuv 工作线程池中的一个线程上执行。</li><li><code>OnOK()</code> 和其他回调方法（如 <code>OnError()</code>）在 Node.js 的主线程上执行。</li></ul><p><strong>为什么不能在 <code>Execute</code> 中直接调用 JavaScript 函数</strong></p><p>在 <code>Execute()</code> 中直接调用 JavaScript 函数是不安全的，因为：</p><ul><li><strong>线程安全</strong>：Node.js 和其 V8 引擎主要设计为单线程执行，直接在工作线程上调用 JavaScript 函数可能导致线程安全问题。</li><li><strong>事件循环阻塞</strong>：这可能导致 Node.js 的事件循环被阻塞，影响应用的响应性。</li></ul><h3 id="如何安全调用-javascript-函数" tabindex="-1"><a class="header-anchor" href="#如何安全调用-javascript-函数"><span>如何安全调用 JavaScript 函数</span></a></h3><p>为了安全地从工作线程调用 JavaScript 函数，可以使用 <code>Napi::ThreadSafeFunction</code>：</p><ol><li>通过 <code>BlockingCall</code> 或 <code>NonBlockingCall</code> 方法在工作线程中安排回调。</li><li>这些方法将请求排队，由主线程上的事件循环异步处理。</li></ol><h3 id="工作线程池" tabindex="-1"><a class="header-anchor" href="#工作线程池"><span>工作线程池</span></a></h3><p>Node.js 使用 libuv 库，后者维护了一个工作线程池来执行异步任务。线程池的大小可以通过设置环境变量（如 <code>UV_THREADPOOL_SIZE</code>）来控制。</p><h3 id="为什么-execute-方法不会互相阻塞" tabindex="-1"><a class="header-anchor" href="#为什么-execute-方法不会互相阻塞"><span>为什么 <code>Execute</code> 方法不会互相阻塞</span></a></h3><ul><li><strong>独立执行</strong>：每个 <code>Execute()</code> 调用在独立的工作线程上运行，因此不会直接影响其他 <code>Execute()</code> 调用的执行。</li><li><strong>异步处理</strong>：尽管 <code>BlockingCall</code> 在工作线程上同步执行 Lambda 表达式，但它内部安排的 JavaScript 回调是异步执行的，由事件循环管理，因此不会阻塞工作线程。</li></ul><p>通过这种方式，<code>Napi::AsyncWorker</code> 允许开发者利用多线程来提高性能，同时确保与 Node.js 的异步事件驱动模型兼容。</p><h3 id="案例-my-async-worker" tabindex="-1"><a class="header-anchor" href="#案例-my-async-worker"><span>案例：my_async_worker</span></a></h3>',27),Tn=n("code",null,"index.js",-1),Vn=n("code",null,"src/MyAsyncWorker.cc",-1),Pn=n("code",null,"src/MyAsyncWorker.hh",-1),Wn=n("code",null,"src/addon.cc",-1),zn=n("code",null,"binding.gyp",-1),Ln=n("pre",null,[n("code",{class:"language-js"},[n("span",{class:"token hashbang comment"},"#! node"),a(`
`),n("span",{class:"token keyword"},"var"),a(" addon "),n("span",{class:"token operator"},"="),a(),n("span",{class:"token function"},"require"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'bindings'"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'hello_world'"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`

`),n("span",{class:"token keyword"},"async"),a(),n("span",{class:"token keyword"},"function"),a(),n("span",{class:"token function"},"main"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token punctuation"},"{"),a(`

    addon`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"StartAsyncWorker"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"function"),a(),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token punctuation"},"{"),a(`
        console`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"log"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'callback:done1'"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
    `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},","),a(),n("span",{class:"token string"},'"data1"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`

    addon`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"StartAsyncWorker"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"function"),a(),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token punctuation"},"{"),a(`
        console`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"log"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'callback:done2'"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
    `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},","),a(),n("span",{class:"token string"},'"data2"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`

`),n("span",{class:"token punctuation"},"}"),a(`

`),n("span",{class:"token function"},"main"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`

`),n("span",{class:"token doc-comment comment"},`/**
$ node ./index.js
StartWorker
StartWorker
Execute
Execute
0:data1
0:data2
1:data1
1:data2
2:data1
2:data2
3:data1
OnOK
3:data2
callback:done1
Destroy
OnOK
callback:done2
 */`),a(`
`)])],-1),Rn=n("pre",null,[n("code",{class:"language-cpp"},[n("span",{class:"token macro property"},[n("span",{class:"token directive-hash"},"#"),n("span",{class:"token directive keyword"},"include"),a(),n("span",{class:"token string"},'"MyAsyncWorker.hh"')]),a(`

`),n("span",{class:"token macro property"},[n("span",{class:"token directive-hash"},"#"),n("span",{class:"token directive keyword"},"include"),a(),n("span",{class:"token string"},"<iostream>")]),a(`
`),n("span",{class:"token macro property"},[n("span",{class:"token directive-hash"},"#"),n("span",{class:"token directive keyword"},"include"),a(),n("span",{class:"token string"},"<thread>")]),a(`

`),n("span",{class:"token class-name"},"MyAsyncWorker"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token function"},"MyAsyncWorker"),n("span",{class:"token punctuation"},"("),a("Napi"),n("span",{class:"token double-colon punctuation"},"::"),a("Function "),n("span",{class:"token operator"},"&"),a("callback"),n("span",{class:"token punctuation"},","),a(" std"),n("span",{class:"token double-colon punctuation"},"::"),a("string "),n("span",{class:"token operator"},"&"),a("data"),n("span",{class:"token punctuation"},")"),a(`
    `),n("span",{class:"token operator"},":"),a(),n("span",{class:"token function"},"AsyncWorker"),n("span",{class:"token punctuation"},"("),a("callback"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),a(),n("span",{class:"token function"},"data"),n("span",{class:"token punctuation"},"("),a("data"),n("span",{class:"token punctuation"},")"),a(`
`),n("span",{class:"token punctuation"},"{"),a(`
`),n("span",{class:"token punctuation"},"}"),a(`
`),n("span",{class:"token keyword"},"void"),a(),n("span",{class:"token class-name"},"MyAsyncWorker"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token function"},"Execute"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),a(`
`),n("span",{class:"token comment"},`/**
 * Execute 不在事件循环线程上运行，
 * 因此必须避免调用任何可能调用 JavaScript 的 node-addon-api 方法。
 */`),a(`
`),n("span",{class:"token punctuation"},"{"),a(`
    std`),n("span",{class:"token double-colon punctuation"},"::"),a("cout "),n("span",{class:"token operator"},"<<"),a(),n("span",{class:"token string"},'"Execute"'),a(),n("span",{class:"token operator"},"<<"),a(" std"),n("span",{class:"token double-colon punctuation"},"::"),a("endl"),n("span",{class:"token punctuation"},";"),a(`
    `),n("span",{class:"token keyword"},"if"),a(),n("span",{class:"token punctuation"},"("),a("data"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"length"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token operator"},"=="),a(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},")"),a(`
    `),n("span",{class:"token punctuation"},"{"),a(`
        `),n("span",{class:"token function"},"OnError"),n("span",{class:"token punctuation"},"("),a("Napi"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token class-name"},"Error"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token function"},"New"),n("span",{class:"token punctuation"},"("),n("span",{class:"token function"},"Env"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),a(),n("span",{class:"token string"},'"fall to get data"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
        `),n("span",{class:"token keyword"},"return"),n("span",{class:"token punctuation"},";"),a(`
    `),n("span",{class:"token punctuation"},"}"),a(`
    `),n("span",{class:"token comment"},"// 模拟处理数据的耗时操作"),a(`
    `),n("span",{class:"token keyword"},"for"),a(),n("span",{class:"token punctuation"},"("),a("size_t i "),n("span",{class:"token operator"},"="),a(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},";"),a(" i "),n("span",{class:"token operator"},"<="),a(),n("span",{class:"token number"},"3"),n("span",{class:"token punctuation"},";"),a(" i"),n("span",{class:"token operator"},"++"),n("span",{class:"token punctuation"},")"),a(`
    `),n("span",{class:"token punctuation"},"{"),a(`
        std`),n("span",{class:"token double-colon punctuation"},"::"),a("this_thread"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token function"},"sleep_for"),n("span",{class:"token punctuation"},"("),a("std"),n("span",{class:"token double-colon punctuation"},"::"),a("chrono"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token function"},"seconds"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
        std`),n("span",{class:"token double-colon punctuation"},"::"),a("cout "),n("span",{class:"token operator"},"<<"),a(" std"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token function"},"to_string"),n("span",{class:"token punctuation"},"("),a("i"),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token operator"},"<<"),a(),n("span",{class:"token string"},'":"'),a(),n("span",{class:"token operator"},"<<"),a(" data "),n("span",{class:"token operator"},"<<"),a(" std"),n("span",{class:"token double-colon punctuation"},"::"),a("endl"),n("span",{class:"token punctuation"},";"),a(`
    `),n("span",{class:"token punctuation"},"}"),a(`
`),n("span",{class:"token punctuation"},"}"),a(`
`),n("span",{class:"token keyword"},"void"),a(),n("span",{class:"token class-name"},"MyAsyncWorker"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token function"},"OnOK"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),a(`
`),n("span",{class:"token comment"},`/**
 * 在 Execute 方法完成后被调用，并且它们在主线程上运行。
 * 这意味着任何通过 node-addon-api 与 JavaScript 的交互（例如，调用 JavaScript 回调）都应该在这些方法中执行。
 */`),a(`
`),n("span",{class:"token punctuation"},"{"),a(`
    std`),n("span",{class:"token double-colon punctuation"},"::"),a("cout "),n("span",{class:"token operator"},"<<"),a(),n("span",{class:"token string"},'"OnOK"'),a(),n("span",{class:"token operator"},"<<"),a(" std"),n("span",{class:"token double-colon punctuation"},"::"),a("endl"),n("span",{class:"token punctuation"},";"),a(`
    Napi`),n("span",{class:"token double-colon punctuation"},"::"),a("Env env "),n("span",{class:"token operator"},"="),a(),n("span",{class:"token function"},"Env"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
    Napi`),n("span",{class:"token double-colon punctuation"},"::"),a("HandleScope "),n("span",{class:"token function"},"scope"),n("span",{class:"token punctuation"},"("),a("env"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
    Napi`),n("span",{class:"token double-colon punctuation"},"::"),a("FunctionReference "),n("span",{class:"token operator"},"&"),a("callback "),n("span",{class:"token operator"},"="),a(),n("span",{class:"token function"},"Callback"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
    `),n("span",{class:"token comment"},"// 执行完毕后调用回调函数"),a(`
    callback`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"Call"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"{"),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
`),n("span",{class:"token punctuation"},"}"),a(`
`),n("span",{class:"token keyword"},"void"),a(),n("span",{class:"token class-name"},"MyAsyncWorker"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token function"},"OnError"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"const"),a(" Napi"),n("span",{class:"token double-colon punctuation"},"::"),a("Error "),n("span",{class:"token operator"},"&"),a("e"),n("span",{class:"token punctuation"},")"),a(`
`),n("span",{class:"token punctuation"},"{"),a(`
    std`),n("span",{class:"token double-colon punctuation"},"::"),a("cout "),n("span",{class:"token operator"},"<<"),a(),n("span",{class:"token string"},'"OnError"'),a(),n("span",{class:"token operator"},"<<"),a(" std"),n("span",{class:"token double-colon punctuation"},"::"),a("endl"),n("span",{class:"token punctuation"},";"),a(`
`),n("span",{class:"token punctuation"},"}"),a(`
`),n("span",{class:"token keyword"},"void"),a(),n("span",{class:"token class-name"},"MyAsyncWorker"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token function"},"Destroy"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),a(`
`),n("span",{class:"token punctuation"},"{"),a(`
    std`),n("span",{class:"token double-colon punctuation"},"::"),a("cout "),n("span",{class:"token operator"},"<<"),a(),n("span",{class:"token string"},'"Destroy"'),a(),n("span",{class:"token operator"},"<<"),a(" std"),n("span",{class:"token double-colon punctuation"},"::"),a("endl"),n("span",{class:"token punctuation"},";"),a(`
`),n("span",{class:"token punctuation"},"}"),a(`
std`),n("span",{class:"token double-colon punctuation"},"::"),a("vector"),n("span",{class:"token operator"},"<"),a("napi_value"),n("span",{class:"token operator"},">"),a(),n("span",{class:"token class-name"},"MyAsyncWorker"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token function"},"GetResult"),n("span",{class:"token punctuation"},"("),a("Napi"),n("span",{class:"token double-colon punctuation"},"::"),a("Env env"),n("span",{class:"token punctuation"},")"),a(`
`),n("span",{class:"token punctuation"},"{"),a(`
    std`),n("span",{class:"token double-colon punctuation"},"::"),a("cout "),n("span",{class:"token operator"},"<<"),a(),n("span",{class:"token string"},'"GetResult"'),a(),n("span",{class:"token operator"},"<<"),a(" std"),n("span",{class:"token double-colon punctuation"},"::"),a("endl"),n("span",{class:"token punctuation"},";"),a(`
    `),n("span",{class:"token keyword"},"return"),a(),n("span",{class:"token punctuation"},"{"),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},";"),a(`
`),n("span",{class:"token punctuation"},"}"),a(`
`)])],-1),Jn=n("pre",null,[n("code",{class:"language-cpp"},[n("span",{class:"token macro property"},[n("span",{class:"token directive-hash"},"#"),n("span",{class:"token directive keyword"},"ifndef"),a(),n("span",{class:"token expression"},"__MyAsyncWorker__")]),a(`
`),n("span",{class:"token macro property"},[n("span",{class:"token directive-hash"},"#"),n("span",{class:"token directive keyword"},"define"),a(),n("span",{class:"token macro-name"},"__MyAsyncWorker__")]),a(`
`),n("span",{class:"token macro property"},[n("span",{class:"token directive-hash"},"#"),n("span",{class:"token directive keyword"},"include"),a(),n("span",{class:"token string"},"<napi.h>")]),a(`

`),n("span",{class:"token keyword"},"class"),a(),n("span",{class:"token class-name"},"MyAsyncWorker"),a(),n("span",{class:"token operator"},":"),a(),n("span",{class:"token base-clause"},[n("span",{class:"token keyword"},"public"),a(" Napi"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token class-name"},"AsyncWorker")]),a(`
`),n("span",{class:"token punctuation"},"{"),a(`
`),n("span",{class:"token keyword"},"private"),n("span",{class:"token operator"},":"),a(`
    std`),n("span",{class:"token double-colon punctuation"},"::"),a("string data"),n("span",{class:"token punctuation"},";"),a(`

`),n("span",{class:"token keyword"},"public"),n("span",{class:"token operator"},":"),a(`
    `),n("span",{class:"token function"},"MyAsyncWorker"),n("span",{class:"token punctuation"},"("),a("Napi"),n("span",{class:"token double-colon punctuation"},"::"),a("Function "),n("span",{class:"token operator"},"&"),a("callback"),n("span",{class:"token punctuation"},","),a(" std"),n("span",{class:"token double-colon punctuation"},"::"),a("string "),n("span",{class:"token operator"},"&"),a("data"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
    `),n("span",{class:"token keyword"},"void"),a(),n("span",{class:"token function"},"Execute"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token keyword"},"override"),n("span",{class:"token punctuation"},";"),a(`
    `),n("span",{class:"token keyword"},"void"),a(),n("span",{class:"token function"},"OnOK"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token keyword"},"override"),n("span",{class:"token punctuation"},";"),a(`
    `),n("span",{class:"token keyword"},"void"),a(),n("span",{class:"token function"},"OnError"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"const"),a(" Napi"),n("span",{class:"token double-colon punctuation"},"::"),a("Error "),n("span",{class:"token operator"},"&"),a("e"),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token keyword"},"override"),n("span",{class:"token punctuation"},";"),a(`
    `),n("span",{class:"token keyword"},"void"),a(),n("span",{class:"token function"},"Destroy"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token keyword"},"override"),n("span",{class:"token punctuation"},";"),a(`
    std`),n("span",{class:"token double-colon punctuation"},"::"),a("vector"),n("span",{class:"token operator"},"<"),a("napi_value"),n("span",{class:"token operator"},">"),a(),n("span",{class:"token function"},"GetResult"),n("span",{class:"token punctuation"},"("),a("Napi"),n("span",{class:"token double-colon punctuation"},"::"),a("Env env"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},";"),a(`
`),n("span",{class:"token macro property"},[n("span",{class:"token directive-hash"},"#"),n("span",{class:"token directive keyword"},"endif")]),a(`
`)])],-1),Un=n("pre",null,[n("code",{class:"language-cpp"},[n("span",{class:"token macro property"},[n("span",{class:"token directive-hash"},"#"),n("span",{class:"token directive keyword"},"include"),a(),n("span",{class:"token string"},"<napi.h>")]),a(`
`),n("span",{class:"token macro property"},[n("span",{class:"token directive-hash"},"#"),n("span",{class:"token directive keyword"},"include"),a(),n("span",{class:"token string"},'"MyAsyncWorker.hh"')]),a(`
`),n("span",{class:"token macro property"},[n("span",{class:"token directive-hash"},"#"),n("span",{class:"token directive keyword"},"include"),a(),n("span",{class:"token string"},"<iostream>")]),a(`

`),n("span",{class:"token keyword"},"void"),a(),n("span",{class:"token function"},"StartAsyncWorker"),n("span",{class:"token punctuation"},"("),a("Napi"),n("span",{class:"token double-colon punctuation"},"::"),a("CallbackInfo "),n("span",{class:"token operator"},"&"),a("info"),n("span",{class:"token punctuation"},")"),a(`
`),n("span",{class:"token punctuation"},"{"),a(`
    Napi`),n("span",{class:"token double-colon punctuation"},"::"),a("Function callback "),n("span",{class:"token operator"},"="),a(" info"),n("span",{class:"token punctuation"},"["),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},"."),n("span",{class:"token generic-function"},[n("span",{class:"token function"},"As"),n("span",{class:"token generic class-name"},[n("span",{class:"token operator"},"<"),a("Napi"),n("span",{class:"token double-colon punctuation"},"::"),a("Function"),n("span",{class:"token operator"},">")])]),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
    Napi`),n("span",{class:"token double-colon punctuation"},"::"),a("String str "),n("span",{class:"token operator"},"="),a(" info"),n("span",{class:"token punctuation"},"["),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},"."),n("span",{class:"token generic-function"},[n("span",{class:"token function"},"As"),n("span",{class:"token generic class-name"},[n("span",{class:"token operator"},"<"),a("Napi"),n("span",{class:"token double-colon punctuation"},"::"),a("String"),n("span",{class:"token operator"},">")])]),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
    std`),n("span",{class:"token double-colon punctuation"},"::"),a("string u8str "),n("span",{class:"token operator"},"="),a(" str"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"Utf8Value"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`

    MyAsyncWorker `),n("span",{class:"token operator"},"*"),a("myAsyncWorker "),n("span",{class:"token operator"},"="),a(),n("span",{class:"token keyword"},"new"),a(),n("span",{class:"token function"},"MyAsyncWorker"),n("span",{class:"token punctuation"},"("),a("callback"),n("span",{class:"token punctuation"},","),a(" u8str"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`

    `),n("span",{class:"token comment"},`/*
        Queue方法用于将 Napi::AsyncWorker 实例排队等待执行。一旦有可用的工作线程，Execute 方法将被调用。

        工作线程池
            Node.js 使用 libuv 库，它内部维护了一个工作线程池。
            这个线程池负责执行那些不需要事件循环上下文的任务，比如长时间计算或者某些 I/O 操作。
        并发执行
            当多个 Napi::AsyncWorker 实例调用了 Queue 方法，libuv 会根据线程池中线程的可用性来并发地执行这些工作项。如果线程池中有足够的线程，那么这些 Execute 方法可以同时在不同的线程上执行。
    */`),a(`
    myAsyncWorker`),n("span",{class:"token operator"},"->"),n("span",{class:"token function"},"Queue"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`

    std`),n("span",{class:"token double-colon punctuation"},"::"),a("cout "),n("span",{class:"token operator"},"<<"),a(),n("span",{class:"token string"},'"StartWorker"'),a(),n("span",{class:"token operator"},"<<"),a(" std"),n("span",{class:"token double-colon punctuation"},"::"),a("endl"),n("span",{class:"token punctuation"},";"),a(`
`),n("span",{class:"token punctuation"},"}"),a(`

Napi`),n("span",{class:"token double-colon punctuation"},"::"),a("Object "),n("span",{class:"token function"},"Init"),n("span",{class:"token punctuation"},"("),a("Napi"),n("span",{class:"token double-colon punctuation"},"::"),a("Env env"),n("span",{class:"token punctuation"},","),a(" Napi"),n("span",{class:"token double-colon punctuation"},"::"),a("Object exports"),n("span",{class:"token punctuation"},")"),a(`
`),n("span",{class:"token punctuation"},"{"),a(`
    exports`),n("span",{class:"token punctuation"},"["),n("span",{class:"token string"},'"StartAsyncWorker"'),n("span",{class:"token punctuation"},"]"),a(),n("span",{class:"token operator"},"="),a(" Napi"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token class-name"},"Function"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token function"},"New"),n("span",{class:"token punctuation"},"("),a("env"),n("span",{class:"token punctuation"},","),a(" StartAsyncWorker"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
    `),n("span",{class:"token keyword"},"return"),a(" exports"),n("span",{class:"token punctuation"},";"),a(`
`),n("span",{class:"token punctuation"},"}"),a(`

`),n("span",{class:"token function"},"NODE_API_MODULE"),n("span",{class:"token punctuation"},"("),a("NODE_GYP_MODULE_NAME"),n("span",{class:"token punctuation"},","),a(" Init"),n("span",{class:"token punctuation"},")"),a(`
`)])],-1),Gn=n("pre",null,[n("code",{class:"language-gyp"},`{
  "targets": [
    {
      "target_name": "hello_world",
      "sources": [
        "src/addon.cc",
        "src/MyAsyncWorker.cc"
        ],
      "include_dirs": [
        "src/MyAsyncWorker.hh",
        "<!@(node -p \\"require('node-addon-api').include\\")"
      ],
      "dependencies": [
        "<!(node -p \\"require('node-addon-api').targets\\"):node_addon_api"
      ]
    }
  ],
}
`)],-1),Kn=n("h3",{id:"案例-async-worker-call-js-function",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#案例-async-worker-call-js-function"},[n("span",null,"案例：async_worker_call_js_function")])],-1),Yn=n("code",null,"index.js",-1),Hn=n("code",null,"src/MyAsyncWorker.cc",-1),Qn=n("code",null,"src/MyAsyncWorker.hh",-1),Xn=n("code",null,"src/addon.cc",-1),Zn=n("pre",null,[n("code",{class:"language-cpp"},[a("#"),n("span",{class:"token operator"},"!"),a(` node
var addon `),n("span",{class:"token operator"},"="),a(),n("span",{class:"token function"},"require"),n("span",{class:"token punctuation"},"("),n("span",{class:"token char"},"'bindings'"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"("),n("span",{class:"token char"},"'hello_world'"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
let `),n("span",{class:"token punctuation"},"{"),a(" EventEmitter "),n("span",{class:"token punctuation"},"}"),a(),n("span",{class:"token operator"},"="),a(),n("span",{class:"token function"},"require"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"events"'),n("span",{class:"token punctuation"},")"),a(`


`),n("span",{class:"token keyword"},"class"),a(),n("span",{class:"token class-name"},"MySocket"),a(" extends EventEmitter "),n("span",{class:"token punctuation"},"{"),a(`
    `),n("span",{class:"token function"},"constructor"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token punctuation"},"{"),a(`
        `),n("span",{class:"token function"},"super"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),a(`
        addon`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"CreatMyDispatcher"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"this"),n("span",{class:"token punctuation"},"."),a("emit"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"bind"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"this"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
    `),n("span",{class:"token punctuation"},"}"),a(`
`),n("span",{class:"token punctuation"},"}"),a(`


async function `),n("span",{class:"token function"},"main"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token punctuation"},"{"),a(`
    let mySocket `),n("span",{class:"token operator"},"="),a(),n("span",{class:"token keyword"},"new"),a(),n("span",{class:"token function"},"MySocket"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),a(`

    mySocket`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"on"),n("span",{class:"token punctuation"},"("),n("span",{class:"token char"},"'open'"),n("span",{class:"token punctuation"},","),a(),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token operator"},"="),n("span",{class:"token operator"},">"),a(),n("span",{class:"token punctuation"},"{"),a(`
        console`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"log"),n("span",{class:"token punctuation"},"("),n("span",{class:"token char"},"'open'"),n("span",{class:"token punctuation"},")"),a(`
    `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),a(`
    mySocket`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"on"),n("span",{class:"token punctuation"},"("),n("span",{class:"token char"},"'data'"),n("span",{class:"token punctuation"},","),a(),n("span",{class:"token punctuation"},"("),a("data"),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token operator"},"="),n("span",{class:"token operator"},">"),a(),n("span",{class:"token punctuation"},"{"),a(`
        console`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"log"),n("span",{class:"token punctuation"},"("),n("span",{class:"token char"},"'data'"),n("span",{class:"token punctuation"},","),a(" data"),n("span",{class:"token punctuation"},")"),a(`
    `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),a(`
    mySocket`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"on"),n("span",{class:"token punctuation"},"("),n("span",{class:"token char"},"'close'"),n("span",{class:"token punctuation"},","),a(),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token operator"},"="),n("span",{class:"token operator"},">"),a(),n("span",{class:"token punctuation"},"{"),a(`
        console`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"log"),n("span",{class:"token punctuation"},"("),n("span",{class:"token char"},"'close'"),n("span",{class:"token punctuation"},")"),a(`
    `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),a(`
`),n("span",{class:"token punctuation"},"}"),a(`

`),n("span",{class:"token function"},"main"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`

`),n("span",{class:"token comment"},`/**
CreatMyDispatcher
Execute
open
data <Buffer 00 01 02 03 04>
data <Buffer 00 01 02 03 04>
data <Buffer 00 01 02 03 04>
data <Buffer 00 01 02 03 04>
data <Buffer 00 01 02 03 04>
data <Buffer 00 01 02 03 04>
data <Buffer 00 01 02 03 04>
data <Buffer 00 01 02 03 04>
data <Buffer 00 01 02 03 04>
data <Buffer 00 01 02 03 04>
data <Buffer 00 01 02 03 04>
close
OnOK
Destroy
 */`),a(`
`)])],-1),$n=n("pre",null,[n("code",{class:"language-cpp"},[n("span",{class:"token macro property"},[n("span",{class:"token directive-hash"},"#"),n("span",{class:"token directive keyword"},"include"),a(),n("span",{class:"token string"},'"MyDispatcher.hh"')]),a(`

`),n("span",{class:"token macro property"},[n("span",{class:"token directive-hash"},"#"),n("span",{class:"token directive keyword"},"include"),a(),n("span",{class:"token string"},"<iostream>")]),a(`
`),n("span",{class:"token macro property"},[n("span",{class:"token directive-hash"},"#"),n("span",{class:"token directive keyword"},"include"),a(),n("span",{class:"token string"},"<thread>")]),a(`

`),n("span",{class:"token class-name"},"MyDispatcher"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token function"},"MyDispatcher"),n("span",{class:"token punctuation"},"("),a("Napi"),n("span",{class:"token double-colon punctuation"},"::"),a("Env env"),n("span",{class:"token punctuation"},","),a(" Napi"),n("span",{class:"token double-colon punctuation"},"::"),a("Function "),n("span",{class:"token operator"},"&"),a("jsEmitFun"),n("span",{class:"token punctuation"},")"),a(`
    `),n("span",{class:"token operator"},":"),a(),n("span",{class:"token function"},"AsyncWorker"),n("span",{class:"token punctuation"},"("),a("env"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),a(`
      `),n("span",{class:"token function"},"jsEmitFun"),n("span",{class:"token punctuation"},"("),a("jsEmitFun"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),a(`
      tsEmitFun`),n("span",{class:"token punctuation"},"{"),a("Napi"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token class-name"},"ThreadSafeFunction"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token function"},"New"),n("span",{class:"token punctuation"},"("),a("env"),n("span",{class:"token punctuation"},","),a(" jsEmitFun"),n("span",{class:"token punctuation"},","),a(),n("span",{class:"token string"},'"tsEmitFun"'),n("span",{class:"token punctuation"},","),a(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},","),a(),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"}"),a(`
`),n("span",{class:"token punctuation"},"{"),a(`
`),n("span",{class:"token punctuation"},"}"),a(`
`),n("span",{class:"token keyword"},"void"),a(),n("span",{class:"token class-name"},"MyDispatcher"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token function"},"Execute"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),a(`
`),n("span",{class:"token punctuation"},"{"),a(`
    std`),n("span",{class:"token double-colon punctuation"},"::"),a("cout "),n("span",{class:"token operator"},"<<"),a(),n("span",{class:"token string"},'"Execute"'),a(),n("span",{class:"token operator"},"<<"),a(" std"),n("span",{class:"token double-colon punctuation"},"::"),a("endl"),n("span",{class:"token punctuation"},";"),a(`

    `),n("span",{class:"token comment"},"// 模拟建立连接"),a(`
    std`),n("span",{class:"token double-colon punctuation"},"::"),a("this_thread"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token function"},"sleep_for"),n("span",{class:"token punctuation"},"("),a("std"),n("span",{class:"token double-colon punctuation"},"::"),a("chrono"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token function"},"seconds"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`

    tsEmitFun`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"BlockingCall"),n("span",{class:"token punctuation"},"("),a(`
        `),n("span",{class:"token punctuation"},"["),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},"("),a("Napi"),n("span",{class:"token double-colon punctuation"},"::"),a("Env env"),n("span",{class:"token punctuation"},","),a(" Napi"),n("span",{class:"token double-colon punctuation"},"::"),a("Function jsEmitFun"),n("span",{class:"token punctuation"},")"),a(`
        `),n("span",{class:"token punctuation"},"{"),a(`
            jsEmitFun`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"Call"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"{"),a("Napi"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token class-name"},"String"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token function"},"New"),n("span",{class:"token punctuation"},"("),a("env"),n("span",{class:"token punctuation"},","),a(),n("span",{class:"token string"},'"open"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),a(" env"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"Undefined"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
        `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`

    `),n("span",{class:"token comment"},"// 模拟传输数据"),a(`
    std`),n("span",{class:"token double-colon punctuation"},"::"),a("this_thread"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token function"},"sleep_for"),n("span",{class:"token punctuation"},"("),a("std"),n("span",{class:"token double-colon punctuation"},"::"),a("chrono"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token function"},"seconds"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
    `),n("span",{class:"token keyword"},"for"),a(),n("span",{class:"token punctuation"},"("),a("size_t i "),n("span",{class:"token operator"},"="),a(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},";"),a(" i "),n("span",{class:"token operator"},"<="),a(),n("span",{class:"token number"},"10"),n("span",{class:"token punctuation"},";"),a(" i"),n("span",{class:"token operator"},"++"),n("span",{class:"token punctuation"},")"),a(`
    `),n("span",{class:"token punctuation"},"{"),a(`
        tsEmitFun`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"BlockingCall"),n("span",{class:"token punctuation"},"("),a(`
            `),n("span",{class:"token punctuation"},"["),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},"("),a("Napi"),n("span",{class:"token double-colon punctuation"},"::"),a("Env env"),n("span",{class:"token punctuation"},","),a(" Napi"),n("span",{class:"token double-colon punctuation"},"::"),a("Function jsEmitFun"),n("span",{class:"token punctuation"},")"),a(`
            `),n("span",{class:"token punctuation"},"{"),a(`
                `),n("span",{class:"token keyword"},"uint8_t"),a(" data"),n("span",{class:"token punctuation"},"["),n("span",{class:"token punctuation"},"]"),a(),n("span",{class:"token operator"},"="),a(),n("span",{class:"token punctuation"},"{"),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},","),a(),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},","),a(),n("span",{class:"token number"},"2"),n("span",{class:"token punctuation"},","),a(),n("span",{class:"token number"},"3"),n("span",{class:"token punctuation"},","),a(),n("span",{class:"token number"},"4"),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},";"),a(`
                jsEmitFun`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"Call"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"{"),a("Napi"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token class-name"},"String"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token function"},"New"),n("span",{class:"token punctuation"},"("),a("env"),n("span",{class:"token punctuation"},","),a(),n("span",{class:"token string"},'"data"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),a(" Napi"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token class-name"},"Buffer"),n("span",{class:"token operator"},"<"),n("span",{class:"token keyword"},"uint8_t"),n("span",{class:"token operator"},">"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token function"},"New"),n("span",{class:"token punctuation"},"("),a("env"),n("span",{class:"token punctuation"},","),a(" data"),n("span",{class:"token punctuation"},","),a(),n("span",{class:"token keyword"},"sizeof"),n("span",{class:"token punctuation"},"("),a("data"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
            `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
        std`),n("span",{class:"token double-colon punctuation"},"::"),a("this_thread"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token function"},"sleep_for"),n("span",{class:"token punctuation"},"("),a("std"),n("span",{class:"token double-colon punctuation"},"::"),a("chrono"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token function"},"seconds"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
    `),n("span",{class:"token punctuation"},"}"),a(`

    `),n("span",{class:"token comment"},"// 模拟断开链接"),a(`
    std`),n("span",{class:"token double-colon punctuation"},"::"),a("this_thread"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token function"},"sleep_for"),n("span",{class:"token punctuation"},"("),a("std"),n("span",{class:"token double-colon punctuation"},"::"),a("chrono"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token function"},"seconds"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
    tsEmitFun`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"BlockingCall"),n("span",{class:"token punctuation"},"("),a(`
        `),n("span",{class:"token punctuation"},"["),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},"("),a("Napi"),n("span",{class:"token double-colon punctuation"},"::"),a("Env env"),n("span",{class:"token punctuation"},","),a(" Napi"),n("span",{class:"token double-colon punctuation"},"::"),a("Function jsEmitFun"),n("span",{class:"token punctuation"},")"),a(`
        `),n("span",{class:"token punctuation"},"{"),a(`
            jsEmitFun`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"Call"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"{"),a("Napi"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token class-name"},"String"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token function"},"New"),n("span",{class:"token punctuation"},"("),a("env"),n("span",{class:"token punctuation"},","),a(),n("span",{class:"token string"},'"close"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),a(" env"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"Undefined"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
        `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
`),n("span",{class:"token punctuation"},"}"),a(`
`),n("span",{class:"token keyword"},"void"),a(),n("span",{class:"token class-name"},"MyDispatcher"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token function"},"OnOK"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),a(`
`),n("span",{class:"token punctuation"},"{"),a(`
    std`),n("span",{class:"token double-colon punctuation"},"::"),a("cout "),n("span",{class:"token operator"},"<<"),a(),n("span",{class:"token string"},'"OnOK"'),a(),n("span",{class:"token operator"},"<<"),a(" std"),n("span",{class:"token double-colon punctuation"},"::"),a("endl"),n("span",{class:"token punctuation"},";"),a(`
`),n("span",{class:"token punctuation"},"}"),a(`
`),n("span",{class:"token keyword"},"void"),a(),n("span",{class:"token class-name"},"MyDispatcher"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token function"},"OnError"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"const"),a(" Napi"),n("span",{class:"token double-colon punctuation"},"::"),a("Error "),n("span",{class:"token operator"},"&"),a("e"),n("span",{class:"token punctuation"},")"),a(`
`),n("span",{class:"token punctuation"},"{"),a(`
    std`),n("span",{class:"token double-colon punctuation"},"::"),a("cout "),n("span",{class:"token operator"},"<<"),a(),n("span",{class:"token string"},'"OnError"'),a(),n("span",{class:"token operator"},"<<"),a(" std"),n("span",{class:"token double-colon punctuation"},"::"),a("endl"),n("span",{class:"token punctuation"},";"),a(`
`),n("span",{class:"token punctuation"},"}"),a(`
`),n("span",{class:"token keyword"},"void"),a(),n("span",{class:"token class-name"},"MyDispatcher"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token function"},"Destroy"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),a(`
`),n("span",{class:"token punctuation"},"{"),a(`
    std`),n("span",{class:"token double-colon punctuation"},"::"),a("cout "),n("span",{class:"token operator"},"<<"),a(),n("span",{class:"token string"},'"Destroy"'),a(),n("span",{class:"token operator"},"<<"),a(" std"),n("span",{class:"token double-colon punctuation"},"::"),a("endl"),n("span",{class:"token punctuation"},";"),a(`
`),n("span",{class:"token punctuation"},"}"),a(`
std`),n("span",{class:"token double-colon punctuation"},"::"),a("vector"),n("span",{class:"token operator"},"<"),a("napi_value"),n("span",{class:"token operator"},">"),a(),n("span",{class:"token class-name"},"MyDispatcher"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token function"},"GetResult"),n("span",{class:"token punctuation"},"("),a("Napi"),n("span",{class:"token double-colon punctuation"},"::"),a("Env env"),n("span",{class:"token punctuation"},")"),a(`
`),n("span",{class:"token punctuation"},"{"),a(`
    std`),n("span",{class:"token double-colon punctuation"},"::"),a("cout "),n("span",{class:"token operator"},"<<"),a(),n("span",{class:"token string"},'"GetResult"'),a(),n("span",{class:"token operator"},"<<"),a(" std"),n("span",{class:"token double-colon punctuation"},"::"),a("endl"),n("span",{class:"token punctuation"},";"),a(`
    `),n("span",{class:"token keyword"},"return"),a(),n("span",{class:"token punctuation"},"{"),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},";"),a(`
`),n("span",{class:"token punctuation"},"}"),a(`
`)])],-1),na=n("pre",null,[n("code",{class:"language-cpp"},[n("span",{class:"token macro property"},[n("span",{class:"token directive-hash"},"#"),n("span",{class:"token directive keyword"},"ifndef"),a(),n("span",{class:"token expression"},"__MyDispatcher__")]),a(`
`),n("span",{class:"token macro property"},[n("span",{class:"token directive-hash"},"#"),n("span",{class:"token directive keyword"},"define"),a(),n("span",{class:"token macro-name"},"__MyDispatcher__")]),a(`
`),n("span",{class:"token macro property"},[n("span",{class:"token directive-hash"},"#"),n("span",{class:"token directive keyword"},"include"),a(),n("span",{class:"token string"},"<napi.h>")]),a(`

`),n("span",{class:"token keyword"},"class"),a(),n("span",{class:"token class-name"},"MyDispatcher"),a(),n("span",{class:"token operator"},":"),a(),n("span",{class:"token base-clause"},[n("span",{class:"token keyword"},"public"),a(" Napi"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token class-name"},"AsyncWorker")]),a(`
`),n("span",{class:"token punctuation"},"{"),a(`
`),n("span",{class:"token keyword"},"private"),n("span",{class:"token operator"},":"),a(`
    Napi`),n("span",{class:"token double-colon punctuation"},"::"),a("Function jsEmitFun"),n("span",{class:"token punctuation"},";"),a(`
    Napi`),n("span",{class:"token double-colon punctuation"},"::"),a("ThreadSafeFunction tsEmitFun"),n("span",{class:"token punctuation"},";"),a(`

`),n("span",{class:"token keyword"},"public"),n("span",{class:"token operator"},":"),a(`
    `),n("span",{class:"token function"},"MyDispatcher"),n("span",{class:"token punctuation"},"("),a("Napi"),n("span",{class:"token double-colon punctuation"},"::"),a("Env env"),n("span",{class:"token punctuation"},","),a(" Napi"),n("span",{class:"token double-colon punctuation"},"::"),a("Function "),n("span",{class:"token operator"},"&"),a("callback"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
    `),n("span",{class:"token comment"},`/**
     Execute() 方法设计为在工作线程上执行。
     这是 AsyncWorker 类的异步本质的一部分，
     它允许长时间运行的任务或计算密集型操作在不阻塞 Node.js 事件循环的独立线程上执行。
     */`),a(`
    `),n("span",{class:"token keyword"},"void"),a(),n("span",{class:"token function"},"Execute"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token keyword"},"override"),n("span",{class:"token punctuation"},";"),a(`
    `),n("span",{class:"token keyword"},"void"),a(),n("span",{class:"token function"},"OnOK"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token keyword"},"override"),n("span",{class:"token punctuation"},";"),a(`
    `),n("span",{class:"token keyword"},"void"),a(),n("span",{class:"token function"},"OnError"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"const"),a(" Napi"),n("span",{class:"token double-colon punctuation"},"::"),a("Error "),n("span",{class:"token operator"},"&"),a("e"),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token keyword"},"override"),n("span",{class:"token punctuation"},";"),a(`
    `),n("span",{class:"token keyword"},"void"),a(),n("span",{class:"token function"},"Destroy"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token keyword"},"override"),n("span",{class:"token punctuation"},";"),a(`
    std`),n("span",{class:"token double-colon punctuation"},"::"),a("vector"),n("span",{class:"token operator"},"<"),a("napi_value"),n("span",{class:"token operator"},">"),a(),n("span",{class:"token function"},"GetResult"),n("span",{class:"token punctuation"},"("),a("Napi"),n("span",{class:"token double-colon punctuation"},"::"),a("Env env"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},";"),a(`
`),n("span",{class:"token macro property"},[n("span",{class:"token directive-hash"},"#"),n("span",{class:"token directive keyword"},"endif")]),a(`
`)])],-1),aa=n("pre",null,[n("code",{class:"language-cpp"},[n("span",{class:"token macro property"},[n("span",{class:"token directive-hash"},"#"),n("span",{class:"token directive keyword"},"include"),a(),n("span",{class:"token string"},"<napi.h>")]),a(`
`),n("span",{class:"token macro property"},[n("span",{class:"token directive-hash"},"#"),n("span",{class:"token directive keyword"},"include"),a(),n("span",{class:"token string"},'"MyDispatcher.hh"')]),a(`
`),n("span",{class:"token macro property"},[n("span",{class:"token directive-hash"},"#"),n("span",{class:"token directive keyword"},"include"),a(),n("span",{class:"token string"},"<iostream>")]),a(`

`),n("span",{class:"token keyword"},"void"),a(),n("span",{class:"token function"},"CreatMyDispatcher"),n("span",{class:"token punctuation"},"("),a("Napi"),n("span",{class:"token double-colon punctuation"},"::"),a("CallbackInfo "),n("span",{class:"token operator"},"&"),a("info"),n("span",{class:"token punctuation"},")"),a(`
`),n("span",{class:"token punctuation"},"{"),a(`
    std`),n("span",{class:"token double-colon punctuation"},"::"),a("cout "),n("span",{class:"token operator"},"<<"),a(),n("span",{class:"token string"},'"CreatMyDispatcher"'),a(),n("span",{class:"token operator"},"<<"),a(" std"),n("span",{class:"token double-colon punctuation"},"::"),a("endl"),n("span",{class:"token punctuation"},";"),a(`

    Napi`),n("span",{class:"token double-colon punctuation"},"::"),a("Env env "),n("span",{class:"token operator"},"="),a(" info"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"Env"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
    Napi`),n("span",{class:"token double-colon punctuation"},"::"),a("Function emitFun "),n("span",{class:"token operator"},"="),a(" info"),n("span",{class:"token punctuation"},"["),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},"."),n("span",{class:"token generic-function"},[n("span",{class:"token function"},"As"),n("span",{class:"token generic class-name"},[n("span",{class:"token operator"},"<"),a("Napi"),n("span",{class:"token double-colon punctuation"},"::"),a("Function"),n("span",{class:"token operator"},">")])]),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`

    MyDispatcher `),n("span",{class:"token operator"},"*"),a("myDispatcher "),n("span",{class:"token operator"},"="),a(),n("span",{class:"token keyword"},"new"),a(),n("span",{class:"token function"},"MyDispatcher"),n("span",{class:"token punctuation"},"("),a("env"),n("span",{class:"token punctuation"},","),a(" emitFun"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`

    myDispatcher`),n("span",{class:"token operator"},"->"),n("span",{class:"token function"},"Queue"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
`),n("span",{class:"token punctuation"},"}"),a(`

Napi`),n("span",{class:"token double-colon punctuation"},"::"),a("Object "),n("span",{class:"token function"},"Init"),n("span",{class:"token punctuation"},"("),a("Napi"),n("span",{class:"token double-colon punctuation"},"::"),a("Env env"),n("span",{class:"token punctuation"},","),a(" Napi"),n("span",{class:"token double-colon punctuation"},"::"),a("Object exports"),n("span",{class:"token punctuation"},")"),a(`
`),n("span",{class:"token punctuation"},"{"),a(`
    exports`),n("span",{class:"token punctuation"},"["),n("span",{class:"token string"},'"CreatMyDispatcher"'),n("span",{class:"token punctuation"},"]"),a(),n("span",{class:"token operator"},"="),a(" Napi"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token class-name"},"Function"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token function"},"New"),n("span",{class:"token punctuation"},"("),a("env"),n("span",{class:"token punctuation"},","),a(" CreatMyDispatcher"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
    `),n("span",{class:"token keyword"},"return"),a(" exports"),n("span",{class:"token punctuation"},";"),a(`
`),n("span",{class:"token punctuation"},"}"),a(`

`),n("span",{class:"token function"},"NODE_API_MODULE"),n("span",{class:"token punctuation"},"("),a("NODE_GYP_MODULE_NAME"),n("span",{class:"token punctuation"},","),a(" Init"),n("span",{class:"token punctuation"},")"),a(`
`)])],-1),sa=n("h3",{id:"案例-async-worker-promise",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#案例-async-worker-promise"},[n("span",null,"案例：async_worker_promise")])],-1),ta=n("code",null,"index.js",-1),oa=n("code",null,"src/MyPromiseAsyncWorker.cc",-1),ea=n("code",null,"src/MyPromiseAsyncWorker.hh",-1),ca=n("code",null,"src/addon.cc",-1),pa=n("pre",null,[n("code",{class:"language-cpp"},[a("#"),n("span",{class:"token operator"},"!"),a(` node
var addon `),n("span",{class:"token operator"},"="),a(),n("span",{class:"token function"},"require"),n("span",{class:"token punctuation"},"("),n("span",{class:"token char"},"'bindings'"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"("),n("span",{class:"token char"},"'hello_world'"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`


async function `),n("span",{class:"token function"},"main"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token punctuation"},"{"),a(`
    let res `),n("span",{class:"token operator"},"="),a(" await addon"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"CreatMyPromiseAsyncWorker"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),a(`
    console`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"log"),n("span",{class:"token punctuation"},"("),a("res"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(),n("span",{class:"token comment"},"// OK"),a(`
`),n("span",{class:"token punctuation"},"}"),a(`

`),n("span",{class:"token function"},"main"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`

`),n("span",{class:"token comment"},`/**
CreatMyPromiseAsyncWorker
0
1
2
3
4
5
6
7
8
9
10
OnOK
OK
 */`),a(`
`)])],-1),la=n("pre",null,[n("code",{class:"language-cpp"},[n("span",{class:"token macro property"},[n("span",{class:"token directive-hash"},"#"),n("span",{class:"token directive keyword"},"include"),a(),n("span",{class:"token string"},'"MyPromiseAsyncWorker.hh"')]),a(`

`),n("span",{class:"token macro property"},[n("span",{class:"token directive-hash"},"#"),n("span",{class:"token directive keyword"},"include"),a(),n("span",{class:"token string"},"<iostream>")]),a(`
`),n("span",{class:"token macro property"},[n("span",{class:"token directive-hash"},"#"),n("span",{class:"token directive keyword"},"include"),a(),n("span",{class:"token string"},"<thread>")]),a(`

`),n("span",{class:"token class-name"},"MyPromiseAsyncWorker"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token function"},"MyPromiseAsyncWorker"),n("span",{class:"token punctuation"},"("),a("Napi"),n("span",{class:"token double-colon punctuation"},"::"),a("Env env"),n("span",{class:"token punctuation"},","),a(" Napi"),n("span",{class:"token double-colon punctuation"},"::"),a("Function "),n("span",{class:"token operator"},"&"),a("jsEmitFun"),n("span",{class:"token punctuation"},")"),a(`
    `),n("span",{class:"token operator"},":"),a(),n("span",{class:"token function"},"AsyncWorker"),n("span",{class:"token punctuation"},"("),a("env"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),a(`
      `),n("span",{class:"token function"},"deferred"),n("span",{class:"token punctuation"},"("),a("env"),n("span",{class:"token punctuation"},")"),a(`
`),n("span",{class:"token punctuation"},"{"),a(`
`),n("span",{class:"token punctuation"},"}"),a(`
`),n("span",{class:"token keyword"},"void"),a(),n("span",{class:"token class-name"},"MyPromiseAsyncWorker"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token function"},"Execute"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),a(`
`),n("span",{class:"token punctuation"},"{"),a(`
    `),n("span",{class:"token comment"},"// do something"),a(`
    `),n("span",{class:"token keyword"},"for"),a(),n("span",{class:"token punctuation"},"("),a("size_t i "),n("span",{class:"token operator"},"="),a(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},";"),a(" i "),n("span",{class:"token operator"},"<="),a(),n("span",{class:"token number"},"10"),n("span",{class:"token punctuation"},";"),a(" i"),n("span",{class:"token operator"},"++"),n("span",{class:"token punctuation"},")"),a(`
    `),n("span",{class:"token punctuation"},"{"),a(`
        std`),n("span",{class:"token double-colon punctuation"},"::"),a("cout "),n("span",{class:"token operator"},"<<"),a(" i "),n("span",{class:"token operator"},"<<"),a(" std"),n("span",{class:"token double-colon punctuation"},"::"),a("endl"),n("span",{class:"token punctuation"},";"),a(`
        std`),n("span",{class:"token double-colon punctuation"},"::"),a("this_thread"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token function"},"sleep_for"),n("span",{class:"token punctuation"},"("),a("std"),n("span",{class:"token double-colon punctuation"},"::"),a("chrono"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token function"},"seconds"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
    `),n("span",{class:"token punctuation"},"}"),a(`
`),n("span",{class:"token punctuation"},"}"),a(`
Napi`),n("span",{class:"token double-colon punctuation"},"::"),a("Promise "),n("span",{class:"token class-name"},"MyPromiseAsyncWorker"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token function"},"getPromise"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),a(`
`),n("span",{class:"token punctuation"},"{"),a(`
    `),n("span",{class:"token keyword"},"return"),a(" deferred"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"Promise"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
`),n("span",{class:"token punctuation"},"}"),a(`
`),n("span",{class:"token keyword"},"void"),a(),n("span",{class:"token class-name"},"MyPromiseAsyncWorker"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token function"},"OnOK"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),a(`
`),n("span",{class:"token punctuation"},"{"),a(`
    std`),n("span",{class:"token double-colon punctuation"},"::"),a("cout "),n("span",{class:"token operator"},"<<"),a(),n("span",{class:"token string"},'"OnOK"'),a(),n("span",{class:"token operator"},"<<"),a(" std"),n("span",{class:"token double-colon punctuation"},"::"),a("endl"),n("span",{class:"token punctuation"},";"),a(`
    deferred`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"Resolve"),n("span",{class:"token punctuation"},"("),a("Napi"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token class-name"},"String"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token function"},"New"),n("span",{class:"token punctuation"},"("),n("span",{class:"token function"},"Env"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),a(),n("span",{class:"token string"},'"OK"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
`),n("span",{class:"token punctuation"},"}"),a(`
`),n("span",{class:"token keyword"},"void"),a(),n("span",{class:"token class-name"},"MyPromiseAsyncWorker"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token function"},"OnError"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"const"),a(" Napi"),n("span",{class:"token double-colon punctuation"},"::"),a("Error "),n("span",{class:"token operator"},"&"),a("e"),n("span",{class:"token punctuation"},")"),a(`
`),n("span",{class:"token punctuation"},"{"),a(`
    std`),n("span",{class:"token double-colon punctuation"},"::"),a("cout "),n("span",{class:"token operator"},"<<"),a(),n("span",{class:"token string"},'"OnError"'),a(),n("span",{class:"token operator"},"<<"),a(" std"),n("span",{class:"token double-colon punctuation"},"::"),a("endl"),n("span",{class:"token punctuation"},";"),a(`
    deferred`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"Resolve"),n("span",{class:"token punctuation"},"("),a("Napi"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token class-name"},"String"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token function"},"New"),n("span",{class:"token punctuation"},"("),n("span",{class:"token function"},"Env"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),a(),n("span",{class:"token string"},'"Error"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
`),n("span",{class:"token punctuation"},"}"),a(`
`)])],-1),ua=n("pre",null,[n("code",{class:"language-cpp"},[n("span",{class:"token macro property"},[n("span",{class:"token directive-hash"},"#"),n("span",{class:"token directive keyword"},"ifndef"),a(),n("span",{class:"token expression"},"__MyDispatcher__")]),a(`
`),n("span",{class:"token macro property"},[n("span",{class:"token directive-hash"},"#"),n("span",{class:"token directive keyword"},"define"),a(),n("span",{class:"token macro-name"},"__MyDispatcher__")]),a(`
`),n("span",{class:"token macro property"},[n("span",{class:"token directive-hash"},"#"),n("span",{class:"token directive keyword"},"include"),a(),n("span",{class:"token string"},"<napi.h>")]),a(`

`),n("span",{class:"token keyword"},"class"),a(),n("span",{class:"token class-name"},"MyPromiseAsyncWorker"),a(),n("span",{class:"token operator"},":"),a(),n("span",{class:"token base-clause"},[n("span",{class:"token keyword"},"public"),a(" Napi"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token class-name"},"AsyncWorker")]),a(`
`),n("span",{class:"token punctuation"},"{"),a(`
`),n("span",{class:"token keyword"},"private"),n("span",{class:"token operator"},":"),a(`
    Napi`),n("span",{class:"token double-colon punctuation"},"::"),a("Promise"),n("span",{class:"token double-colon punctuation"},"::"),a("Deferred deferred"),n("span",{class:"token punctuation"},";"),a(`

`),n("span",{class:"token keyword"},"public"),n("span",{class:"token operator"},":"),a(`
    `),n("span",{class:"token function"},"MyPromiseAsyncWorker"),n("span",{class:"token punctuation"},"("),a("Napi"),n("span",{class:"token double-colon punctuation"},"::"),a("Env env"),n("span",{class:"token punctuation"},","),a(" Napi"),n("span",{class:"token double-colon punctuation"},"::"),a("Function "),n("span",{class:"token operator"},"&"),a("callback"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`

    `),n("span",{class:"token keyword"},"void"),a(),n("span",{class:"token function"},"Execute"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token keyword"},"override"),n("span",{class:"token punctuation"},";"),a(`
    `),n("span",{class:"token keyword"},"void"),a(),n("span",{class:"token function"},"OnOK"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token keyword"},"override"),n("span",{class:"token punctuation"},";"),a(`
    `),n("span",{class:"token keyword"},"void"),a(),n("span",{class:"token function"},"OnError"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"const"),a(" Napi"),n("span",{class:"token double-colon punctuation"},"::"),a("Error "),n("span",{class:"token operator"},"&"),a("e"),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token keyword"},"override"),n("span",{class:"token punctuation"},";"),a(`
    Napi`),n("span",{class:"token double-colon punctuation"},"::"),a("Promise "),n("span",{class:"token function"},"getPromise"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},";"),a(`
`),n("span",{class:"token macro property"},[n("span",{class:"token directive-hash"},"#"),n("span",{class:"token directive keyword"},"endif")]),a(`
`)])],-1),ia=n("pre",null,[n("code",{class:"language-cpp"},[n("span",{class:"token macro property"},[n("span",{class:"token directive-hash"},"#"),n("span",{class:"token directive keyword"},"include"),a(),n("span",{class:"token string"},"<napi.h>")]),a(`
`),n("span",{class:"token macro property"},[n("span",{class:"token directive-hash"},"#"),n("span",{class:"token directive keyword"},"include"),a(),n("span",{class:"token string"},'"MyPromiseAsyncWorker.hh"')]),a(`
`),n("span",{class:"token macro property"},[n("span",{class:"token directive-hash"},"#"),n("span",{class:"token directive keyword"},"include"),a(),n("span",{class:"token string"},"<iostream>")]),a(`

Napi`),n("span",{class:"token double-colon punctuation"},"::"),a("Value "),n("span",{class:"token function"},"CreatMyPromiseAsyncWorker"),n("span",{class:"token punctuation"},"("),a("Napi"),n("span",{class:"token double-colon punctuation"},"::"),a("CallbackInfo "),n("span",{class:"token operator"},"&"),a("info"),n("span",{class:"token punctuation"},")"),a(`
`),n("span",{class:"token punctuation"},"{"),a(`
    std`),n("span",{class:"token double-colon punctuation"},"::"),a("cout "),n("span",{class:"token operator"},"<<"),a(),n("span",{class:"token string"},'"CreatMyPromiseAsyncWorker"'),a(),n("span",{class:"token operator"},"<<"),a(" std"),n("span",{class:"token double-colon punctuation"},"::"),a("endl"),n("span",{class:"token punctuation"},";"),a(`

    Napi`),n("span",{class:"token double-colon punctuation"},"::"),a("Env env "),n("span",{class:"token operator"},"="),a(" info"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"Env"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
    Napi`),n("span",{class:"token double-colon punctuation"},"::"),a("Function emitFun "),n("span",{class:"token operator"},"="),a(" info"),n("span",{class:"token punctuation"},"["),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},"."),n("span",{class:"token generic-function"},[n("span",{class:"token function"},"As"),n("span",{class:"token generic class-name"},[n("span",{class:"token operator"},"<"),a("Napi"),n("span",{class:"token double-colon punctuation"},"::"),a("Function"),n("span",{class:"token operator"},">")])]),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`

    MyPromiseAsyncWorker `),n("span",{class:"token operator"},"*"),a("myPromiseAsyncWorker "),n("span",{class:"token operator"},"="),a(),n("span",{class:"token keyword"},"new"),a(),n("span",{class:"token function"},"MyPromiseAsyncWorker"),n("span",{class:"token punctuation"},"("),a("env"),n("span",{class:"token punctuation"},","),a(" emitFun"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`

    myPromiseAsyncWorker`),n("span",{class:"token operator"},"->"),n("span",{class:"token function"},"Queue"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
    `),n("span",{class:"token keyword"},"return"),a(" myPromiseAsyncWorker"),n("span",{class:"token operator"},"->"),n("span",{class:"token function"},"getPromise"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
`),n("span",{class:"token punctuation"},"}"),a(`

Napi`),n("span",{class:"token double-colon punctuation"},"::"),a("Object "),n("span",{class:"token function"},"Init"),n("span",{class:"token punctuation"},"("),a("Napi"),n("span",{class:"token double-colon punctuation"},"::"),a("Env env"),n("span",{class:"token punctuation"},","),a(" Napi"),n("span",{class:"token double-colon punctuation"},"::"),a("Object exports"),n("span",{class:"token punctuation"},")"),a(`
`),n("span",{class:"token punctuation"},"{"),a(`
    exports`),n("span",{class:"token punctuation"},"["),n("span",{class:"token string"},'"CreatMyPromiseAsyncWorker"'),n("span",{class:"token punctuation"},"]"),a(),n("span",{class:"token operator"},"="),a(" Napi"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token class-name"},"Function"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token function"},"New"),n("span",{class:"token punctuation"},"("),a("env"),n("span",{class:"token punctuation"},","),a(" CreatMyPromiseAsyncWorker"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
    `),n("span",{class:"token keyword"},"return"),a(" exports"),n("span",{class:"token punctuation"},";"),a(`
`),n("span",{class:"token punctuation"},"}"),a(`

`),n("span",{class:"token function"},"NODE_API_MODULE"),n("span",{class:"token punctuation"},"("),a("NODE_GYP_MODULE_NAME"),n("span",{class:"token punctuation"},","),a(" Init"),n("span",{class:"token punctuation"},")"),a(`
`)])],-1),ka=p(`<h2 id="线程安全函数threadsafe-function" tabindex="-1"><a class="header-anchor" href="#线程安全函数threadsafe-function"><span>线程安全函数threadsafe_function</span></a></h2><ul><li><code>Napi::ThreadSafeFunction</code> 类型提供了线程间通信的接口，</li><li>使得其他线程能够通过主线程间接调用JavaScript函数。</li></ul><h3 id="构造函数-5" tabindex="-1"><a class="header-anchor" href="#构造函数-5"><span><code>构造函数()</code></span></a></h3><p>创建一个新的空<code>Napi::ThreadSafeFunction</code>实例。</p><pre><code class="language-cpp">Napi<span class="token double-colon punctuation">::</span><span class="token class-name">Function</span><span class="token double-colon punctuation">::</span><span class="token function">ThreadSafeFunction</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><h3 id="构造函数-tsfn" tabindex="-1"><a class="header-anchor" href="#构造函数-tsfn"><span><code>构造函数(tsfn)</code></span></a></h3><p>创建一个新的<code>Napi::ThreadSafeFunction</code>对象实例。</p><pre><code class="language-cpp">Napi<span class="token double-colon punctuation">::</span><span class="token class-name">ThreadSafeFunction</span><span class="token double-colon punctuation">::</span><span class="token function">ThreadSafeFunction</span><span class="token punctuation">(</span>napi_threadsafe_function tsfn<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><ul><li><code>tsfn</code>: 已存在的线程安全函数的句柄<code>napi_threadsafe_function</code>。</li></ul><blockquote><p>返回一个非空的<code>Napi::ThreadSafeFunction</code>实例。使用此构造函数时，仅应使用<code>Blocking(void*)</code> / <code>NonBlocking(void*)</code>重载方法；不应使用<code>Callback</code>和模板化的<code>data*</code>重载。详情见下文。</p></blockquote><h3 id="new-2" tabindex="-1"><a class="header-anchor" href="#new-2"><span><code>New(...)</code></span></a></h3><p>创建一个新的<code>Napi::ThreadSafeFunction</code>对象实例。<code>New</code>函数有多个重载版本，针对各种可选参数：不使用特定重载的可选参数则跳过。</p><pre><code class="language-cpp"><span class="token function">New</span><span class="token punctuation">(</span>napi_env env<span class="token punctuation">,</span>
    <span class="token keyword">const</span> Function<span class="token operator">&amp;</span> callback<span class="token punctuation">,</span>
    <span class="token keyword">const</span> Object<span class="token operator">&amp;</span> resource<span class="token punctuation">,</span>
    ResourceString resourceName<span class="token punctuation">,</span>
    size_t maxQueueSize<span class="token punctuation">,</span>
    size_t initialThreadCount<span class="token punctuation">,</span>
    ContextType<span class="token operator">*</span> context<span class="token punctuation">,</span>
    Finalizer finalizeCallback<span class="token punctuation">,</span>
    FinalizerDataType<span class="token operator">*</span> data<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><ul><li><code>env</code>: 用于构造<code>Napi::ThreadSafeFunction</code>对象的<code>napi_env</code>环境。</li><li><code>callback</code>: 从其他线程调用的<code>Function</code>。</li><li><code>[可选] resource</code>: 与异步工作关联的对象，将传递给可能的async_hooks初始化钩子。</li><li><code>resourceName</code>: 用于诊断信息的JavaScript字符串，由async_hooks API暴露，标识所提供资源的种类。</li><li><code>maxQueueSize</code>: 队列的最大大小。<code>0</code>表示无限制。</li><li><code>initialThreadCount</code>: 最初使用此函数的线程数量，包括主线程。</li><li><code>[可选] context</code>: 附加到生成的<code>ThreadSafeFunction</code>上的数据，可以通过调用<code>GetContext()</code>检索。</li><li><code>[可选] finalizeCallback</code>: 当<code>ThreadSafeFunction</code>即将销毁时调用的函数。此回调将在主线程上调用。它接收上下文和构造期间给出的最终化数据（如果给出），并提供清理线程后工作的机会，例如通过调用<code>uv_thread_join()</code>。重要的是，在最终化回调完成之后，除了主循环线程外，不应有其他线程继续使用线程安全函数。必须实现<code>void operator()(Env env, DataType* data, ContextType* hint)</code>，如果没有提供<code>data</code>或<code>hint</code>则忽略。可以通过<code>GetContext()</code>检索。</li><li><code>[可选] data</code>: 传递给<code>finalizeCallback</code>的数据。</li></ul><blockquote><p>返回一个非空的<code>Napi::ThreadSafeFunction</code>实例。</p></blockquote><h3 id="napi-status-acquire" tabindex="-1"><a class="header-anchor" href="#napi-status-acquire"><span><code>napi_status Acquire()</code></span></a></h3><p>向此线程安全函数对象添加一个线程，表明新线程将开始使用线程安全函数。</p><pre><code class="language-cpp">napi_status Napi<span class="token double-colon punctuation">::</span><span class="token class-name">ThreadSafeFunction</span><span class="token double-colon punctuation">::</span><span class="token function">Acquire</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">const</span>
</code></pre><p>返回值：</p><ul><li><code>napi_ok</code>: 线程已成功获取线程安全函数供其使用。</li><li><code>napi_closing</code>: 线程安全函数已被先前调用的<code>Abort()</code>标记为关闭。</li></ul><h3 id="napi-status-release" tabindex="-1"><a class="header-anchor" href="#napi-status-release"><span><code>napi_status Release()</code></span></a></h3><p>表示现有线程将停止使用线程安全函数。当线程不再使用此线程安全函数时，应调用此API。在调用此API后，使用任何线程安全API在当前线程中会产生未定义的结果，因为线程安全函数可能已经被销毁。</p><pre><code class="language-cpp">napi_status Napi<span class="token double-colon punctuation">::</span><span class="token class-name">ThreadSafeFunction</span><span class="token double-colon punctuation">::</span><span class="token function">Release</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">const</span>
</code></pre><p>返回值：</p><ul><li><code>napi_ok</code>: 线程安全函数已成功释放。</li><li><code>napi_invalid_arg</code>: 线程安全函数的线程计数为零。</li><li><code>napi_generic_failure</code>: 尝试释放线程安全函数时发生一般错误。</li></ul><h3 id="napi-status-abort" tabindex="-1"><a class="header-anchor" href="#napi-status-abort"><span><code>napi_status Abort()</code></span></a></h3><p>“中止”线程安全函数。这将导致线程安全函数的所有后续API调用（除<code>Release()</code>外）在引用计数达到零之前返回<code>napi_closing</code>，从而通知线程不再可能对线程安全函数进行异步调用。这可以作为终止线程的一个标准。当从线程安全函数调用中收到<code>napi_closing</code>返回值时，线程不得再使用线程安全函数，因为它不再保证被分配。</p><pre><code class="language-cpp">napi_status Napi<span class="token double-colon punctuation">::</span><span class="token class-name">ThreadSafeFunction</span><span class="token double-colon punctuation">::</span><span class="token function">Abort</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">const</span>
</code></pre><p>返回值：</p><ul><li><code>napi_ok</code>: 线程安全函数已成功中止。</li><li><code>napi_invalid_arg</code>: 线程安全函数的线程计数为零。</li><li><code>napi_generic_failure</code>: 尝试中止线程安全函数时发生一般错误。</li></ul><h3 id="napi-status-blockingcall-nonblockingcall" tabindex="-1"><a class="header-anchor" href="#napi-status-blockingcall-nonblockingcall"><span><code>napi_status BlockingCall()/NonBlockingCall()</code></span></a></h3><p>以阻塞或非阻塞方式调用JavaScript函数。</p><ul><li><code>BlockingCall()</code>：API会阻塞直到队列中有可用空间。如果线程安全函数创建时最大队列大小为<code>0</code>，则永远不会阻塞。</li><li><code>NonBlockingCall()</code>：如果队列已满，则返回<code>napi_queue_full</code>，阻止数据成功加入队列。</li></ul><p><code>BlockingCall()</code>和<code>NonBlockingCall()</code>有几个针对可选参数的重载实现：对于特定重载，不使用可选参数则跳过。</p><blockquote><p>这些特定函数重载仅应用于通过<code>ThreadSafeFunction::New</code>创建的<code>ThreadSafeFunction</code>。</p></blockquote><pre><code class="language-cpp">napi_status Napi<span class="token double-colon punctuation">::</span><span class="token class-name">ThreadSafeFunction</span><span class="token double-colon punctuation">::</span><span class="token function">BlockingCall</span><span class="token punctuation">(</span>DataType<span class="token operator">*</span> data<span class="token punctuation">,</span> Callback callback<span class="token punctuation">)</span> <span class="token keyword">const</span>
napi_status Napi<span class="token double-colon punctuation">::</span><span class="token class-name">ThreadSafeFunction</span><span class="token double-colon punctuation">::</span><span class="token function">NonBlockingCall</span><span class="token punctuation">(</span>DataType<span class="token operator">*</span> data<span class="token punctuation">,</span> Callback callback<span class="token punctuation">)</span> <span class="token keyword">const</span>
</code></pre><ul><li><code>[可选] data</code>: 传递给<code>callback</code>的数据。</li><li><code>[可选] callback</code>: 在主线程上被调用的C++函数。回调接收线程安全函数的JavaScript回调函数作为<code>Napi::Function</code>参数，以及<code>DataType*</code>数据指针（如果提供）。必须实现<code>void operator()(Napi::Env env, Function jsCallback, DataType* data)</code>，如果没有提供<code>data</code>则忽略。无需通过<code>MakeCallback()</code>调用JavaScript，因为Node-API在适合回调的上下文中运行<code>callback</code>。</li></ul><blockquote><p>这些特定函数重载仅应用于通过<code>napi_threadsafe_function</code>创建的<code>ThreadSafeFunction</code>。</p></blockquote><pre><code class="language-cpp">napi_status Napi<span class="token double-colon punctuation">::</span><span class="token class-name">ThreadSafeFunction</span><span class="token double-colon punctuation">::</span><span class="token function">BlockingCall</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token operator">*</span> data<span class="token punctuation">)</span> <span class="token keyword">const</span>

napi_status Napi<span class="token double-colon punctuation">::</span><span class="token class-name">ThreadSafeFunction</span><span class="token double-colon punctuation">::</span><span class="token function">NonBlockingCall</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token operator">*</span> data<span class="token punctuation">)</span> <span class="token keyword">const</span>
</code></pre><ul><li><code>data</code>: 传递给<code>call_js_cb</code>的数据，后者是在创建线程安全函数时指定的。</li></ul><p>返回值：</p><ul><li><code>napi_ok</code>: 调用已成功添加到队列中。</li><li><code>napi_queue_full</code>: 尝试非阻塞方式调用时队列已满。</li><li><code>napi_closing</code>: 线程安全函数已中止，无法接受更多调用。</li><li><code>napi_invalid_arg</code>: 线程安全函数已关闭。</li><li><code>napi_generic_failure</code>: 尝试添加到队列时发生一般错误。</li></ul><h3 id="案例-thread-safe-function-demo" tabindex="-1"><a class="header-anchor" href="#案例-thread-safe-function-demo"><span>案例：thread_safe_function_demo</span></a></h3><p><strong>示例</strong></p><p>以下代码示例展示了如何使用<code>ThreadSafeFunction</code>在原生线程中定期调用JavaScript回调函数，并传递数据。</p>`,45),ra=n("code",null,"src/addon.cc",-1),da=n("code",null,"index.js",-1),ba=n("pre",null,[n("code",{class:"language-cpp"},[n("span",{class:"token macro property"},[n("span",{class:"token directive-hash"},"#"),n("span",{class:"token directive keyword"},"include"),a(),n("span",{class:"token string"},"<napi.h>")]),a(`
`),n("span",{class:"token macro property"},[n("span",{class:"token directive-hash"},"#"),n("span",{class:"token directive keyword"},"include"),a(),n("span",{class:"token string"},"<iostream>")]),a(`
`),n("span",{class:"token macro property"},[n("span",{class:"token directive-hash"},"#"),n("span",{class:"token directive keyword"},"include"),a(),n("span",{class:"token string"},"<thread>")]),a(`
`),n("span",{class:"token keyword"},"using"),a(),n("span",{class:"token keyword"},"namespace"),a(" Napi"),n("span",{class:"token punctuation"},";"),a(`

`),n("span",{class:"token comment"},"// c++原生线程"),a(`
std`),n("span",{class:"token double-colon punctuation"},"::"),a("thread nativeThread"),n("span",{class:"token punctuation"},";"),a(`
`),n("span",{class:"token comment"},"// Napi线程安全函数"),a(`
ThreadSafeFunction tsfn`),n("span",{class:"token punctuation"},";"),a(`

Value `),n("span",{class:"token function"},"startProcess"),n("span",{class:"token punctuation"},"("),a("CallbackInfo "),n("span",{class:"token operator"},"&"),a("info"),n("span",{class:"token punctuation"},")"),a(`
`),n("span",{class:"token punctuation"},"{"),a(`
    Env env `),n("span",{class:"token operator"},"="),a(" info"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"Env"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
    Function fun `),n("span",{class:"token operator"},"="),a(" info"),n("span",{class:"token punctuation"},"["),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},"."),n("span",{class:"token generic-function"},[n("span",{class:"token function"},"As"),n("span",{class:"token generic class-name"},[n("span",{class:"token operator"},"<"),a("Function"),n("span",{class:"token operator"},">")])]),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`

    tsfn `),n("span",{class:"token operator"},"="),a(),n("span",{class:"token class-name"},"ThreadSafeFunction"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token function"},"New"),n("span",{class:"token punctuation"},"("),a(`
        env`),n("span",{class:"token punctuation"},","),a("          "),n("span",{class:"token comment"},"// 环境"),a(`
        fun`),n("span",{class:"token punctuation"},","),a("          "),n("span",{class:"token comment"},"// 回调"),a(`
        `),n("span",{class:"token string"},'"fun_tsfn"'),n("span",{class:"token punctuation"},","),a("   "),n("span",{class:"token comment"},"// 资源名"),a(`
        `),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},","),a("            "),n("span",{class:"token comment"},"// 队列大小（0无限）"),a(`
        `),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},","),a("            "),n("span",{class:"token comment"},"// 初始线程数"),a(`
        `),n("span",{class:"token punctuation"},"["),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},"("),a("Env env"),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token punctuation"},"{"),a(),n("span",{class:"token comment"},"// 用于清理线程的终结器"),a(`
            std`),n("span",{class:"token double-colon punctuation"},"::"),a("cout "),n("span",{class:"token operator"},"<<"),a(),n("span",{class:"token string"},'"finalizeCallback start"'),a(),n("span",{class:"token operator"},"<<"),a(" std"),n("span",{class:"token double-colon punctuation"},"::"),a("endl"),n("span",{class:"token punctuation"},";"),a(`
            nativeThread`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"join"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(),n("span",{class:"token comment"},"// 等待线程执行完毕"),a(`
            std`),n("span",{class:"token double-colon punctuation"},"::"),a("cout "),n("span",{class:"token operator"},"<<"),a(),n("span",{class:"token string"},'"nativeThread.join();"'),a(),n("span",{class:"token operator"},"<<"),a(" std"),n("span",{class:"token double-colon punctuation"},"::"),a("endl"),n("span",{class:"token punctuation"},";"),a(`
            std`),n("span",{class:"token double-colon punctuation"},"::"),a("cout "),n("span",{class:"token operator"},"<<"),a(),n("span",{class:"token string"},'"finalizeCallback end"'),a(),n("span",{class:"token operator"},"<<"),a(" std"),n("span",{class:"token double-colon punctuation"},"::"),a("endl"),n("span",{class:"token punctuation"},";"),a(`
        `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`

    nativeThread `),n("span",{class:"token operator"},"="),a(" std"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token function"},"thread"),n("span",{class:"token punctuation"},"("),a(`
        `),n("span",{class:"token comment"},"// 匿名函数，供线程调用"),a(`
        `),n("span",{class:"token punctuation"},"["),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),a(`
        `),n("span",{class:"token punctuation"},"{"),a(`
            std`),n("span",{class:"token double-colon punctuation"},"::"),a("cout "),n("span",{class:"token operator"},"<<"),a(),n("span",{class:"token string"},'"nativeThread start"'),a(),n("span",{class:"token operator"},"<<"),a(" std"),n("span",{class:"token double-colon punctuation"},"::"),a("endl"),n("span",{class:"token punctuation"},";"),a(`
            `),n("span",{class:"token keyword"},"for"),a(),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"uint8_t"),a(" i "),n("span",{class:"token operator"},"="),a(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},";"),a(" i "),n("span",{class:"token operator"},"<"),a(),n("span",{class:"token number"},"5"),n("span",{class:"token punctuation"},";"),a(" i"),n("span",{class:"token operator"},"++"),n("span",{class:"token punctuation"},")"),a(`
            `),n("span",{class:"token punctuation"},"{"),a(`
                `),n("span",{class:"token keyword"},"int"),a(),n("span",{class:"token operator"},"*"),a("data "),n("span",{class:"token operator"},"="),a(),n("span",{class:"token keyword"},"new"),a(),n("span",{class:"token keyword"},"int"),n("span",{class:"token punctuation"},"("),n("span",{class:"token function"},"clock"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(),n("span",{class:"token comment"},"// 用于演示数据的传递"),a(`
                std`),n("span",{class:"token double-colon punctuation"},"::"),a("cout "),n("span",{class:"token operator"},"<<"),a(" std"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token function"},"to_string"),n("span",{class:"token punctuation"},"("),a("i"),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token operator"},"<<"),a(" std"),n("span",{class:"token double-colon punctuation"},"::"),a("endl"),n("span",{class:"token punctuation"},";"),a(`
                std`),n("span",{class:"token double-colon punctuation"},"::"),a("cout "),n("span",{class:"token operator"},"<<"),a(),n("span",{class:"token string"},'"BlockingCall start"'),a(),n("span",{class:"token operator"},"<<"),a(" std"),n("span",{class:"token double-colon punctuation"},"::"),a("endl"),n("span",{class:"token punctuation"},";"),a(`
                napi_status status `),n("span",{class:"token operator"},"="),a(" tsfn"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"BlockingCall"),n("span",{class:"token punctuation"},"("),a("                 "),n("span",{class:"token comment"},"// 线程安全函数的阻塞调用"),a(`
                    data`),n("span",{class:"token punctuation"},","),a("                                               "),n("span",{class:"token comment"},"// 第一个参数可以传递数据"),a(`
                    `),n("span",{class:"token punctuation"},"["),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},"("),a("Napi"),n("span",{class:"token double-colon punctuation"},"::"),a("Env env"),n("span",{class:"token punctuation"},","),a(" Function jsCallback"),n("span",{class:"token punctuation"},","),a(),n("span",{class:"token keyword"},"int"),a(),n("span",{class:"token operator"},"*"),a("data"),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token punctuation"},"{"),a(),n("span",{class:"token comment"},"// lambda回调"),a(`
                        std`),n("span",{class:"token double-colon punctuation"},"::"),a("cout "),n("span",{class:"token operator"},"<<"),a(),n("span",{class:"token string"},'"lambda start"'),a(),n("span",{class:"token operator"},"<<"),a(" std"),n("span",{class:"token double-colon punctuation"},"::"),a("endl"),n("span",{class:"token punctuation"},";"),a(`
                        jsCallback`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"Call"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"{"),n("span",{class:"token class-name"},"Number"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token function"},"New"),n("span",{class:"token punctuation"},"("),a("env"),n("span",{class:"token punctuation"},","),a(),n("span",{class:"token operator"},"*"),a("data"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(),n("span",{class:"token comment"},"// 传递参数并调用"),a(`
                        std`),n("span",{class:"token double-colon punctuation"},"::"),a("cout "),n("span",{class:"token operator"},"<<"),a(),n("span",{class:"token string"},'"lambda end"'),a(),n("span",{class:"token operator"},"<<"),a(" std"),n("span",{class:"token double-colon punctuation"},"::"),a("endl"),n("span",{class:"token punctuation"},";"),a(`
                        `),n("span",{class:"token keyword"},"delete"),a(" data"),n("span",{class:"token punctuation"},";"),a(),n("span",{class:"token comment"},"// 删除数据"),a(`
                    `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
                std`),n("span",{class:"token double-colon punctuation"},"::"),a("cout "),n("span",{class:"token operator"},"<<"),a(),n("span",{class:"token string"},'"BlockingCall end"'),a(),n("span",{class:"token operator"},"<<"),a(" std"),n("span",{class:"token double-colon punctuation"},"::"),a("endl"),n("span",{class:"token punctuation"},";"),a(`
                std`),n("span",{class:"token double-colon punctuation"},"::"),a("this_thread"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token function"},"sleep_for"),n("span",{class:"token punctuation"},"("),a("std"),n("span",{class:"token double-colon punctuation"},"::"),a("chrono"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token function"},"seconds"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
            `),n("span",{class:"token punctuation"},"}"),a(`
            `),n("span",{class:"token comment"},"// 释放线程安全函数"),a(`
            tsfn`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"Release"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
            std`),n("span",{class:"token double-colon punctuation"},"::"),a("cout "),n("span",{class:"token operator"},"<<"),a(),n("span",{class:"token string"},'"tsfn.Release();"'),a(),n("span",{class:"token operator"},"<<"),a(" std"),n("span",{class:"token double-colon punctuation"},"::"),a("endl"),n("span",{class:"token punctuation"},";"),a(`
        `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
`),n("span",{class:"token punctuation"},"}"),a(`

Napi`),n("span",{class:"token double-colon punctuation"},"::"),a("Object "),n("span",{class:"token function"},"Init"),n("span",{class:"token punctuation"},"("),a("Napi"),n("span",{class:"token double-colon punctuation"},"::"),a("Env env"),n("span",{class:"token punctuation"},","),a(" Napi"),n("span",{class:"token double-colon punctuation"},"::"),a("Object exports"),n("span",{class:"token punctuation"},")"),a(`
`),n("span",{class:"token punctuation"},"{"),a(`
    exports`),n("span",{class:"token punctuation"},"["),n("span",{class:"token string"},'"startProcess"'),n("span",{class:"token punctuation"},"]"),a(),n("span",{class:"token operator"},"="),a(),n("span",{class:"token class-name"},"Function"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token function"},"New"),n("span",{class:"token punctuation"},"("),a("env"),n("span",{class:"token punctuation"},","),a(" startProcess"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
    `),n("span",{class:"token keyword"},"return"),a(" exports"),n("span",{class:"token punctuation"},";"),a(`
`),n("span",{class:"token punctuation"},"}"),a(`

`),n("span",{class:"token function"},"NODE_API_MODULE"),n("span",{class:"token punctuation"},"("),a("NODE_GYP_MODULE_NAME"),n("span",{class:"token punctuation"},","),a(" Init"),n("span",{class:"token punctuation"},")"),a(`
`)])],-1),fa=n("pre",null,[n("code",{class:"language-cpp"},[a("#"),n("span",{class:"token operator"},"!"),a(` node
var `),n("span",{class:"token punctuation"},"{"),a(" startProcess "),n("span",{class:"token punctuation"},"}"),a(),n("span",{class:"token operator"},"="),a(),n("span",{class:"token function"},"require"),n("span",{class:"token punctuation"},"("),n("span",{class:"token char"},"'bindings'"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"("),n("span",{class:"token char"},"'hello_world'"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`


async function `),n("span",{class:"token function"},"main"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token punctuation"},"{"),a(`
    let fun `),n("span",{class:"token operator"},"="),a(),n("span",{class:"token punctuation"},"("),a("arg"),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token operator"},"="),n("span",{class:"token operator"},">"),a(" console"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"log"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"hello world:"'),n("span",{class:"token punctuation"},","),a(" arg"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
    `),n("span",{class:"token function"},"startProcess"),n("span",{class:"token punctuation"},"("),a("fun"),n("span",{class:"token punctuation"},")"),a(`
`),n("span",{class:"token punctuation"},"}"),a(`

`),n("span",{class:"token function"},"main"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
`),n("span",{class:"token comment"},`/**
$ node ./index.js 
nativeThread start
0
BlockingCall start
BlockingCall end
lambda start
hello world: 1
lambda end
1
BlockingCall start
BlockingCall end
lambda start
hello world: 1002
lambda end
2
BlockingCall start
BlockingCall end
lambda start
hello world: 2010
lambda end
3
BlockingCall start
BlockingCall end
lambda start
hello world: 3021
lambda end
4
BlockingCall start
BlockingCall end
lambda start
hello world: 4028
lambda end
tsfn.Release();
finalizeCallback start
nativeThread.join();
finalizeCallback end
 */`),a(`
`)])],-1);function ha(ya,ma){const l=u("Mermaid"),c=u("CodeTabs");return r(),k("div",null,[h,e(l,{id:"mermaid-1433",code:"eJxLL0osyFAIceFSAILi0iQIXyksMac0tVgJLAoCfokFmVZWYFFsYgq6unZQvl9iLroSkBCSiuCSosy8dAJqKnOT8nMIWVWam5RaRECRU2a6Z14JIUX5+TmpiXkEVLkklhDyfUhlQWpIYnp6YlIOulJkKSQdrhUlqUV5ieh+xaHaPykrNRnim9S8FC4AQI583g=="}),e(l,{id:"mermaid-1434",code:"eJxLL0osyFAIceFSAILi0iQIX8k/KSs1uaRYCSwMAn6JBZlWVmGJOaWpCrq6dlB+SGVBakhienpiUk4qmlJkKSQdEIPR1EIEkVQ5FhUlVhKlyKk0LS21iJDSgKL83MxidCdiKHNJLEkMy0wtJ6QO5LcUotzoVpqXXJKZn4clcCAGYDXVPw2nev80JB2hmXklFtjcgZBAUo0UVKl5KVwA5OCS8A=="}),e(l,{id:"mermaid-1435",code:"eJxLL0osyFAIceFSAILi0iQIX8m1qCi/qFgJLAoCfokFmVZW/klZqcklQalpqUWpecmpCrq6dlAZsHq46uKSFCur1Irk1IKSzPw8nMqQxJDUBCXmpacSozC4Mq8ksYIYlSGVBUgmpualcAEANyxIfQ=="}),e(l,{id:"mermaid-1436",code:"eJxLL0osyFAIceFSAILi0iQIX8kzr7gkMS85NRzILVYCS4KAX2JBppUVsiQeKQVdXTuosGNKSn4ecUr9k7JSk0vgRqfmpXChuS0oNS21KBWoE8NhcBkk8+Bi8W6lecklmRjuwK8J4hxcWuBmRsOF1HJKYIJq6SWxSIbChOFKcZoKsRTFTIgQmokQQWqbhxL2AA0rrFg="}),e(l,{id:"mermaid-1437",code:"eJxLL0osyFAIceFSAILi0iQIX8mxuDIvOaAoP70otbg4PL8oO7XIKbE4tVgJrA4E/BILMq2scKhT0NW1w6YisDS1NBWijDKDkMxIzUvhAgDDrUJ+"}),e(l,{id:"mermaid-1438",code:"eJx1kM0OgkAMhO88BeExuBnA6AE1gei5LOUnLN1NdzHy9q56qzC3zjfpNO0Z7BDXeRQHuaX5zcnVD8gu+bofXcCOaVrQUzgZaN2Ams7UmR1UKWNRMg3O3TgA9muOTvFoveE4FrmDW0k9DE/IWyQz5PHlBToBtRq3agunwEKjcT9S4mx4LYGgxxlJ7v6/WQTqgRHaCjo8LqT8aEgE7uGvwRUNSG30BvekdYE="}),y,e(c,{id:"1518",data:[{id:"<code v-pre>src/hello_world.cc</code>"},{id:"<code v-pre>index.js</code>"}]},{title0:s(({value:t,isActive:o})=>[m]),title1:s(({value:t,isActive:o})=>[g]),tab0:s(({value:t,isActive:o})=>[v]),tab1:s(({value:t,isActive:o})=>[N]),_:1}),_,e(c,{id:"1736",data:[{id:"<code v-pre>src/hello_world.cc</code>"},{id:"<code v-pre>index.js</code>"}]},{title0:s(({value:t,isActive:o})=>[w]),title1:s(({value:t,isActive:o})=>[E]),tab0:s(({value:t,isActive:o})=>[A]),tab1:s(({value:t,isActive:o})=>[j]),_:1}),O,e(c,{id:"1747",data:[{id:"<code v-pre>src/hello_world.cc</code>"},{id:"<code v-pre>index.js</code>"}]},{title0:s(({value:t,isActive:o})=>[B]),title1:s(({value:t,isActive:o})=>[x]),tab0:s(({value:t,isActive:o})=>[M]),tab1:s(({value:t,isActive:o})=>[C]),_:1}),D,e(c,{id:"1758",data:[{id:"<code v-pre>src/hello_world.cc</code>"},{id:"<code v-pre>index.js</code>"}]},{title0:s(({value:t,isActive:o})=>[F]),title1:s(({value:t,isActive:o})=>[I]),tab0:s(({value:t,isActive:o})=>[S]),tab1:s(({value:t,isActive:o})=>[q]),_:1}),T,e(c,{id:"1769",data:[{id:"<code v-pre>src/hello_world.cc</code>"},{id:"<code v-pre>index.js</code>"}]},{title0:s(({value:t,isActive:o})=>[V]),title1:s(({value:t,isActive:o})=>[P]),tab0:s(({value:t,isActive:o})=>[W]),tab1:s(({value:t,isActive:o})=>[z]),_:1}),L,e(c,{id:"2331",data:[{id:"<code v-pre>src/hello_world.cc</code>"},{id:"<code v-pre>index.js</code>"}]},{title0:s(({value:t,isActive:o})=>[R]),title1:s(({value:t,isActive:o})=>[J]),tab0:s(({value:t,isActive:o})=>[U]),tab1:s(({value:t,isActive:o})=>[G]),_:1}),K,e(c,{id:"2382",data:[{id:"<code v-pre>ddon.cc</code>"},{id:"<code v-pre>src/MyObject.cc</code>"},{id:"<code v-pre>src/MyObject.hh</code>"},{id:"<code v-pre>index.js</code>"}]},{title0:s(({value:t,isActive:o})=>[Y]),title1:s(({value:t,isActive:o})=>[H]),title2:s(({value:t,isActive:o})=>[Q]),title3:s(({value:t,isActive:o})=>[X]),tab0:s(({value:t,isActive:o})=>[Z]),tab1:s(({value:t,isActive:o})=>[$]),tab2:s(({value:t,isActive:o})=>[nn]),tab3:s(({value:t,isActive:o})=>[an]),_:1}),sn,e(c,{id:"2399",data:[{id:"<code v-pre>src/MyObject.hh</code>"},{id:"<code v-pre>src/MyObject.cc</code>"},{id:"<code v-pre>ddon.cc</code>"},{id:"<code v-pre>index.js</code>"}]},{title0:s(({value:t,isActive:o})=>[tn]),title1:s(({value:t,isActive:o})=>[on]),title2:s(({value:t,isActive:o})=>[en]),title3:s(({value:t,isActive:o})=>[cn]),tab0:s(({value:t,isActive:o})=>[pn]),tab1:s(({value:t,isActive:o})=>[ln]),tab2:s(({value:t,isActive:o})=>[un]),tab3:s(({value:t,isActive:o})=>[kn]),_:1}),rn,e(c,{id:"2416",data:[{id:"<code v-pre>src/MyObject.hh</code>"},{id:"<code v-pre>src/MyObject.cc</code>"},{id:"<code v-pre>ddon.cc</code>"},{id:"<code v-pre>index.js</code>"}]},{title0:s(({value:t,isActive:o})=>[dn]),title1:s(({value:t,isActive:o})=>[bn]),title2:s(({value:t,isActive:o})=>[fn]),title3:s(({value:t,isActive:o})=>[hn]),tab0:s(({value:t,isActive:o})=>[yn]),tab1:s(({value:t,isActive:o})=>[mn]),tab2:s(({value:t,isActive:o})=>[gn]),tab3:s(({value:t,isActive:o})=>[vn]),_:1}),Nn,e(c,{id:"2675",data:[{id:"<code v-pre>src/MyObject.hh</code>"},{id:"<code v-pre>index.js</code>"}]},{title0:s(({value:t,isActive:o})=>[_n]),title1:s(({value:t,isActive:o})=>[wn]),tab0:s(({value:t,isActive:o})=>[En]),tab1:s(({value:t,isActive:o})=>[An]),_:1}),jn,e(c,{id:"2776",data:[{id:"<code v-pre>src/MyObject.hh</code>"},{id:"<code v-pre>index.js</code>"}]},{title0:s(({value:t,isActive:o})=>[On]),title1:s(({value:t,isActive:o})=>[Bn]),tab0:s(({value:t,isActive:o})=>[xn]),tab1:s(({value:t,isActive:o})=>[Mn]),_:1}),Cn,e(c,{id:"2853",data:[{id:"<code v-pre>src/addon.cc</code>"},{id:"<code v-pre>index.js</code>"}]},{title0:s(({value:t,isActive:o})=>[Dn]),title1:s(({value:t,isActive:o})=>[Fn]),tab0:s(({value:t,isActive:o})=>[In]),tab1:s(({value:t,isActive:o})=>[Sn]),_:1}),qn,e(c,{id:"3010",data:[{id:"<code v-pre>index.js</code>"},{id:"<code v-pre>src/MyAsyncWorker.cc</code>"},{id:"<code v-pre>src/MyAsyncWorker.hh</code>"},{id:"<code v-pre>src/addon.cc</code>"},{id:"<code v-pre>binding.gyp</code>"}]},{title0:s(({value:t,isActive:o})=>[Tn]),title1:s(({value:t,isActive:o})=>[Vn]),title2:s(({value:t,isActive:o})=>[Pn]),title3:s(({value:t,isActive:o})=>[Wn]),title4:s(({value:t,isActive:o})=>[zn]),tab0:s(({value:t,isActive:o})=>[Ln]),tab1:s(({value:t,isActive:o})=>[Rn]),tab2:s(({value:t,isActive:o})=>[Jn]),tab3:s(({value:t,isActive:o})=>[Un]),tab4:s(({value:t,isActive:o})=>[Gn]),_:1}),Kn,e(c,{id:"3030",data:[{id:"<code v-pre>index.js</code>"},{id:"<code v-pre>src/MyAsyncWorker.cc</code>"},{id:"<code v-pre>src/MyAsyncWorker.hh</code>"},{id:"<code v-pre>src/addon.cc</code>"}]},{title0:s(({value:t,isActive:o})=>[Yn]),title1:s(({value:t,isActive:o})=>[Hn]),title2:s(({value:t,isActive:o})=>[Qn]),title3:s(({value:t,isActive:o})=>[Xn]),tab0:s(({value:t,isActive:o})=>[Zn]),tab1:s(({value:t,isActive:o})=>[$n]),tab2:s(({value:t,isActive:o})=>[na]),tab3:s(({value:t,isActive:o})=>[aa]),_:1}),sa,e(c,{id:"3047",data:[{id:"<code v-pre>index.js</code>"},{id:"<code v-pre>src/MyPromiseAsyncWorker.cc</code>"},{id:"<code v-pre>src/MyPromiseAsyncWorker.hh</code>"},{id:"<code v-pre>src/addon.cc</code>"}]},{title0:s(({value:t,isActive:o})=>[ta]),title1:s(({value:t,isActive:o})=>[oa]),title2:s(({value:t,isActive:o})=>[ea]),title3:s(({value:t,isActive:o})=>[ca]),tab0:s(({value:t,isActive:o})=>[pa]),tab1:s(({value:t,isActive:o})=>[la]),tab2:s(({value:t,isActive:o})=>[ua]),tab3:s(({value:t,isActive:o})=>[ia]),_:1}),ka,e(c,{id:"3328",data:[{id:"<code v-pre>src/addon.cc</code>"},{id:"<code v-pre>index.js</code>"}]},{title0:s(({value:t,isActive:o})=>[ra]),title1:s(({value:t,isActive:o})=>[da]),tab0:s(({value:t,isActive:o})=>[ba]),tab1:s(({value:t,isActive:o})=>[fa]),_:1})])}const va=i(f,[["render",ha],["__file","index.html.vue"]]),Na=JSON.parse('{"path":"/%E5%90%8E%E7%AB%AF/Node-Addon%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/","title":"Node-Addons学习笔记","lang":"zh-CN","frontmatter":{"title":"Node-Addons学习笔记","date":"2024-04-15T20:03:00.000Z","description":"Node-Addons学习笔记 目录 Node-Addons学习笔记 目录 C++ addons Node-API node-addon-api getting-started 安装依赖 编写binding.gyp文件 编写插件 编写build脚本 安装编译环境 配置vscode实现代码提示 编译插件 编写index.js 测试 预构建 对象继承关系图...","head":[["meta",{"property":"og:url","content":"https://dingdingdang.online/%E5%90%8E%E7%AB%AF/Node-Addon%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"}],["meta",{"property":"og:site_name","content":"YiguiDing的Blog小站"}],["meta",{"property":"og:title","content":"Node-Addons学习笔记"}],["meta",{"property":"og:description","content":"Node-Addons学习笔记 目录 Node-Addons学习笔记 目录 C++ addons Node-API node-addon-api getting-started 安装依赖 编写binding.gyp文件 编写插件 编写build脚本 安装编译环境 配置vscode实现代码提示 编译插件 编写index.js 测试 预构建 对象继承关系图..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-07-23T22:25:18.000Z"}],["meta",{"property":"article:author","content":"丁毅桂"}],["meta",{"property":"article:published_time","content":"2024-04-15T20:03:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-07-23T22:25:18.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Node-Addons学习笔记\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-04-15T20:03:00.000Z\\",\\"dateModified\\":\\"2024-07-23T22:25:18.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"丁毅桂\\",\\"email\\":\\"2449695354@qq.com\\"}]}"],["meta",{"name":"baidu-site-verification","content":"codeva-PwE9Ts6nMl"}]]},"headers":[{"level":2,"title":"目录","slug":"目录","link":"#目录","children":[]},{"level":2,"title":"C++ addons","slug":"c-addons","link":"#c-addons","children":[]},{"level":2,"title":"Node-API","slug":"node-api","link":"#node-api","children":[]},{"level":2,"title":"node-addon-api","slug":"node-addon-api","link":"#node-addon-api","children":[]},{"level":2,"title":"getting-started","slug":"getting-started","link":"#getting-started","children":[{"level":3,"title":"安装依赖","slug":"安装依赖","link":"#安装依赖","children":[]},{"level":3,"title":"编写binding.gyp文件","slug":"编写binding-gyp文件","link":"#编写binding-gyp文件","children":[]},{"level":3,"title":"编写插件","slug":"编写插件","link":"#编写插件","children":[]},{"level":3,"title":"编写build脚本","slug":"编写build脚本","link":"#编写build脚本","children":[]},{"level":3,"title":"安装编译环境","slug":"安装编译环境","link":"#安装编译环境","children":[]},{"level":3,"title":"配置vscode实现代码提示","slug":"配置vscode实现代码提示","link":"#配置vscode实现代码提示","children":[]},{"level":3,"title":"编译插件","slug":"编译插件","link":"#编译插件","children":[]},{"level":3,"title":"编写index.js","slug":"编写index-js","link":"#编写index-js","children":[]},{"level":3,"title":"测试","slug":"测试","link":"#测试","children":[]},{"level":3,"title":"预构建","slug":"预构建","link":"#预构建","children":[]}]},{"level":2,"title":"对象继承关系图","slug":"对象继承关系图","link":"#对象继承关系图","children":[]},{"level":2,"title":"addon插件类","slug":"addon插件类","link":"#addon插件类","children":[]},{"level":2,"title":"function函数","slug":"function函数","link":"#function函数","children":[{"level":3,"title":"示例","slug":"示例","link":"#示例","children":[]},{"level":3,"title":"类型定义","slug":"类型定义","link":"#类型定义","children":[]},{"level":3,"title":"构造函数","slug":"构造函数","link":"#构造函数","children":[]},{"level":3,"title":"构造函数","slug":"构造函数-1","link":"#构造函数-1","children":[]},{"level":3,"title":"New","slug":"new","link":"#new","children":[]},{"level":3,"title":"New（参数最多的重载）","slug":"new-参数最多的重载","link":"#new-参数最多的重载","children":[]},{"level":3,"title":"Call","slug":"call","link":"#call","children":[]},{"level":3,"title":"Call","slug":"call-1","link":"#call-1","children":[]},{"level":3,"title":"MakeCallback异步回调执行函数","slug":"makecallback异步回调执行函数","link":"#makecallback异步回调执行函数","children":[]},{"level":3,"title":"operator操作符重载","slug":"operator操作符重载","link":"#operator操作符重载","children":[]},{"level":3,"title":"案例：function_example","slug":"案例-function-example","link":"#案例-function-example","children":[]},{"level":3,"title":"案例：function_arguments函数参数","slug":"案例-function-arguments函数参数","link":"#案例-function-arguments函数参数","children":[]},{"level":3,"title":"案例：callback_函数回调","slug":"案例-callback-函数回调","link":"#案例-callback-函数回调","children":[]},{"level":3,"title":"案例：Factory_Of_function","slug":"案例-factory-of-function","link":"#案例-factory-of-function","children":[]}]},{"level":2,"title":"Object对象","slug":"object对象","link":"#object对象","children":[{"level":3,"title":"示例","slug":"示例-1","link":"#示例-1","children":[]},{"level":3,"title":"方法","slug":"方法","link":"#方法","children":[]},{"level":3,"title":"迭代器","slug":"迭代器","link":"#迭代器","children":[]},{"level":3,"title":"常量迭代器","slug":"常量迭代器","link":"#常量迭代器","children":[]},{"level":3,"title":"非常量迭代器","slug":"非常量迭代器","link":"#非常量迭代器","children":[]},{"level":3,"title":"案例：Factory_Of_Object","slug":"案例-factory-of-object","link":"#案例-factory-of-object","children":[]}]},{"level":2,"title":"ObjectWrap","slug":"objectwrap","link":"#objectwrap","children":[{"level":3,"title":"案例：objectWrap","slug":"案例-objectwrap","link":"#案例-objectwrap","children":[]},{"level":3,"title":"案例：factory_of_objectWrap","slug":"案例-factory-of-objectwrap","link":"#案例-factory-of-objectwrap","children":[]},{"level":3,"title":"案例：passing_wrapped_obj_to_native","slug":"案例-passing-wrapped-obj-to-native","link":"#案例-passing-wrapped-obj-to-native","children":[]}]},{"level":2,"title":"ArrayBuffer","slug":"arraybuffer","link":"#arraybuffer","children":[{"level":3,"title":"New(字节长度)","slug":"new-字节长度","link":"#new-字节长度","children":[]},{"level":3,"title":"New(外部数据)","slug":"new-外部数据","link":"#new-外部数据","children":[]},{"level":3,"title":"New（带析构回调）","slug":"new-带析构回调","link":"#new-带析构回调","children":[]},{"level":3,"title":"New（带析构回调和提示）","slug":"new-带析构回调和提示","link":"#new-带析构回调和提示","children":[]},{"level":3,"title":"构造函数()","slug":"构造函数-3","link":"#构造函数-3","children":[]},{"level":3,"title":"构造函数(env,arrayBuffer)","slug":"构造函数-env-arraybuffer","link":"#构造函数-env-arraybuffer","children":[]},{"level":3,"title":"ByteLength()","slug":"bytelength","link":"#bytelength","children":[]},{"level":3,"title":"void* Data()","slug":"void-data","link":"#void-data","children":[]},{"level":3,"title":"void Detach()","slug":"void-detach","link":"#void-detach","children":[]},{"level":3,"title":"bool IsDetached()","slug":"bool-isdetached","link":"#bool-isdetached","children":[]},{"level":3,"title":"案例：passing_array_buffer_to_native","slug":"案例-passing-array-buffer-to-native","link":"#案例-passing-array-buffer-to-native","children":[]}]},{"level":2,"title":"TypedArray","slug":"typedarray","link":"#typedarray","children":[{"level":3,"title":"构造函数()","slug":"构造函数-4","link":"#构造函数-4","children":[]},{"level":3,"title":"构造函数(env,typedArray)","slug":"构造函数-env-typedarray","link":"#构造函数-env-typedarray","children":[]},{"level":3,"title":"napi_typedarray_type TypedArrayType()","slug":"napi-typedarray-type-typedarraytype","link":"#napi-typedarray-type-typedarraytype","children":[]},{"level":3,"title":"ArrayBuffer()","slug":"arraybuffer-1","link":"#arraybuffer-1","children":[]},{"level":3,"title":"uint8_t ElementSize()","slug":"uint8-t-elementsize","link":"#uint8-t-elementsize","children":[]},{"level":3,"title":"size_t ElementLength()","slug":"size-t-elementlength","link":"#size-t-elementlength","children":[]},{"level":3,"title":"size_t ByteOffset()","slug":"size-t-byteoffset","link":"#size-t-byteoffset","children":[]},{"level":3,"title":"size_t ByteLength()","slug":"size-t-bytelength","link":"#size-t-bytelength","children":[]},{"level":3,"title":"案例：passing_typed_array_to_native","slug":"案例-passing-typed-array-to-native","link":"#案例-passing-typed-array-to-native","children":[]}]},{"level":2,"title":"Reference","slug":"reference","link":"#reference","children":[{"level":3,"title":"FunctionReference","slug":"functionreference","link":"#functionreference","children":[]}]},{"level":2,"title":"AsyncWorker","slug":"asyncworker","link":"#asyncworker","children":[{"level":3,"title":"作用","slug":"作用","link":"#作用","children":[]},{"level":3,"title":"使用场景","slug":"使用场景","link":"#使用场景","children":[]},{"level":3,"title":"Queue 方法","slug":"queue-方法","link":"#queue-方法","children":[]},{"level":3,"title":"Execute 和 OnOK 的重写","slug":"execute-和-onok-的重写","link":"#execute-和-onok-的重写","children":[]},{"level":3,"title":"线程执行环境","slug":"线程执行环境","link":"#线程执行环境","children":[]},{"level":3,"title":"如何安全调用 JavaScript 函数","slug":"如何安全调用-javascript-函数","link":"#如何安全调用-javascript-函数","children":[]},{"level":3,"title":"工作线程池","slug":"工作线程池","link":"#工作线程池","children":[]},{"level":3,"title":"为什么 Execute 方法不会互相阻塞","slug":"为什么-execute-方法不会互相阻塞","link":"#为什么-execute-方法不会互相阻塞","children":[]},{"level":3,"title":"案例：my_async_worker","slug":"案例-my-async-worker","link":"#案例-my-async-worker","children":[]},{"level":3,"title":"案例：async_worker_call_js_function","slug":"案例-async-worker-call-js-function","link":"#案例-async-worker-call-js-function","children":[]},{"level":3,"title":"案例：async_worker_promise","slug":"案例-async-worker-promise","link":"#案例-async-worker-promise","children":[]}]},{"level":2,"title":"线程安全函数threadsafe_function","slug":"线程安全函数threadsafe-function","link":"#线程安全函数threadsafe-function","children":[{"level":3,"title":"构造函数()","slug":"构造函数-5","link":"#构造函数-5","children":[]},{"level":3,"title":"构造函数(tsfn)","slug":"构造函数-tsfn","link":"#构造函数-tsfn","children":[]},{"level":3,"title":"New(...)","slug":"new-2","link":"#new-2","children":[]},{"level":3,"title":"napi_status Acquire()","slug":"napi-status-acquire","link":"#napi-status-acquire","children":[]},{"level":3,"title":"napi_status Release()","slug":"napi-status-release","link":"#napi-status-release","children":[]},{"level":3,"title":"napi_status Abort()","slug":"napi-status-abort","link":"#napi-status-abort","children":[]},{"level":3,"title":"napi_status BlockingCall()/NonBlockingCall()","slug":"napi-status-blockingcall-nonblockingcall","link":"#napi-status-blockingcall-nonblockingcall","children":[]},{"level":3,"title":"案例：thread_safe_function_demo","slug":"案例-thread-safe-function-demo","link":"#案例-thread-safe-function-demo","children":[]}]}],"git":{"createdTime":1713716446000,"updatedTime":1721773518000,"contributors":[{"name":"YiguiDing","email":"2449695354@qq.com","commits":5}]},"readingTime":{"minutes":34.87,"words":10461},"filePathRelative":"后端/Node-Addon学习笔记/index.md","localizedDate":"2024年4月15日","excerpt":"","autoDesc":true}');export{va as comp,Na as data};

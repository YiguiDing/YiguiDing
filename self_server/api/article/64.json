{"shortInfo":{"title":"《数据结构与算法分析》第4章_3.表达式树","cover":"/self_server/assets/images/《数据结构与算法分析》学习笔记/cover.png","coverWidth":813,"coverHeight":539,"date":"2022-05-27T13:18:06.000Z","modified":"2022-05-28T20:26:14.083Z","tags":["《数据结构与算法分析》","笔记"],"hideAtIndex":true,"categories":"笔记","id":64,"countWords":689,"readSeconds":68.9,"assetsbaseUrl":"/self_server/assets/"},"content":"# 第4章_3.表达式树\r\n## 二叉树的应用\r\n* 表达式树\r\n* 查找\r\n* 编译器设计\r\n\r\n## 表达式树(expression tree)\r\n* 树叶是操作数（operand），常量或变量\r\n* 根是操作符（operator）,单目或双目或三目运算符\r\n  + 对于单目运算符，一个节点有一个叶子；\r\n  + 双目运算符，一个节点有两个叶子；\r\n  + 三目运算符，一个节点有三片叶子。\r\n* 通过递归可以计算一个节点的两个子树的值，从而得到两个操作数的具体值。\r\n![](./images/《数据结构与算法分析》学习笔记/Clipboard_2022-05-28-04-41-02.png)\r\n\r\n### 几种打印输出方式\r\n* **打印输出中缀表达式(infix expression)：**\r\n    + 这种递归方式称为**中序遍历（inorder traversal）** ,先处理左节点，在处理当前所在节点元素，然后再处理右节点。\r\n    + 递归时的打印输出顺序为：左括号、左表达式、操作符号、右表达式、右括号\r\n    + 输出结果大概为：```（（A+(B * C))+(（ ( d * e ) + f ） * g)）```\r\n\r\n*  **打印输出后缀表达式：** \r\n    + 这种递归方式称为**后序遍历（postorder traversal）**\r\n    + 递归时的打印输出顺序为：左操作数、右操作数、操作符\r\n    + 输出结果大概为：``a b c * + d e * f +g *+``\r\n\r\n*  **打印输出前缀表达式：** \r\n    + 这种递归方式称为**先序遍历（preorder traversal）**\r\n    + 递归时的打印输出顺序为：操作符 左操作数、右操作数、\r\n    + 输出结果大概为：``+ + a * b c * + * d e f g``\r\n\r\n## 一种将后缀表达式转变为表达式树的算法\r\n* 算法步骤：\r\n  1. 扫描输入字符\r\n  1. 输入是数字，\r\n      1. 构建表达式树，\r\n      1. 存入操作数，\r\n      1. 对该树的地址执行入栈操作\r\n  1. 输入是双目操作符，\r\n      1. 构建一个表达式树，\r\n      1. 存入操作符，\r\n      1. 执行两次出栈操作，\r\n      1. 将出栈的两棵树挂到表达式树上，\r\n      1. 再对该树的地址执行入栈操作\r\n  1. 循环执行上述步骤，直至字符读取完\r\n  1. 弹出栈顶地址，该地址就是该表达式树的指针\r\n\r\n* **书中演示的过程：**\r\n  ![](./images/《数据结构与算法分析》学习笔记/Clipboard_2022-05-28-05-10-55.png)\r\n  ![](./images/《数据结构与算法分析》学习笔记/Clipboard_2022-05-28-05-11-06.png)\r\n  ![](./images/《数据结构与算法分析》学习笔记/Clipboard_2022-05-28-05-11-22.png)\r\n  ![](./images/《数据结构与算法分析》学习笔记/Clipboard_2022-05-28-05-11-31.png)\r\n  ![](./images/《数据结构与算法分析》学习笔记/Clipboard_2022-05-28-05-11-39.png)\r\n  ![](./images/《数据结构与算法分析》学习笔记/Clipboard_2022-05-28-05-11-46.png)\r\n  ![](./images/《数据结构与算法分析》学习笔记/Clipboard_2022-05-28-05-11-55.png)\r\n\r\n"}
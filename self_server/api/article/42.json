{"shortInfo":{"title":"SQL学习笔记","date":"2022-08-30T19:29:00.000Z","cover":"/self_server/assets/images/default_cover2.jpg","tags":["SQL"],"hideAtIndex":true,"categories":"笔记","id":42,"countWords":2247,"readSeconds":224.7,"assetsbaseUrl":"/self_server/assets/"},"content":"# SQL学习笔记\r\n\r\n## 目录\r\n- [SQL学习笔记](#sql学习笔记)\r\n  - [目录](#目录)\r\n  - [概念](#概念)\r\n  - [数据类型和字段特殊标识](#数据类型和字段特殊标识)\r\n  - [SQL语法](#sql语法)\r\n    - [注释](#注释)\r\n    - [数据库相关](#数据库相关)\r\n    - [表相关](#表相关)\r\n    - [SELECT 查询](#select-查询)\r\n    - [INSERT 插入](#insert-插入)\r\n    - [UPDATE 更新](#update-更新)\r\n    - [DELETE 删除](#delete-删除)\r\n    - [WHERE 子句](#where-子句)\r\n    - [WHERE 子句 的 AND 和 OR](#where-子句-的-and-和-or)\r\n    - [ORDER BY 子句 排序](#order-by-子句-排序)\r\n    - [ORDER BY 子句 `多重排序`](#order-by-子句-多重排序)\r\n    - [COUNT(*)函数](#count函数)\r\n    - [AS 为列设置列名](#as-为列设置列名)\r\n  - [2022_09_22课堂笔记](#2022_09_22课堂笔记)\r\n    - [基本概念](#基本概念)\r\n    - [数据模型](#数据模型)\r\n  - [2022_10_10课堂笔记](#2022_10_10课堂笔记)\r\n    - [SQL](#sql)\r\n    - [定义模式](#定义模式)\r\n    - [创建表](#创建表)\r\n    - [插入数据](#插入数据)\r\n    - [修改表](#修改表)\r\n  - [数据查询](#数据查询)\r\n    - [where子句 between关键字](#where子句-between关键字)\r\n    - [where子句 in关键字](#where子句-in关键字)\r\n    - [where子句 字符串匹配](#where子句-字符串匹配)\r\n    - [where子句 `is null` 空值查询](#where子句-is-null-空值查询)\r\n    - [order by 子句](#order-by-子句)\r\n\r\n## 概念\r\n\r\n**常见数据库**\r\n* `MySQL` 使用最广泛最流行的数据库,开源,分为社区版(免费)和企业版\r\n  * `MySQL WorkBench`为其配套的连接和管理数据库的图像化界面\r\n* `Oracle` 收费\r\n* `SQL Server` 收费(由微软开发)\r\n* `MongoDB` 分为社区版(免费)和企业版\r\n\r\n**区分**\r\n* 关系型数据库,SQL数据库\r\n  * MySQL\r\n  * Oracle\r\n  * SQL Server\r\n* 非关系型数据库,NoSQL数据库\r\n  * MongoDB\r\n\r\n\r\n**关系型数据库组织结构的组成**\r\n* 数据库database : 一般每个项目都有一个单独的数据库\r\n* 数据表table : 不同的数据存入不同的表 如:student表 class表 \r\n* 数据行row : 表中一行就是一条具体的数据\r\n* 字段field : 决定能够存储数据的类型,数据的名称,如id name age\r\n\r\n\r\n## 数据类型和字段特殊标识\r\n\r\n\r\n**数据类型**\r\n* INT 整数\r\n* varchar(len) 长度不超过len的字符串\r\n* TinyInt(1) 布尔值\r\n\r\n**字段特殊标识**\r\n* PK(Primary Key) 主键\r\n* NN(Not NULL) 不允许为空\r\n* UQ(Unique) 唯一\r\n* B(Binary)\r\n* UN(Unsigned) 无符号\r\n* ZF(Zero Fill)\r\n* G(Generated)\r\n* AI(Auto Increment) 值自动增长\r\n* default 默认值\r\n\r\n\r\n![图 4](./images/SQL学习笔记/9f237b06e403823a93e74262adfefaaa789ffffef977a68ea559930c26eaeea7.png) \r\n\r\n\r\n**创建表**\r\n```sql\r\nCREATE TABLE `my_db_01`.`users` (\r\n  `id` INT NOT NULL AUTO_INCREMENT COMMENT '主键',\r\n  `username` VARCHAR(45) NOT NULL COMMENT '用户登陆名',\r\n  `password` VARCHAR(45) NOT NULL COMMENT '用户登陆密码',\r\n  `status` TINYINT(1) NOT NULL DEFAULT 0 COMMENT '0 用户状态正常\\n1 用户被禁用',\r\n  PRIMARY KEY (`id`),\r\n  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE,\r\n  UNIQUE INDEX `username_UNIQUE` (`username` ASC) VISIBLE);\r\n\r\n```\r\n\r\n**插入数据**\r\n```sql\r\nINSERT INTO `my_db_01`.`users` (`username`, `password`) VALUES ('DingYigui', '123');\r\n```\r\n\r\n\r\n\r\n## SQL语法\r\n### 注释\r\n```sql\r\n-- 这是注释\r\n```\r\n\r\n### 数据库相关\r\n```sql\r\n-- 查看所有的数据\r\nSHOW DATABASES; \r\n\r\n-- 创建数据库\r\nCREATE DATABASE db_01;\r\n\r\n-- 删除数据库\r\nDROP DATABASE db_01;\r\n\r\n-- 使用数据库\r\nUSE db_01;\r\n\r\n```\r\n\r\n\r\n### 表相关\r\n```sql\r\n\r\n-- 查看当前数据库中所有的表\r\nSHOW TABLES;\r\n\r\n-- 创建表\r\nCREATE TABLE 表名称\r\n(\r\n列名称1     数据类型    约束规则,\r\n列名称2     数据类型    约束规则,\r\n列名称3     数据类型    约束规则,\r\n)\r\n--- 创建user表\r\nCREATE TABLE users(\r\n  id INT auto_increment PRIMARY KEY,\r\n  name VARCHAR(255) NOT NULL,\r\n  age INT ,\r\n  gender VARCHAR(4),\r\n  content VARCHAR(255)\r\n);\r\n\r\n-- 删除表\r\nDROP TABLE users;\r\n```\r\n\r\n### SELECT 查询\r\n```sql\r\n-- SELECT语法格式\r\nSELECT 列名 FROM 表名 ;\r\n\r\n-- 选中该表的所有列\r\nSELECT * FROM 表名 ;\r\n\r\n-- 模糊查询 %表示通配 _ 表示单字符\r\nSELECT * from user where name LIKE '丁%'\r\n\r\n-- in语句\r\nSELECT * from user where name in ('DYG', 'dyg')\r\n\r\n-- limit分页\r\nSELECT * from user ORDER BY id desc limit 3\r\nSELECT * from user ORDER BY id desc limit 3,3\r\n\r\n\r\n-- 选中表中的username,password\r\nSELECT username,password FROM users ;\r\n```\r\n\r\n### INSERT 插入\r\n```sql\r\n--- \r\n-- INSERT语法格式\r\nINSERT INTO 表名 (列名1,列名2,...) VALUES (列值1,列值2,...) ;\r\nINSERT INTO 表名 SET 列名1 = 列值1 ,列名2 = 列值2 ,列名3 = 列值3 ;\r\nINSERT INTO 表名 VALUES (列值1, 列值2, 列值3, 列值4, 列值5) --若省略列名则列值位置需一一对应\r\n\r\n-- 插入一条数据\r\nINSERT INTO users (username,password) VALUES (\"DYG\",\"321\") ;\r\n```\r\n\r\n### UPDATE 更新\r\n```sql\r\n--- UPDATE语法格式\r\nUPDATE 表名 SET 列名1 = 新的列值1  WHERE 列名 = 列值 ;\r\nUPDATE 表名 SET 列名1 = 新的列值1 , 列名2 = 新的列值2  WHERE 列名 = 列值 ;\r\n\r\n--- 将id为2的用户密码修改为222\r\nUPDATE users SET password = 222 WHERE id = 2 ;\r\nUPDATE users SET username = \"admin\" , password = \"admin\" WHERE id = 1 ;\r\n\r\n--- 注意: 不加 WHERE 会修改所有用户的密码 \r\n```\r\n\r\n### DELETE 删除\r\n```sql\r\n---DELETE 语法\r\nDELETE FROM 表名 --删除所有用户数据\r\nDELETE FROM 表名 WHERE 列名 = 列值 ; --删除指定数据\r\n\r\n--- 删除id为3的用户\r\nDELETE FROM users WHERE id = 3 ;\r\n\r\n--- 注意: 不加 WHERE 会删除所有用户 \r\n```\r\n\r\n### WHERE 子句\r\n`WHERE` 子句用于**限定选择的标准**  \r\n\r\n`WHERE` 子句在 `SELECT` `UPDATE` `DELETE` 中皆可使用\r\n```sql\r\n--- 查询语句中的WHERE\r\nSELECT 列名 FROM 表名\r\n    WHERE 列名 = 列值 ;\r\n\r\n--- 更新语句中的WHERE\r\nUPDATE 表名 SET 列名 = 新的列值\r\n    WHERE 列名 = 列值 ;\r\n\r\n--- 删除语句中的WHERE\r\nDELETE FROM 表名\r\n    WHERE 列名 = 列值 ;\r\n```\r\n\r\n**WHERE子句的运算符**  \r\n|  操作符  |     描述     |\r\n| :------: | :----------: |\r\n|    =     |     等于     |\r\n| <> 或 != |    不等于    |\r\n|    >     |     大于     |\r\n|    <     |     小于     |\r\n|    >=    |   大于等于   |\r\n|    <=    |   小于等于   |\r\n| BETWEEN  | 在某个范围内 |\r\n|   LIKE   | 搜索某种模式 |\r\n\r\n```sql\r\n--- 删除除admin以外的所有用户\r\nDELETE FROM 表名\r\n    WHERE username != \"admin\" ;\r\n```\r\n\r\n### WHERE 子句 的 AND 和 OR\r\n```sql\r\n--- AND 和 OR 的语法格式\r\nSELECT 列名 FROM 表名\r\n    WHERE 条件1 AND 条件2;\r\n\r\nSELECT 列名 FROM 表名\r\n    WHERE 条件1 OR 条件2;\r\n```\r\n\r\n### ORDER BY 子句 排序\r\n```sql\r\n--- ORDER BY语法格式;默认升序排序\r\nSELECT 列名 FROM 表名\r\n    ORDER BY 列名;\r\n\r\n--- ORDER BY语法格式;ASC为升序排序\r\nSELECT 列名 FROM 表名\r\n    ORDER BY 列名 ASC;\r\n\r\n--- ORDER BY语法格式;DESC为降序排序\r\nSELECT 列名 FROM 表名\r\n    ORDER BY 列名 DESC;\r\n```\r\n\r\n### ORDER BY 子句 `多重排序`\r\n```sql\r\n--- ORDER BY多重排序 语法格式:\r\nSELECT 列名 FROM 表名\r\n    ORDER BY 列名1 ASC,列名2 DESC; ---先按列名1升序排序 再按列名2降序排序\r\n```\r\n\r\n### COUNT(*)函数\r\n返回`SELECT`查询结果的总条数\r\n```sql\r\n--- COUNT(*)语法\r\nSELECT COUNT(*) FROM 表名;\r\n```\r\n**示例**\r\n```sql\r\n--- 示例: 统计users表中status为1的用户数\r\nSELECT COUNT(*) FROM users\r\n    WHERE status=1;\r\n```\r\n![图 6](./images/SQL学习笔记/6f6bc3d73694312746a9cd28e1c1e094104f34e5fdb7cdf19f64a7ce7486009f.png)  \r\n\r\n\r\n### AS 为列设置列名\r\n```sql\r\n--- AS语法\r\nSELECT 旧列名1 AS 新列名1 , 旧列名2 AS 新列名2 FROM 表名;\r\nSELECT COUNT(*) AS total FROM 表名;\r\n```\r\n\r\n**示例1**\r\n```sql\r\n-- 查询user表的id和username字段,并为user字段起别名uname,为id字段起别名uid\r\nSELECT id AS uid , username AS uname FROM users;\r\n```\r\n![图 8](./images/SQL学习笔记/a0abf515a12f083d098b4a8603999dbd34cb0817f6f48701e8316fed84b13337.png)  \r\n\r\n**示例2**\r\n```sql\r\n-- 统计表中所有数据,并为字段取名为total\r\nSELECT COUNT(*) as total FROM users;\r\n```\r\n![图 7](./images/SQL学习笔记/c6b0ce51605b0c75a54c2dcb85b67257027a67f4ce44a0f8a0249d14773e11e0.png)  \r\n\r\n\r\n\r\n\r\n\r\n\r\n## 2022_09_22课堂笔记\r\n\r\n### 基本概念\r\n* **四个概念**: DATA数据 DB数据库 DBS数据库系统 DBMS数据库管理系统 \r\n* **三个阶段**: 人工管理阶段 文件系统阶段 数据库系统届阶段\r\n* **两个独立性**: 物理独立性 逻辑独立性\r\n* **无法解决的问题**: 无法做到零冗余\r\n\r\n### 数据模型\r\n* **两类数据模型**: 概念模型 逻辑物理模型\r\n* **常用概念模型**: 实体-联系模型(E-R模型)\r\n  * E-R模型三要素: 实体(集) 属性 联系:[一对一(1:1) 一对多(1:n) 多对多(m:n)]\r\n* **主要逻辑模型**\r\n  * 层次模型\r\n  * 网状模型\r\n  * **关系模型**\r\n* 面向对象模型\r\n\r\n## 2022_10_10课堂笔记\r\n\r\n### SQL\r\n\r\n* 数据查询 SELECT\r\n* 数据定义 CREATE DROP ALER\r\n* 数据操作 INSERT UPDATE DELEE\r\n* 数据控制 GRANT REVOKE\r\n\r\n### 定义模式\r\n```sql\r\ncreate schema '模式名' authorization 用户名\r\n```\r\n\r\n### 创建表\r\n```sql\r\ncreate table 表名 (\r\n  列名 数据类型 约束条件,\r\n  列名 INT primary key,\r\n  列名 CHAR(20) unique,\r\n  列名 NUMERIC(10,3),\r\n  列名 DECIMAL(5,2)\r\n);\r\n```\r\n\r\n### 插入数据\r\n```sql\r\ninsert into 表名(Sno,Sname,Ssex,Sdep,Sage) \r\n      values('20121521','张三'，'男'，'cs','20');\r\n```\r\n\r\n\r\n### 修改表\r\n**删除列**\r\n```sql\r\nalter table 表名\r\n    drop column 列名\r\n```\r\n\r\n**增加列**\r\n```sql\r\nalter table 表名\r\n    add 列名 类型 数据约束\r\n```\r\n\r\n**修改列的数据类型**\r\n```sql\r\nalter table 表名\r\n    alter 列名 类型 数据约束\r\n```\r\n\r\n**删除表**\r\n```sql\r\ndrop table 表名 restrict;--有限制的删除表\r\ndrop table 表名 cascade;--无限制的删除表\r\n```\r\n\r\n\r\n## 数据查询\r\n```sql\r\nselect [all|distinct] 目标列表达式 -- distinct用于去重\r\nfrom 表名或视图名 \r\nas 别名\r\nwhere 条件表达式_\r\ngroup by 列名_sex having 表达式\r\norder by 列名_age asc｜desc ---desc降序\r\n\r\n```\r\n\r\n### where子句 between关键字\r\n```sql\r\nselect * from student where Sage between 18 and 20; ---相当于 sage >= 18 && sage <= 20\r\n```\r\n\r\n### where子句 in关键字\r\n```sql\r\nselect * from student where Sdep in(\"CS\",\"MA\",\"IS\"); --- 相当于 sdep == CS ｜｜ sdep == MA ｜｜ sdep == IS\r\n```\r\n\r\n### where子句 字符串匹配\r\n```sql\r\nselect * from student where Sname like \"李_浩\"; -- 匹配单个字符\r\nselect * from student where Sname like \"李__\"; --匹配两个单个单字符\r\nselect * from student where Sname like \"李%\"; --匹配0个或多个字符\r\n```\r\n\r\n### where子句 `is null` 空值查询\r\n```sql\r\n;\r\n```\r\n\r\n### order by 子句\r\n* `asc`升序【默认】\r\n* `desc`降序\r\n* 对于空值，排序顺序由系统决定\r\n\r\n```sql\r\nselect * from student order by Sage desc;\r\n```\r\n\r\n  "}
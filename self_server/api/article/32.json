{"shortInfo":{"title":"LESS层叠样式预处理语言","date":"2022-06-21T00:46:00.000Z","cover":"/self_server/assets/images/default_cover2.jpg","tags":["LESS","CSS","前端"],"hideAtIndex":true,"categories":"笔记","id":32,"countWords":683,"readSeconds":68.3,"assetsbaseUrl":"/self_server/assets/"},"content":"# LESS层叠样式预处理语言\r\n## 目录\r\n- [LESS层叠样式预处理语言](#less层叠样式预处理语言)\r\n  - [目录](#目录)\r\n  - [概述](#概述)\r\n  - [注释](#注释)\r\n  - [运算语法](#运算语法)\r\n  - [选择器嵌套语法](#选择器嵌套语法)\r\n  - [变量](#变量)\r\n  - [导入](#导入)\r\n  - [导出位置修改](#导出位置修改)\r\n    - [修改方法1](#修改方法1)\r\n    - [修改方法2](#修改方法2)\r\n  - [禁止导出](#禁止导出)\r\n\r\n## 概述\r\n* less是一个**css的预处理器**\r\n* less文件后缀是.less\r\n* 优点：\r\n    * 它扩充了 CSS 语言，\r\n    * 增加了诸如变量、混合（mixin）、函数等功能，\r\n    * 让 CSS 更易维护,简化了 CSS 的编写\r\n\r\n* vscode插件EasyLESS\r\n    * 可以在保存的时候自动编译生成同名的.css文件\r\n\r\n## 注释\r\n* 单行注释：`//注释内容`\r\n* 多行注释：`/* 注释内容 */` 多行注释会同步生成到css文件中\r\n\r\n## 运算语法\r\n* 加`+`\r\n* 减`-`\r\n* 乘`*` \r\n* 除法需要添加`(小括号)`或`.`\r\n    * `(1/1)`\r\n    * `1./1`\r\n    ```less\r\n    div{\r\n        // 加\r\n        height:10+10px;\r\n        // 减\r\n        height:10-10px;\r\n        // 乘\r\n        height:10*10px;\r\n        // 除\r\n        height:(10/10px);\r\n        height:10./10px;\r\n    }\r\n    ```\r\n* 注意：less4.0之前可以直接写`1 / 1`\r\n\r\n## 选择器嵌套语法\r\n* css后代选择器的写法比较冗长，但为了保证其选择器的权重又不得不这样写\r\n* less嵌套写法可以快速生成css语法的后代选择器\r\n* 语法格式\r\n    ```less\r\n    父选择器{\r\n        // 父级样式\r\n        子选择器{\r\n            // 子级样式\r\n        }\r\n    }\r\n    ```\r\n* 示例写法\r\n    ```less\r\n    .father{\r\n        width:100px;\r\n        .son{\r\n            width:50px;\r\n        }\r\n    }\r\n    ```\r\n* 生成css代码\r\n    ```css\r\n    .father{\r\n        width:100px;\r\n    }\r\n    .father .son{\r\n            width:50px;\r\n        }\r\n    ```\r\n* 注意： **`&`表示当前选择器，通常配合伪元素或伪类使用**\r\n    ```less\r\n    .father{\r\n        width:100px;\r\n        .son{\r\n            width:50px;\r\n        }\r\n        &:hover{\r\n            width:60px;\r\n        }\r\n    }\r\n    ```\r\n\r\n## 变量\r\n* 定义变量：`@变量名:值;`\r\n* 使用示例：\r\n    ```less\r\n    @bgcolor:#333;\r\n    div{\r\n        background-color:@bgcolor;\r\n    }\r\n    ```\r\n\r\n## 导入\r\n* 语法格式：`@import \"path/to/fileName.less\";`\r\n* 省略后缀：`@import \"path/to/fileName\";`\r\n* 注意: import之后后**一定**要有空格\r\n* 和c语言include含义类似，实际上就是把另一个文件的内容复制到该位置\r\n\r\n## 导出位置修改\r\n* 默认生成的css文件导出在当前文件所在位置\r\n* 一般less可以写在网站根目录的less文件夹\r\n* 导出的文件目录在网站根目录的css文件夹\r\n\r\n### 修改方法1\r\n配置vscode的easyLess插件\r\n\r\n* 注意：\r\n    * `*/css/`表示存放在`css`**文件夹** \r\n    * `*/css`表示存放为一个名为`css`的**文件**\r\n\r\nsetting.json\r\n```json\r\n{\r\n    \"less.compile\":{\r\n        \"out\":\"../css/\"\r\n    }\r\n}\r\n```\r\n\r\n### 修改方法2\r\n控制单个文件的导出路径\r\n\r\n* 语法：\r\n    * **写在第一行:**\r\n    * `//out: ./out/`\r\n\r\n## 禁止导出\r\n* 对于`base.less`、`common.less`等类似的公共样式文件，可以禁止其导出为css文件\r\n* 语法：`//out: false`\r\n* 如要调用这些被禁止导出的样式，可以使用`@import`导入"}
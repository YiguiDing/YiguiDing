{"shortInfo":{"title":"mkcert生成自签https证书过程记录","cover":"\\self_server\\assets\\images\\default_cover2.jpg","date":"2022-08-22T14:45:00.000Z","tags":["mkcert","自签","https","证书"],"hideAtIndex":true,"categories":"笔记","id":35,"countWords":1063,"readSeconds":106.3,"assetsbaseUrl":"/self_server/assets/"},"content":"# mkcert生成自签https证书过程记录\r\n## 目录\r\n- ](#mkcert生成自签https证书过程记录)\r\n  - ](#目录)\r\n  - ](#相关概念)\r\n  - ](#安装mkcert)\r\n  - ](#生成用户证书)\r\n  - ](#安装颁发者证书)\r\n    - ](#在pc端安装)\r\n    - ](#在ios端安装)\r\n\r\n## 相关概念\r\n* **数字证书认证机构（CA），**\r\n  * 是负责发放和管理数字证书的权威机构，\r\n  * 负责签发证书、认证证书、管理已颁发证书\r\n  * CA 也拥有用户的证书（内含公钥）和私钥。\r\n  * 任何人都可以得到 CA 的证书（含公钥），用以验证 CA 所签发的证书。\r\n* **用户证书**\r\n  * 用户若欲获取证书，应先向 CA 提出申请，CA 判明申请者的身份后，为之分配一个公钥，并将该公钥与其身份信息绑定，为该整体签名，签名后的整体即为证书，发还给申请者。\r\n* **鉴别用户证书的真伪**\r\n  * 一个用户想鉴别另一个用户的证书的真伪，用 CA 的公钥对那个证书上的签字进行验证，一旦验证通过，该证书就被认为是有效的。\r\n\r\n\r\n\r\n## 安装mkcert\r\n**安装mkcert工具**\r\n```bash\r\nsudo apt-get install mkcert\r\n```\r\n\r\n\r\n## 生成用户证书\r\n**生成证书:`cert.crt` 和 私钥:`cert-key.key`**\r\n```bash\r\nmkcert -cert-file ~/.ssl/cert.crt -key-file ~/.ssl/cert-key.key cn-zz-bgp-2.natfrp.cloud 43.249.193.55 localhost 127.0.0.1 ::1\r\n\r\n# 输出结果:\r\n# Created a new local CA 💥\r\n# Note: the local CA is not installed in the system trust store.\r\n# Note: the local CA is not installed in the Firefox and/or Chrome/Chromium trust store.\r\n# Run \"mkcert -install\" for certificates to be trusted automatically ⚠️\r\n# \r\n# Created a new certificate valid for the following names 📜\r\n#  - \"cn-zz-bgp-2.natfrp.cloud\"\r\n#  - \"43.249.193.55\"\r\n#  - \"localhost\"\r\n#  - \"127.0.0.1\"\r\n#  - \"::1\"\r\n# \r\n# The certificate is at \"~/.ssl/cert.crt\" and the key at \"~/.ssl/cert-key.key\" ✅\r\n# \r\n# It will expire on 22 November 2024 🗓\r\n# \r\n# \r\n```\r\n\r\n**配置服务器安装用户证书(以code-server为例)**\r\n```bash\r\n# vi ~/.config/code-server/config.yaml\r\n# code-server的配置文件:\r\nbind-addr: 0.0.0.0:8080\r\nauth: password\r\npassword: ???????????????????????\r\n# cert 为刚刚生成的证书\r\ncert: /home/userName/.ssl/cert.crt\r\n# cert-key 为刚刚生成的私钥\r\ncert-key: /home/userName/.ssl/cert-key.key\r\n```\r\n\r\n**此时访问localhost将依然报错,因为没有为浏览器安装颁发者的证书**\r\n\r\n![](./images/mkcert生成自签https证书过程记录/98e2d9d7e5fd0ced7043c50a28be71243a50b4830341e38753308ed6f96eac4f.png)  \r\n\r\n## 安装颁发者证书\r\n\r\n### 在PC端安装\r\n**方法1:使用命令将颁发者mkcert机构证书添加到系统信任,同时安装到本机的火狐浏览器和谷歌浏览器**\r\n```bash\r\nmkcert -install\r\n\r\n# 输出结果:\r\n# \r\n# The local CA is now installed in the system trust store! \r\n# 翻译:本地证书已经添加到到系统信任仓库\r\n# Warning: \"certutil\" is not available, so the CA can't be automatically installed in Firefox and/or Chrome/Chromium! ⚠️\r\n# 翻译:certutil(证书工具)不可用,所以证书无法自动安装到本机的浏览器\r\n# Install \"certutil\" with \"apt install libnss3-tools\" and re-run \"mkcert -install\" 👈\r\n# 翻译: 执行 \"apt install libnss3-tools\"来安装\"certutil\",然后 重新执行 \"mkcert -install\"\r\n\r\n# 安装libnss3-tools\r\napt install libnss3-tools\r\n# 重新执行 \"mkcert -install\"\r\nmkcert -install\r\n```\r\n\r\n**此时浏览器就能正常访问了**\r\n\r\n![](./images/mkcert生成自签https证书过程记录/ea42bffa2f50e7090b52dced9381273fb9276f334a863d6e8c1cda6b3030a98e.png)  \r\n\r\n\r\n\r\n**方法2:手动将颁发者mkcert机构证书手动添加到客户端的浏览器**\r\n**查看 CA 证书的存放位置**\r\n```bash\r\nmkcert -CAROOT\r\n# 输出结果:\r\n# /root/.local/share/mkcert\r\n\r\ntree $(mkcert -CAROOT)\r\n# 输出结果: \r\n# /home/dyg/.local/share/mkcert\r\n# ├── rootCA-key.pem 颁发者机构的私钥\r\n# └── rootCA.pem 颁发者机构的证书\r\n```\r\n\r\n**然后将上述颁发者mkcert机构证书文件`rootCA.pem`手动添加到pc端的浏览器中**\r\n\r\n![](./images/mkcert生成自签https证书过程记录/d54fd4c159d8f58627c6ec16a28ced8b2f47fd3a1b7d57dedd94031a6c68c6d3.png)  \r\n\r\n\r\n### 在IOS端安装\r\n\r\n**将颁发者mkcert机构证书手动添加到**\r\n\r\n**安装前**\r\n![](./images/mkcert生成自签https证书过程记录/6c7400885884577a2b676133ffe162ed3485dea02996e03b7c9c9ef45c307f7d.png)  \r\n\r\n![](./images/mkcert生成自签https证书过程记录/c0eb4ee022cca679c29669fd4cd0171fb124ccacec29670bb9dcdca59d46176c.png)  \r\n\r\n\r\n**安装中**\r\n![](./images/mkcert生成自签https证书过程记录/273368cf71de2ec25d2f2db736245f692c0a4d209a18a8c7d8f2bb9c64d0c1ec.png)  \r\n![](./images/mkcert生成自签https证书过程记录/816173bb4129ce92bbb68192a9f57d0218df7d1f3fb78ba2f6e0ce90a37f858d.png)  \r\n![](./images/mkcert生成自签https证书过程记录/8146b3f22175a2139a6edd516eabedd020c7d394772057d918fba0c2d00ed3fc.png)  \r\n![](./images/mkcert生成自签https证书过程记录/3a54b606903275febc7a5e9d03f031bab96c4e1aa09b64e986b5b405a5581d48.png)  \r\n![](./images/mkcert生成自签https证书过程记录/379bb20613e6ebf812129a2ce13ca9a14eef295f69cdc41ecb5b40a9f45346bc.png)  \r\n![](./images/mkcert生成自签https证书过程记录/df4be11a914591cdeb1327c453b4d988bca8de2ce1deb45ab89f4015e821527e.png)  \r\n\r\n\r\n\r\n\r\n**安装后**\r\n![](./images/mkcert生成自签https证书过程记录/6e926867c2eb90dbcebe8911a7863ea099f4bc6c2230fafb7a94982fd8d4e4cd.png)  \r\n\r\n![](./images/mkcert生成自签https证书过程记录/b67d7716a9270e7e723ba322faa4293cf706c1e35d8b7969ee5356446923b6e7.png)  \r\n"}
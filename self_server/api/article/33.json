{"shortInfo":{"layout":"post","title":"Linux备忘笔记","date":"2022-01-09T12:28:00.000Z","cover":"\\self_server\\assets\\images\\linux2.webp","tags":["笔记","Linux"],"hideAtIndex":true,"categories":"笔记","id":33,"countWords":956,"readSeconds":95.6,"assetsbaseUrl":"/self_server/assets/"},"content":"# linux备忘笔记\r\n\r\n\r\n\r\n## 删除已设置生效的root密码\r\n```bash\r\n# 删除root:x: 中的x密码占位符号\r\nvim /etc/passwd\r\n# 删除root:xxxxxxxxxx: 中的xxxxxxxxxxxxxxxxxx加密后的密码，改为*\r\nvim /etc/shadow\r\n\r\n# 没有权限则重启进入拯救模式\r\n```\r\n\r\n## 用户管理\r\n**usermod**\r\n```bash\r\n# usermod 可选项：\r\n#     -d <登入目录>     修改用户登入时的目录。\r\n#     -g <群组>         修改用户所属的群组。\r\n#     -G <群组>         修改用户所属的附加群组。\r\n#     -l <帐号名称>     修改用户帐号名称(新账号在前，旧账号在后)\r\n#     -L                锁定用户密码，使密码无效。\r\n#     -s <shell>        修改用户登入后所使用的shell。\r\n#     -u <uid>          修改用户ID。\r\n#     -U                解除密码锁定。\r\n```\r\n\r\n\r\n## 权限管理\r\n**查看用户组的成员**\r\n```bash\r\nvi /etc/group\r\n```\r\n\r\n\r\n\r\n\r\n## 常用命令\r\n* 查看所有运行的任务和pid\r\n    + ps aux \r\n    + a 显示现行终端机下的所有程序，包括其他用户的程序。\r\n    + u 以用户为主的格式来显示程序状况。\r\n    + x 显示所有程序，不以终端机来区分。\r\n* 查看端口监听情况\r\n    + 软件包名：net-tools\r\n    + netstat -tunlp\r\n    + -a 全部\r\n    + -c或--continuous：持续列出网络状态；\r\n    + -l或--listening：显示监控中的服务器的Socket；\r\n    + -u或--udp：显示UDP传输协议的连线状况；\r\n    + -t或--tcp：显示TCP传输协议的连线状况；\r\n    + -n或--numeric：直接使用ip地址，而不通过域名服务器；\r\n    + -p或--programs：显示正在使用Socket的程序识别码和程序名称；\r\n\r\n* ctrl + z 将一个正在前台执行的命令放到后台，并且暂停\r\n*  jobs 查看当前有多少在后台运行的命令\r\n    + 无参数 查看当前作业\r\n    + -l 列出进程的PID和作业号\r\n    + -p 只列出作业的PID\r\n    + -s 只列出停止的作业\r\n    + -r 只列出运行的作业\r\n* fg 将后台中的命令调至前台继续运行\r\n* bg 将一个在后台暂停的命令，变成继续执行\r\n* commend & 后台执行一个程序\r\n* linux命令后台运行.两种方式：\r\n    * command & ： 后台运行，你关掉终端会停止运行\r\n    * nohup command & ： 后台运行，你关掉终端也会继续运行\r\n\r\n### 偶尔会忘的操作\r\n* 将普通用户加入wheel组使其获得sudo权限\r\n   * useradd dyg -G wheel 或者\r\n   * usermod dyg -G wheel\r\n* 递归更改文件夹属组\r\n   * chmod -R dyg:dyg 文件名\r\n\r\n\r\n## 软件安装升级\r\n1. 安装c++编译器\r\n    * yum install gcc gcc-c++ \r\n2. 安装make\r\n    * yum install make\r\n3. 安装nodejs \r\n    * yum install nodejs\r\n4. 安装指定版本的nodejs \r\n    1. 官网找到下载链接后\r\n        * wget https://npmmirror.com/mirrors/node/v16.13.1/node-v16.13.1-linux-x64.tar.xz\r\n    2. 解压 【v显示解压过程，x解压，f指定解压文件，z解压后缀为gz的压缩包】\r\n       * tar vxf node-v16.13.1-linux-x64.tar.xz\r\n       * tar vxfz node-v16.13.1-linux-x64.tar.gz  \r\n    3. 创建软连接；【-s表示soft 软】\r\n        * ln -s /home/用户名/node-v16.13.1-linux-x64/bin/node /usr/local/bin/\r\n        * ln -s /home/用户名/node-v16.13.1-linux-x64/bin/npm /usr/local/bin/\r\n5. CentOS8完美升级gcc版本方法\r\n   1. 安装gcc-toolset-10\r\n\t    * dnf install gcc-toolset-10\r\n   2. 激活gcc版本，使其生效\r\n      \t* scl enable gcc-toolset-10 bash 或\r\n      \t* source /opt/rh/gcc-toolset-10/enable\r\n   3. 此时通过gcc --version命令可以看到，gcc版本已经变成10.x.x，\r\n        ```\r\n        值得注意的是这仅仅在当前bash生效，\r\n        如果需要永久生效，可以请自行添加环境变量。\r\n        仅适用于CentOS8、Redhat8版本\r\n        在CentOS8版本中，红帽也提供了开发工具包管理gcc版本，\r\n        install的包名从devtoolset-x变成了gcc-toolset-x，\r\n        通过该方式升级gcc好处就是随时可以切换gcc版本，不破坏原有gcc环境。\r\n        gcc-toolset-9对应gcc9.x.x版本\r\n        gcc-toolset-10对应gcc10.x.x版本\r\n        ```\r\n"}
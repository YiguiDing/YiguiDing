{"shortInfo":{"title":"CSS3进阶笔记","cover":"\\self_server\\assets\\images\\default_cover2.jpg","date":"2022-06-16T17:51:00.000Z","tags":["CSS","前端"],"hideAtIndex":true,"categories":"笔记","id":1157729724,"countWords":5918,"readSeconds":591.8,"assetsbaseUrl":"/self_server/assets/"},"content":"# CSS3进阶笔记\r\n\r\n## 目录\r\n- [CSS3进阶笔记](#css3进阶笔记)\r\n  - [目录](#目录)\r\n  - [字体图标](#字体图标)\r\n  - [阿里巴巴矢量字体库iconfont使用步骤](#阿里巴巴矢量字体库iconfont使用步骤)\r\n  - [平面转换](#平面转换)\r\n    - [平面位移](#平面位移)\r\n    - [平面旋转](#平面旋转)\r\n    - [位移旋转缩放的中心点更改](#位移旋转缩放的中心点更改)\r\n    - [多重转换](#多重转换)\r\n    - [平面缩放](#平面缩放)\r\n    - [使用transform的居中和缩放](#使用transform的居中和缩放)\r\n  - [空间转换](#空间转换)\r\n    - [透视](#透视)\r\n    - [空间位移](#空间位移)\r\n    - [空间旋转](#空间旋转)\r\n      - [几种空间旋转效果测试](#几种空间旋转效果测试)\r\n    - [立体呈现](#立体呈现)\r\n      - [尝试实现立方体-正交](#尝试实现立方体-正交)\r\n      - [3d导航条实现](#3d导航条实现)\r\n    - [空间缩放](#空间缩放)\r\n      - [对3d立方体盒子的空间缩放测试](#对3d立方体盒子的空间缩放测试)\r\n  - [动画](#动画)\r\n    - [animation动画属性](#animation动画属性)\r\n    - [立方体动画测试](#立方体动画测试)\r\n    - [制作精灵动画](#制作精灵动画)\r\n    - [无缝走马灯动画](#无缝走马灯动画)\r\n  - [渐变背景](#渐变背景)\r\n    - [使用示例1](#使用示例1)\r\n    - [使用示例2-综合案例实现](#使用示例2-综合案例实现)\r\n  - [绘制三角形](#绘制三角形)\r\n  - [毛玻璃效果](#毛玻璃效果)\r\n  - [背景图片的实现方式](#背景图片的实现方式)\r\n\r\n## 字体图标\r\n* 字体图标展示的是图标，实际特性却像是字，可以通过color属性改变颜色\r\n* 字体图标用于处理颜色单一的简单小图（复杂图用精灵图）\r\n* ![](./images/CSS3进阶笔记/2022-06-17-01-55-16.png)\r\n* 优点：\r\n    * 灵活，尺寸颜色可用css属性修改\r\n    * 轻量，体积小渲染快降低服务器请求次数\r\n    * 兼容，几乎兼容所有主流浏览器\r\n    * 方便，\r\n        * 下载字体包\r\n        * 使用字体图标\r\n  \r\n## 阿里巴巴矢量字体库iconfont使用步骤\r\n1. `iconfont.cn`下载字体图标\r\n2. 引入的css文件名为iconfont.css ![](./images/CSS3进阶笔记/2022-06-17-02-23-42.png)\r\n    ```html\r\n    <link rel=\"stylesheet\" href=\"./iconfont/iconfont.css\">\r\n    ```\r\n\r\n3. 调用图标对应的类名，**必须**调用两个类名\r\n    1. `iconfont`类,基本样式，包含字体图标的默认大小和颜色\r\n    2. `icon-xxx`类,图标对应的类名![](./images/CSS3进阶笔记/2022-06-17-02-26-00.png)\r\n    ```html\r\n    <span class=\"iconfont icon-XXX\"></span>\r\n    ```\r\n* iconfont具体实现原理\r\n    * `.iconfont`类\r\n    * ![](./images/CSS3进阶笔记/2022-06-17-02-50-20.png)\r\n    * `.icon-XXX`类\r\n    ![](./images/CSS3进阶笔记/2022-06-17-02-57-28.png)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n## 平面转换\r\n* 作用：改变盒子在**平面(2D)**的形态(**位移** ， 旋转 ， **缩放** )\r\n* 属性名: **transform**\r\n* 语法格式:\r\n    * `transform: translate(水平向右移动距离,垂直向下移动距离);`\r\n    * `transform: translate(自身宽度的百分比,自身高度的百分比);`\r\n    * `transform: translate(只写一个参数表示X轴移动距离);`\r\n    * `transform: translateX(一个参数);`\r\n    * `transform: translateY(一个参数);`\r\n    * \r\n![](./images/CSS3进阶笔记/2022-06-17-04-31-22.png)\r\n\r\n### 平面位移\r\n* `transform: translate(像素,或自身的百分比);`\r\n* 水平和垂直居中\r\n\r\n<div class=\"father\">\r\n    <div class=\"box\">transform: translate(-50%,-50%);</div>\r\n</div>\r\n<style>\r\n    .father{\r\n        position: relative;\r\n        width: 500px;\r\n        height: 300px;\r\n        background: skyblue;\r\n    }\r\n    .father .box{\r\n        position:absolute;\r\n        top: 50%;\r\n        left: 50%;\r\n        transform: translate(-50%,-50%);\r\n        width: 200px;\r\n        height: 100px;\r\n        background-color: green;\r\n        line-height: 100px;\r\n    }\r\n</style>\r\n\r\n```html\r\n<div class=\"father\">\r\n    <div class=\"box\">transform: translate(-50%,-50%);</div>\r\n</div>\r\n<style>\r\n    .father{\r\n        position: relative;\r\n        width: 500px;\r\n        height: 300px;\r\n        background: skyblue;\r\n    }\r\n    .father .box{\r\n        position:absolute;\r\n        top: 50%;\r\n        left: 50%;\r\n        transform: translate(-50%,-50%);\r\n        width: 200px;\r\n        height: 100px;\r\n        background-color: green;\r\n        line-height: 100px;\r\n    }\r\n</style>\r\n```\r\n\r\n\r\n* 天猫\r\n\r\n<div class=\"tianmao-bgi\"></div>\r\n<style>\r\n    .tianmao-bgi{\r\n        width: 683px;\r\n        height: 300px;\r\n        background-image: url(./images/CSS3进阶笔记/bg.jpg);\r\n        background-size: contain;\r\n        /* 溢出部分隐藏 */\r\n        overflow: hidden;\r\n    }\r\n    .tianmao-bgi::before,\r\n    .tianmao-bgi::after{\r\n        display: inline-block;\r\n        content: \"\";\r\n        width: 341px;\r\n        height: 300px;\r\n        background-image: url(./images/CSS3进阶笔记/fm.jpg);\r\n        background-size:cover;\r\n        transition: all 0.5s;\r\n    }\r\n    .tianmao-bgi::after{\r\n        background-position:right 0;\r\n    }\r\n    .tianmao-bgi:hover::before{\r\n        transform: translate(-100%);\r\n    }\r\n    .tianmao-bgi:hover::after{\r\n        transform: translate(+100%);\r\n    }\r\n</style>\r\n\r\n```html\r\n<div class=\"tianmao-bgi\"></div>\r\n<style>\r\n    .tianmao-bgi{\r\n        width: 683px;\r\n        height: 300px;\r\n        background-image: url(./images/CSS3进阶笔记/bg.jpg);\r\n        background-size: contain;\r\n        /* 溢出部分隐藏 */\r\n        overflow: hidden;\r\n    }\r\n    .tianmao-bgi::before,\r\n    .tianmao-bgi::after{\r\n        display: inline-block;\r\n        content: \"\";\r\n        width: 341px;\r\n        height: 300px;\r\n        background-image: url(./images/CSS3进阶笔记/fm.jpg);\r\n        background-size:cover;\r\n        transition: all 0.5s;\r\n    }\r\n    .tianmao-bgi::after{\r\n        background-position:right 0;\r\n    }\r\n    .tianmao-bgi:hover::before{\r\n        transform: translate(-100%);\r\n    }\r\n    .tianmao-bgi:hover::after{\r\n        transform: translate(+100%);\r\n    }\r\n</style>\r\n```\r\n\r\n\r\n### 平面旋转\r\n* 语法 `transform:rotate(角度deg);`\r\n* 角度单位deg\r\n* 旋转一圈为360deg\r\n* 取正为顺时针旋转，取负则相反\r\n* 一定要配合**过渡**属性才能看到动态的效果\r\n\r\n<div class=\"rotate-test\" >旋转测试</div>\r\n<style>\r\n    .rotate-test{\r\n        width: 100px;\r\n        height: 100px;\r\n        background-color: #fff;\r\n        text-align: center;\r\n        line-height: 100px;\r\n        /* 一定要配合过渡属性才能看到动态的效果 */\r\n        transition: all 1s;\r\n    }\r\n    .rotate-test:hover{\r\n        transform:rotate(360deg);\r\n    }\r\n</style>\r\n\r\n### 位移旋转缩放的中心点更改\r\n* 默认原点是盒子的中心点\r\n* 语法: `transform-origin: 水平位置 垂直位置;`\r\n* 取值：**方位名词**、像素、百分比（相对于盒子自身尺寸计算）\r\n* 示例\r\n<div class=\"origin-test\" >旋转测试</div>\r\n<style>\r\n    .origin-test{\r\n        width: 100px;\r\n        height: 100px;\r\n        background-color: #fff;\r\n        text-align: center;\r\n        line-height: 100px;\r\n        transition: all 1s;\r\n        transform-origin: right bottom;\r\n    }\r\n    .origin-test:hover{\r\n        transform:rotate(360deg);\r\n    }\r\n</style>\r\n\r\n\r\n### 多重转换\r\n* 语法格式,将其当做复合属性：`transform: translate() rotate();`\r\n* 注意\r\n    * 因为旋转会改变坐标轴方向，所以如果要实现平移+旋转效果，需要注意该属性的两个参数的顺序\r\n    * 不能拆成`transform: translate();transform: rotate();`两个写，否则后一个将会覆盖前一个。\r\n\r\n<div class=\"multip\" >\r\n    <div>多重转换</div>\r\n</div>\r\n<style>\r\n    .multip{\r\n        width: 313px;\r\n        height: 100px;\r\n        background-color: #fff;\r\n    }\r\n    .multip div{\r\n        position: relative;\r\n        left: -50px;\r\n        height: 100px;\r\n        width: 100px;\r\n        background: green;\r\n        transition: all 2s;\r\n        border-radius: 50%;\r\n        text-align: center;\r\n        line-height: 100px;\r\n    }\r\n    .multip:hover div{\r\n        transform: translate(313px,0) rotate(360deg);\r\n    }\r\n</style>\r\n\r\n\r\n```html\r\n<div class=\"multip\" >\r\n    <div>多重转换</div>\r\n</div>\r\n<style>\r\n    .multip{\r\n        width: 313px;\r\n        height: 100px;\r\n        background-color: #fff;\r\n    }\r\n    .multip div{\r\n        position: relative;\r\n        left: -50px;\r\n        height: 100px;\r\n        width: 100px;\r\n        background: green;\r\n        transition: all 2s;\r\n        border-radius: 50%;\r\n        text-align: center;\r\n        line-height: 100px;\r\n    }\r\n    .multip:hover div{\r\n        transform: translate(313px,0) rotate(360deg);\r\n    }\r\n</style>\r\n```\r\n\r\n\r\n\r\n\r\n### 平面缩放\r\n* 语法：\r\n    * transform:scale(X轴缩放倍数,Y轴缩放倍数);\r\n    * transform:scale(XY等比例缩放倍数);\r\n* 倍数没有单位\r\n\r\n<div class=\"father-scale\">\r\n    <div class=\"box\">transform:scale(缩放倍数);</div>\r\n</div>\r\n<style>\r\n    .father-scale{\r\n        width: 500px;\r\n        height: 300px;\r\n        background: skyblue;\r\n        overflow: hidden;\r\n    }\r\n    .father-scale .box{\r\n        width: 100%;\r\n        height: 100%;\r\n        background-color: green;\r\n        transition: transform 1s;\r\n        line-height: 300px;\r\n        text-align: center;\r\n    }\r\n    .father-scale:hover .box{\r\n        transform: scale(1.5);\r\n    }\r\n</style>\r\n\r\n### 使用transform的居中和缩放\r\n* 需要把居中和缩放写到一个transform中\r\n* `transform:translate(-50%,-50%) scale(0.5);`\r\n\r\n<div class=\"father-scaleAndMiddle\">\r\n    <div class=\"box\">transform:translate(-50%,-50%) scale(0.5);</div>\r\n</div>\r\n<style>\r\n    .father-scaleAndMiddle{\r\n        position: relative;\r\n        width: 500px;\r\n        height: 300px;\r\n        background: skyblue;\r\n        overflow: hidden;\r\n    }\r\n    .father-scaleAndMiddle .box{\r\n        position: absolute;\r\n        top: 50%;\r\n        left: 50%;\r\n        width: 50%;\r\n        height: 50%;\r\n        background-color: green;\r\n        transition: all 1s;\r\n        line-height: 150px;\r\n        font-size: 0.5em;\r\n        text-align: center;\r\n        transform: translate(-50%,-50%) scale(1);\r\n    }\r\n    .father-scaleAndMiddle:hover .box{\r\n        transform: translate(-50%,-50%) scale(1.5);\r\n    }\r\n</style>\r\n\r\n```html\r\n<div class=\"father-scaleAndMiddle\">\r\n    <div class=\"box\">transform:translate(-50%,-50%) scale(0.5);</div>\r\n</div>\r\n<style>\r\n    .father-scaleAndMiddle{\r\n        position: relative;\r\n        width: 500px;\r\n        height: 300px;\r\n        background: skyblue;\r\n        overflow: hidden;\r\n    }\r\n    .father-scaleAndMiddle .box{\r\n        position: absolute;\r\n        top: 50%;\r\n        left: 50%;\r\n        width: 50%;\r\n        height: 50%;\r\n        background-color: green;\r\n        transition: transform 1s;\r\n        line-height: 150px;\r\n        text-align: center;\r\n        transform: translate(-50%,-50%) scale(1);\r\n    }\r\n    .father-scaleAndMiddle:hover .box{\r\n        transform: translate(-50%,-50%) scale(1.5);\r\n    }\r\n</style>\r\n```\r\n\r\n\r\n\r\n\r\n\r\n## 空间转换\r\n* 使用transform属性实现元素在**空间(3D)**内的**位移**，**旋转**，**缩放**等效果\r\n* z轴的正轴方向为从屏幕指向自己\r\n![](./images/CSS3进阶笔记/2022-06-18-03-10-06.png)\r\n\r\n### 透视\r\n浏览器默认应该是正交透视，没有近大远小的透视效果\r\n* 属性名：perspective\r\n* 语法：perspective:透视距离;\r\n* 建议的取值：**800-1200px**\r\n* 使用：添加给盒子的父级，透视中心为父级盒子的中心\r\n* 注意：记得给盒子添加宽高，否则会找到一个错误的中心点\r\n* 透视距离，也称视距，指人眼到屏幕的距离\r\n![](./images/CSS3进阶笔记/2022-06-18-03-43-26.png)\r\n\r\n\r\n### 空间位移\r\n* 语法：\r\n    * `transform:translate3d(x,y,z);`\r\n    * `transform:translateX(x);`\r\n    * `transform:translateY(y);`\r\n    * `transform:translateZ(z);`\r\n* 取值：像素，百分比(以自身长宽高为基准)\r\n* **注意**：默认为正交透视，所以在Z轴的位移将看不出近大远小的透视效果\r\n\r\n\r\n<div class=\"transZtest1\">\r\n    <div></div>\r\n</div>\r\n<style>\r\n    .transZtest1{\r\n        width: 100px;\r\n        height: 100px;\r\n        background-color: #fff;\r\n        /* 透视 盒子中心成为透视中心 */\r\n        perspective: 1200px;\r\n    }\r\n    .transZtest1 div\r\n    {\r\n        width: 100px;\r\n        height: 100px;\r\n        background-color: green;\r\n    }\r\n    .transZtest1:hover div{\r\n        transform: translateZ(-1000px);\r\n    }\r\n</style>\r\n\r\n\r\n### 空间旋转\r\n* 语法：\r\n    * `rotateX()` 绕X轴旋转\r\n    * `rotateY()` 绕Y轴旋转\r\n    * `rotateZ()` 绕Z轴旋转\r\n    * `rotate3d(x,y,z,角度度数)`\r\n        * **指定一个旋转轴，旋转指定的角度**\r\n        * **x,y,z取值为0-1的数字**\r\n* **注意**：默认为正交透视，所以在各轴的位移默认将看不出近大远小的透视效果\r\n\r\n\r\n#### 几种空间旋转效果测试\r\n<div class=\"rotateXtestBox1\">\r\n    <div class=\"rotateXtest\">rotateX()</div>\r\n</div>\r\n<style>\r\n    .rotateXtestBox1 {\r\n        margin:10px;\r\n        width: 100px;\r\n        height: 100px;\r\n        perspective: 1200px;\r\n    }\r\n    .rotateXtestBox1 .rotateXtest{\r\n        width: 100px;\r\n        height: 100px;\r\n        background-color: #fff;\r\n        transition: all 2s;\r\n    }\r\n    .rotateXtestBox1 .rotateXtest:hover{\r\n        transform: rotateX(60deg);\r\n    }\r\n</style>\r\n\r\n<div class=\"rotateXtestBox2\">\r\n    <div class=\"rotateXtest\">rotateY()</div>\r\n</div>\r\n<style>\r\n    .rotateXtestBox2 {\r\n        margin:10px;\r\n        perspective: 1200px;\r\n    }\r\n    .rotateXtestBox2 .rotateXtest{\r\n        width: 100px;\r\n        height: 100px;\r\n        background-color: #fff;\r\n        transition: all 2s;\r\n    }\r\n    .rotateXtestBox2 .rotateXtest:hover{\r\n        transform: rotateY(60deg);\r\n    }\r\n</style>\r\n\r\n<div class=\"rotateXtestBox3\">\r\n    <div class=\"rotateXtest\">rotateZ()</div>\r\n</div>\r\n<style>\r\n    .rotateXtestBox3 {\r\n        margin:10px;\r\n        perspective: 1200px;\r\n    }\r\n    .rotateXtestBox3 .rotateXtest{\r\n        width: 100px;\r\n        height: 100px;\r\n        background-color: #fff;\r\n        transition: all 2s;\r\n    }\r\n    .rotateXtestBox3 .rotateXtest:hover{\r\n        transform: rotateZ(60deg);\r\n    }\r\n</style>\r\n\r\n### 立体呈现\r\n* 用法：`transform-style:preserve-3d`\r\n    * 默认值：`flat`，表示处于平面空间\r\n* 作用：使子元素处于3d空间\r\n\r\n\r\n#### 尝试实现立方体-正交\r\n* 结合transform-style、transition、rotate等属性的综合案例\r\n\r\n<div class=\"threedbox\">\r\n    <div class=\"font\"></div>\r\n    <div class=\"back\"></div>\r\n    <div class=\"left\"></div>\r\n    <div class=\"right\"></div>\r\n    <div class=\"top\"></div>\r\n    <div class=\"bottom\"></div>\r\n</div>\r\n<style>\r\n    .threedbox{\r\n        position: relative;\r\n        width: 200px;\r\n        height: 200px;\r\n        /* background-color: #fff; */\r\n        /* perspective: 1500px; */\r\n        transform-style: preserve-3d;\r\n        transition: all 5s;\r\n    }\r\n    .threedbox .font,\r\n    .threedbox .back,\r\n    .threedbox .left,\r\n    .threedbox .right,\r\n    .threedbox .top,\r\n    .threedbox .bottom\r\n    {\r\n        position: absolute;\r\n        left: 0;\r\n        top: 0;\r\n        width: 200px;\r\n        height: 200px;\r\n    }\r\n    .threedbox .font{\r\n        background-color: rgba(0, 255, 0, 0.5);\r\n        transform: translateZ(-100px);\r\n    }\r\n    .threedbox .back{\r\n        background-color: rgba(255, 0, 0, 0.5);\r\n        transform: translateZ(+100px);\r\n    }\r\n    .threedbox .left{\r\n        background-color: rgba(0, 0, 255, 0.5);\r\n        transform: translateX(-100px) rotateY(90deg);\r\n    }\r\n    .threedbox .right{\r\n        background-color: rgba(0, 255, 255, 0.5);\r\n        transform: translateX(+100px) rotateY(90deg);\r\n    }\r\n    .threedbox .top{\r\n        background-color: rgba(255, 255, 0, 0.5);\r\n        transform: translateY(+100px) rotateX(90deg);\r\n    }\r\n    .threedbox .bottom{\r\n        background-color: rgba(255, 0, 255, 0.5);\r\n        transform: translateY(-100px) rotateX(90deg);\r\n    }\r\n    .threedbox:hover{\r\n        /* transform: rotateY(365deg); */\r\n        transform: rotate3d(1,1,1,360deg);\r\n    }\r\n</style>\r\n\r\n代码：\r\n```html\r\n<div class=\"threedbox\">\r\n    <div class=\"font\"></div>\r\n    <div class=\"back\"></div>\r\n    <div class=\"left\"></div>\r\n    <div class=\"right\"></div>\r\n    <div class=\"top\"></div>\r\n    <div class=\"bottom\"></div>\r\n</div>\r\n\r\n<style>\r\n    .threedbox{\r\n        position: relative;\r\n        width: 200px;\r\n        height: 200px;\r\n        /* background-color: #fff; */\r\n        /* perspective: 1200px; */\r\n        transform-style: preserve-3d;\r\n        transition: all 5s;\r\n    }\r\n    .threedbox .font,\r\n    .threedbox .back,\r\n    .threedbox .left,\r\n    .threedbox .right,\r\n    .threedbox .top,\r\n    .threedbox .bottom\r\n    {\r\n        position: absolute;\r\n        left: 0;\r\n        top: 0;\r\n        width: 200px;\r\n        height: 200px;\r\n    }\r\n    .threedbox .font{\r\n        background-color: rgba(0, 255, 0, 0.5);\r\n        transform: translateZ(-100px);\r\n    }\r\n    .threedbox .back{\r\n        background-color: rgba(255, 0, 0, 0.5);\r\n        transform: translateZ(+100px);\r\n    }\r\n    .threedbox .left{\r\n        background-color: rgba(0, 0, 255, 0.5);\r\n        transform: translateX(-100px) rotateY(90deg);\r\n    }\r\n    .threedbox .right{\r\n        background-color: rgba(0, 255, 255, 0.5);\r\n        transform: translateX(+100px) rotateY(90deg);\r\n    }\r\n    .threedbox .top{\r\n        background-color: rgba(255, 255, 0, 0.5);\r\n        transform: translateY(+100px) rotateX(90deg);\r\n    }\r\n    .threedbox .bottom{\r\n        background-color: rgba(255, 0, 255, 0.5);\r\n        transform: translateY(-100px) rotateX(90deg);\r\n    }\r\n    \r\n    .threedbox:hover{\r\n        /* transform: rotateY(365deg); */\r\n        transform: rotate3d(1,1,1,360deg);\r\n    }\r\n</style>\r\n```\r\n\r\n\r\n\r\n\r\n\r\n#### 3d导航条实现\r\n<div class=\"nav-demo clearall\">\r\n    <ul>\r\n        <li><a class=\"clearfix\" href=\"#\"><span>首页</span><span>index</span></a></li>\r\n        <li><a class=\"clearfix\" href=\"#\"><span>中文</span><span>Chinese</span></a></li>\r\n    </ul>\r\n</div>\r\n<style>\r\n    .clearfix::after{\r\n        content:'';\r\n        display:block;\r\n        clear:both;\r\n    }\r\n    .nav-demo ul{\r\n        list-style: none;\r\n        height: 30px;\r\n    }\r\n    .nav-demo ul li{\r\n        float: left;\r\n        height: 30px;\r\n        line-height: 30px;\r\n        /* background-color: #fff; */\r\n    }\r\n    .nav-demo ul li a{\r\n        position: relative;\r\n        display: inline-block;\r\n        height: 30px;\r\n        width: 80px;\r\n        line-height: 30px;\r\n        perspective: 1200px;\r\n        transform-style: preserve-3d;\r\n        text-align: center;\r\n        transition: all 1s;\r\n        color: white;\r\n    }\r\n    .nav-demo ul li a span{\r\n        position:absolute;\r\n        left: 0px;\r\n        top: 0px;\r\n        display: inline-block;\r\n        height: 30px;\r\n        width: 100%;\r\n        background-color: green;\r\n    }\r\n    .nav-demo ul li span:nth-child(1){\r\n        transform: translateZ(15px);\r\n    }\r\n    .nav-demo ul li span:nth-child(2){\r\n        background-color: orange;\r\n        transform: translateY(-15px) rotateX(90deg) ;\r\n    }\r\n    .nav-demo ul li:hover a{\r\n        /* transform: rotate3d(1,1,1,90deg); */\r\n        transform: rotate3d(1,0,0,-90deg);\r\n    }\r\n</style>\r\n\r\n```html\r\n<div class=\"nav-demo\">\r\n    <ul>\r\n        <li><a class=\"clearfix\" href=\"#\"><span>首页</span><span>index</span></a></li>\r\n        <li><a class=\"clearfix\" href=\"#\"><span>中文</span><span>Chinese</span></a></li>\r\n    </ul>\r\n</div>\r\n<style>\r\n    .clearfix::after{\r\n        content:'';\r\n        display:block;\r\n        clear:both;\r\n    }\r\n    .nav-demo ul{\r\n        list-style: none;\r\n        height: 30px;\r\n    }\r\n    .nav-demo ul li{\r\n        float: left;\r\n        height: 30px;\r\n        line-height: 30px;\r\n        /* background-color: #fff; */\r\n    }\r\n    .nav-demo ul li a{\r\n        position: relative;\r\n        display: inline-block;\r\n        height: 30px;\r\n        width: 80px;\r\n        line-height: 30px;\r\n        perspective: 1200px;\r\n        transform-style: preserve-3d;\r\n        text-align: center;\r\n        transition: all 1s;\r\n        color: white;\r\n    }\r\n    .nav-demo ul li a span{\r\n        position:absolute;\r\n        left: 0px;\r\n        top: 0px;\r\n        display: inline-block;\r\n        height: 30px;\r\n        width: 100%;\r\n        background-color: green;\r\n    }\r\n    .nav-demo ul li span:nth-child(1){\r\n        transform: translateZ(15px);\r\n    }\r\n    .nav-demo ul li span:nth-child(2){\r\n        background-color: orange;\r\n        transform: translateY(-15px) rotateX(90deg) ;\r\n    }\r\n    .nav-demo ul li:hover a{\r\n        /* transform: rotate3d(1,1,1,90deg); */\r\n        transform: rotate3d(1,0,0,-90deg);\r\n    }\r\n</style>\r\n```\r\n\r\n### 空间缩放\r\n* 语法：\r\n    * `transform:scaleX(倍数);` 将模型拉宽，效果参考平面缩放\r\n    * `transform:scaleY(倍数);` 将模型拉高，效果参考平面缩放\r\n    * `transform:scaleZ(倍数);` 将模型拉长，效果相当于模型有了厚度\r\n    * `transform:scale3d(倍数,倍数,倍数);`\r\n* 注意书写书写，一般应该先位移，后旋转，再缩放\r\n\r\n#### 对3d立方体盒子的空间缩放测试\r\n\r\n<div id=\"threedbox-2\">\r\n    <div class=\"font\"></div>\r\n    <div class=\"back\"></div>\r\n    <div class=\"left\"></div>\r\n    <div class=\"right\"></div>\r\n    <div class=\"top\"></div>\r\n    <div class=\"bottom\"></div>\r\n</div>\r\n<style>\r\n    #threedbox-2{\r\n        position: relative;\r\n        width: 200px;\r\n        height: 200px;\r\n        /* background-color: #fff; */\r\n        perspective: 1500px;\r\n        transform-style: preserve-3d;\r\n        transition: all 3s;\r\n        transform:  rotate3d(1,1,1,30deg) ;\r\n    }\r\n    #threedbox-2 .font,\r\n    #threedbox-2 .back,\r\n    #threedbox-2 .left,\r\n    #threedbox-2 .right,\r\n    #threedbox-2 .top,\r\n    #threedbox-2 .bottom\r\n    {\r\n        position: absolute;\r\n        left: 0;\r\n        top: 0;\r\n        width: 200px;\r\n        height: 200px;\r\n    }\r\n    #threedbox-2 .font{\r\n        background-color: rgba(0, 255, 0, 0.5);\r\n        transform: translateZ(-100px);\r\n    }\r\n    #threedbox-2 .back{\r\n        background-color: rgba(255, 0, 0, 0.5);\r\n        transform: translateZ(+100px);\r\n    }\r\n    #threedbox-2 .left{\r\n        background-color: rgba(0, 0, 255, 0.5);\r\n        transform: translateX(-100px) rotateY(90deg);\r\n    }\r\n    #threedbox-2 .right{\r\n        background-color: rgba(0, 255, 255, 0.5);\r\n        transform: translateX(+100px) rotateY(90deg);\r\n    }\r\n    #threedbox-2 .top{\r\n        background-color: rgba(255, 255, 0, 0.5);\r\n        transform: translateY(+100px) rotateX(90deg);\r\n    }\r\n    #threedbox-2 .bottom{\r\n        background-color: rgba(255, 0, 255, 0.5);\r\n        transform: translateY(-100px) rotateX(90deg);\r\n    }\r\n    #threedbox-2:hover{\r\n        /* scale3d测试 */\r\n        transform:  rotate3d(1,1,1,30deg) scale3d(0.5,1.5,2);\r\n    }\r\n</style>\r\n\r\n```html\r\n<div id=\"threedbox-2\">\r\n    <div class=\"font\"></div>\r\n    <div class=\"back\"></div>\r\n    <div class=\"left\"></div>\r\n    <div class=\"right\"></div>\r\n    <div class=\"top\"></div>\r\n    <div class=\"bottom\"></div>\r\n</div>\r\n<style>\r\n    #threedbox-2{\r\n        position: relative;\r\n        width: 200px;\r\n        height: 200px;\r\n        /* background-color: #fff; */\r\n        perspective: 1500px;\r\n        transform-style: preserve-3d;\r\n        transition: all 3s;\r\n        transform:  rotate3d(1,1,1,30deg) ;\r\n    }\r\n    #threedbox-2 .font,\r\n    #threedbox-2 .back,\r\n    #threedbox-2 .left,\r\n    #threedbox-2 .right,\r\n    #threedbox-2 .top,\r\n    #threedbox-2 .bottom\r\n    {\r\n        position: absolute;\r\n        left: 0;\r\n        top: 0;\r\n        width: 200px;\r\n        height: 200px;\r\n    }\r\n    #threedbox-2 .font{\r\n        background-color: rgba(0, 255, 0, 0.5);\r\n        transform: translateZ(-100px);\r\n    }\r\n    #threedbox-2 .back{\r\n        background-color: rgba(255, 0, 0, 0.5);\r\n        transform: translateZ(+100px);\r\n    }\r\n    #threedbox-2 .left{\r\n        background-color: rgba(0, 0, 255, 0.5);\r\n        transform: translateX(-100px) rotateY(90deg);\r\n    }\r\n    #threedbox-2 .right{\r\n        background-color: rgba(0, 255, 255, 0.5);\r\n        transform: translateX(+100px) rotateY(90deg);\r\n    }\r\n    #threedbox-2 .top{\r\n        background-color: rgba(255, 255, 0, 0.5);\r\n        transform: translateY(+100px) rotateX(90deg);\r\n    }\r\n    #threedbox-2 .bottom{\r\n        background-color: rgba(255, 0, 255, 0.5);\r\n        transform: translateY(-100px) rotateX(90deg);\r\n    }\r\n    #threedbox-2:hover{\r\n        /* scale3d测试 */\r\n        transform:  rotate3d(1,1,1,30deg) scale3d(0.5,1.5,2);\r\n    }\r\n    \r\n</style>\r\n```\r\n\r\n\r\n\r\n\r\n## 动画\r\n* 构成动画的最小单位是帧或动画帧\r\n* 动画和过渡的区别：\r\n    * 过渡是两个状态间的变化过程\r\n    * 动画是多个状态间的变化过程\r\n\r\n* 实现步骤\r\n    1. 定义动画\r\n        * 方法1 两个状态间的动画\r\n            ```css\r\n            @keyframes 动画名称{\r\n                from{}\r\n                to{}\r\n            }\r\n            ```\r\n        * 方法2 多个状态间的动画\r\n            ```css\r\n            @keyframes 动画名称{\r\n                <!-- 百分比指的是占用时间的百分比 -->\r\n                0%{}\r\n                10%{}\r\n                20%{}\r\n                50%{}\r\n                100%{}\r\n            }\r\n            ```\r\n    2. 使用动画\r\n        ```css\r\n            animation:动画名称 动画花费时长;\r\n        ```\r\n\r\n* 测试\r\n<div id=\"testframe1\">\r\n    动画将在刷新浏览器后立即播放\r\n</div>\r\n<style>\r\n    #testframe1{\r\n        width: 100px;\r\n        height: 100px;\r\n        background-color: green;\r\n        animation: changeWidth 10s;\r\n    }\r\n    @keyframes changeWidth {\r\n        from{\r\n            width: 100px;\r\n        }\r\n        to{\r\n            width: 200px;\r\n        }\r\n    }\r\n</style>\r\n<br>\r\n<div id=\"testframe2\">\r\n    动画将在刷新浏览器后立即播放\r\n</div>\r\n<style>\r\n    #testframe2{\r\n        width: 100px;\r\n        height: 100px;\r\n        background-color: green;\r\n        /* 总共10秒 */\r\n        animation: changeWidth2 10s;\r\n    }\r\n    @keyframes changeWidth2 {\r\n        0%{width: 0px;}\r\n        /* 0-200px用了1秒钟 */\r\n        10%{width: 200px;}\r\n        50%{width: 300px;}\r\n        /* 300-1000px用了最后五秒钟 */\r\n        100%{width: 1000px;}\r\n    }\r\n</style>\r\n\r\n```html\r\n<div id=\"testframe1\">\r\n    动画将在刷新浏览器后立即播放\r\n</div>\r\n<style>\r\n    #testframe1{\r\n        width: 100px;\r\n        height: 100px;\r\n        background-color: green;\r\n        animation: changeWidth 10s;\r\n    }\r\n    @keyframes changeWidth {\r\n        from{\r\n            width: 100px;\r\n        }\r\n        to{\r\n            width: 200px;\r\n        }\r\n    }\r\n</style>\r\n<br>\r\n<div id=\"testframe2\">\r\n    动画将在刷新浏览器后立即播放\r\n</div>\r\n<style>\r\n    #testframe2{\r\n        width: 100px;\r\n        height: 100px;\r\n        background-color: green;\r\n        /* 总共10秒 */\r\n        animation: changeWidth2 10s;\r\n    }\r\n    @keyframes changeWidth2 {\r\n        0%{width: 0px;}\r\n        /* 0-200px用了1秒钟 */\r\n        10%{width: 200px;}\r\n        50%{width: 300px;}\r\n        /* 300-1000px用了最后五秒钟 */\r\n        100%{width: 1000px;}\r\n    }\r\n</style>\r\n```\r\n\r\n### animation动画属性\r\n* 完整语法格式: `animation: name1 duration1,name2 duration2;`\r\n* 完整语法格式: `animation: name duration timing-function delay iteration-count direction fill-mode;`\r\n* 完整语法格式: `animation: 动画名称 动画时长 速度曲线 延迟时间 重复次数 动画方向 执行完毕时状态;`\r\n* 注意：\r\n    * **动画名称和时长为必填值**\r\n    * **取值不分先后顺序**\r\n    * 如有两个数值，第一个表示动画时长，第二个表示延迟时间\r\n\r\n* **速度曲线**取值: 默认为补间动画，流畅\r\n    * `liner` 线性\r\n    * `steps(x)` 逐帧动画，分成x等份播放的动画\r\n\r\n* **延迟时间** ：单位s 延迟多少秒播放动画\r\n* \r\n* **重复次数** ： 默认只播放一次，设置后将播放指定次数\r\n    * **取纯数字** 指定播放次数\r\n    * **取关键字** \r\n        * `infinite` 无限次\r\n        * 等...\r\n\r\n* **动画方向**：默认按关键帧的顺序播放\r\n    * `alternative` 按关键帧的顺序播放后再反着倒放动画\r\n    * 等...\r\n\r\n* **执行完毕时状态**:\r\n    * `backwards` 默认值 动画停留在初始状态 \r\n    * `forwards` 动画停留在最终状态\r\n    * 注意:该属性值会和 `infinite` 、`alternative` 冲突\r\n\r\n\r\n* 拆分写法\r\n![](./images/CSS3进阶笔记/2022-06-18-21-29-52.png)\r\n\r\n\r\n### 立方体动画测试\r\n\r\n<div id=\"threedbox-animation1\">\r\n    <div class=\"font\"></div>\r\n    <div class=\"back\"></div>\r\n    <div class=\"left\"></div>\r\n    <div class=\"right\"></div>\r\n    <div class=\"top\"></div>\r\n    <div class=\"bottom\"></div>\r\n</div>\r\n<style>\r\n    #threedbox-animation1{\r\n        position: relative;\r\n        width: 200px;\r\n        height: 200px;\r\n        /* background-color: #fff; */\r\n        /* perspective: 1200px; */\r\n        transform-style: preserve-3d;\r\n        transform: rotate3d(1,1,1,45deg);\r\n        /* 无限播放的动画 */\r\n        animation: threedboxFrames1 3s infinite;\r\n    }\r\n    #threedbox-animation1 .font,\r\n    #threedbox-animation1 .back,\r\n    #threedbox-animation1 .left,\r\n    #threedbox-animation1 .right,\r\n    #threedbox-animation1 .top,\r\n    #threedbox-animation1 .bottom\r\n    {\r\n        position: absolute;\r\n        left: 0;\r\n        top: 0;\r\n        width: 200px;\r\n        height: 200px;\r\n    }\r\n    #threedbox-animation1 .font{\r\n        background-color: rgba(0, 255, 0, 0.5);\r\n        transform: translateZ(-100px);\r\n    }\r\n    #threedbox-animation1 .back{\r\n        background-color: rgba(255, 0, 0, 0.5);\r\n        transform: translateZ(+100px);\r\n    }\r\n    #threedbox-animation1 .left{\r\n        background-color: rgba(0, 0, 255, 0.5);\r\n        transform: translateX(-100px) rotateY(90deg);\r\n    }\r\n    #threedbox-animation1 .right{\r\n        background-color: rgba(0, 255, 255, 0.5);\r\n        transform: translateX(+100px) rotateY(90deg);\r\n    }\r\n    #threedbox-animation1 .top{\r\n        background-color: rgba(255, 255, 0, 0.5);\r\n        transform: translateY(+100px) rotateX(90deg);\r\n    }\r\n    #threedbox-animation1 .bottom{\r\n        background-color: rgba(255, 0, 255, 0.5);\r\n        transform: translateY(-100px) rotateX(90deg);\r\n    }\r\n    /* 定义动画 */\r\n    @keyframes threedboxFrames1 {\r\n        from{transform: rotate3d(1,1,1,45deg) rotate3d(0,1,0,0deg);}\r\n        to{transform:  rotate3d(1,1,1,45deg) rotate3d(0,1,0,360deg);}\r\n    }\r\n    #threedbox-animation1:hover{\r\n        /* 鼠标控制暂停的效果     */\r\n       animation-play-state: paused;\r\n    }\r\n</style>\r\n\r\n```html\r\n<div id=\"threedbox-animation1\">\r\n    <div class=\"font\"></div>\r\n    <div class=\"back\"></div>\r\n    <div class=\"left\"></div>\r\n    <div class=\"right\"></div>\r\n    <div class=\"top\"></div>\r\n    <div class=\"bottom\"></div>\r\n</div>\r\n<style>\r\n    #threedbox-animation1{\r\n        position: relative;\r\n        width: 200px;\r\n        height: 200px;\r\n        /* background-color: #fff; */\r\n        /* perspective: 1200px; */\r\n        transform-style: preserve-3d;\r\n        transform: rotate3d(1,1,1,45deg);\r\n        /* 无限播放的动画 */\r\n        animation: threedboxFrames1 3s infinite;\r\n    }\r\n    #threedbox-animation1 .font,\r\n    #threedbox-animation1 .back,\r\n    #threedbox-animation1 .left,\r\n    #threedbox-animation1 .right,\r\n    #threedbox-animation1 .top,\r\n    #threedbox-animation1 .bottom\r\n    {\r\n        position: absolute;\r\n        left: 0;\r\n        top: 0;\r\n        width: 200px;\r\n        height: 200px;\r\n    }\r\n    #threedbox-animation1 .font{\r\n        background-color: rgba(0, 255, 0, 0.5);\r\n        transform: translateZ(-100px);\r\n    }\r\n    #threedbox-animation1 .back{\r\n        background-color: rgba(255, 0, 0, 0.5);\r\n        transform: translateZ(+100px);\r\n    }\r\n    #threedbox-animation1 .left{\r\n        background-color: rgba(0, 0, 255, 0.5);\r\n        transform: translateX(-100px) rotateY(90deg);\r\n    }\r\n    #threedbox-animation1 .right{\r\n        background-color: rgba(0, 255, 255, 0.5);\r\n        transform: translateX(+100px) rotateY(90deg);\r\n    }\r\n    #threedbox-animation1 .top{\r\n        background-color: rgba(255, 255, 0, 0.5);\r\n        transform: translateY(+100px) rotateX(90deg);\r\n    }\r\n    #threedbox-animation1 .bottom{\r\n        background-color: rgba(255, 0, 255, 0.5);\r\n        transform: translateY(-100px) rotateX(90deg);\r\n    }\r\n    /* 定义动画 */\r\n    @keyframes threedboxFrames1 {\r\n        from{transform: rotate3d(1,1,1,45deg) rotate3d(0,1,0,0deg);}\r\n        to{transform:  rotate3d(1,1,1,45deg) rotate3d(0,1,0,360deg);}\r\n    }\r\n    #threedbox-animation1:hover{\r\n        /* 鼠标控制暂停的效果     */\r\n       animation-play-state: paused;\r\n    }\r\n</style>\r\n\r\n```\r\n\r\n### 制作精灵动画\r\n* 步骤\r\n    * 准备显示区域 尺寸为精灵图小图尺寸\r\n    * 定义动画 改变图片位置 \r\n    * 使用动画\r\n        * 添加速度曲线`steps(N)` N为小图数，\r\n        * 添加无限重复效果 `infinite`\r\n* 精灵图：\r\n![](./images/CSS3进阶笔记/bg2.png)\r\n\r\n<div id=\"spbox1\"></div>\r\n<style>\r\n    #spbox1{\r\n        width: 140px;\r\n        height: 140px;\r\n        /* background-color: #fff; */\r\n        border: 1px solid #fff;\r\n        background-image: url(./images/CSS3进阶笔记/bg2.png);\r\n        animation: \r\n            run1 1s infinite steps(12),\r\n            move1 10s infinite forwards;\r\n    }\r\n    @keyframes run1 {\r\n        /* from、0% 的初值是0 则这句可以省略 */\r\n        /* 0%{background-position: 0 0;} */\r\n        /*  */\r\n        /* 从第一张到第12张移动了-11*140px */\r\n        /* 从第一张到第一张移动了-12*140px */\r\n        /* 所以取值-1680px就好 */\r\n        100%{background-position: -1680px 0;}\r\n    }\r\n    @keyframes move1 {\r\n        /* from{transform:translateX(0px)} */\r\n        to{transform:translateX(300px)}\r\n        \r\n    }\r\n</style>\r\n\r\n\r\n### 无缝走马灯动画\r\n* 实现无缝的关键在于，要把最开头几张图复制到最后\r\n![](./images/CSS3进阶笔记/2022-06-18-23-47-35.png)\r\n\r\n\r\n\r\n\r\n\r\n## 渐变背景\r\n* 语法 \r\n    * `  linear-gradient(颜色1,颜色2);`\r\n    * `background-image: linear-gradient(transparent,颜色2);`\r\n    * `background-image: linear-gradient(颜色1,颜色2,颜色3);`\r\n* 图片遮罩：可以一个盒子背景为某张图片，嵌套一个类名为mask的相同大小的渐变背景图，定位在父级上\r\n\r\n### 使用示例1\r\n\r\n<div id=\"linear-1\"></div>\r\n<style>\r\n    #linear-1{\r\n        width: 100px;\r\n        height: 100px;\r\n        background-image: linear-gradient(red,green);\r\n    }\r\n</style>\r\n\r\n```html\r\n<div id=\"linear-1\"></div>\r\n<style>\r\n    #linear-1{\r\n        width: 100px;\r\n        height: 100px;\r\n        background-image: linear-gradient(red,green);\r\n    }\r\n</style>\r\n```\r\n\r\n\r\n### 使用示例2-综合案例实现\r\n\r\n<div id=\"linearTest2Box\">\r\n    <img src=\"/images/CSS3进阶笔记/product.jpeg\" alt=\"\">\r\n    <div class=\"mask\"></div>\r\n    <div class=\"text\">\r\n        <h2>产品说明标题</h2>\r\n        <p>任意字数产品说明文字任意字数产品说明文字任意字数产品说明文字任意字数产品说明文字</p>\r\n    </div>\r\n</div>\r\n<style>\r\n    #linearTest2Box{\r\n        position: relative;\r\n        width: 384px;\r\n        height: 271px;\r\n        overflow: hidden;\r\n    }\r\n    #linearTest2Box img{\r\n        position: absolute;\r\n        left: 0;\r\n        top: 0;\r\n        width: 384px;\r\n        height: 271px;\r\n        transition: all 0.5s;\r\n        z-index: 1;\r\n    }\r\n    #linearTest2Box .mask{\r\n        position: absolute;\r\n        left: 0;\r\n        top: 0;\r\n        width: 384px;\r\n        height: 271px;\r\n        background-image: linear-gradient(transparent,rgba(0,0,0,0.5));\r\n        opacity: 0;\r\n        transition: all 0.5s;\r\n        z-index: 2;\r\n    }\r\n    #linearTest2Box .text {\r\n        position: absolute;\r\n        left: 0px;\r\n        bottom: 0px;\r\n        padding: 0 10px;\r\n        z-index: 3;\r\n        /* h2的行高为50px */\r\n        transform: translate(0,100%) translate(0,-50px);\r\n        transition: all 0.5s;\r\n    }\r\n    #linearTest2Box .text h2{\r\n        height: 50px;\r\n        font-size: 2em;\r\n        color: #fff;\r\n    }\r\n    #linearTest2Box .text p{\r\n        font-size: 1em;\r\n        color: #fff;\r\n        overflow: hidden;\r\n    }\r\n    #linearTest2Box:hover img{\r\n        transform: scale(1.05);\r\n    }\r\n    #linearTest2Box:hover .mask{\r\n        opacity: 1;\r\n    }\r\n    #linearTest2Box:hover .text{\r\n        transform: translate(0,0);\r\n    }\r\n</style>\r\n\r\n\r\n代码：\r\n```html\r\n<div id=\"linearTest2Box\">\r\n    <img src=\"/images/CSS3进阶笔记/product.jpeg\" alt=\"\">\r\n    <div class=\"mask\"></div>\r\n    <div class=\"text\">\r\n        <h2>产品说明标题</h2>\r\n        <p>任意字数产品说明文字任意字数产品说明文字任意字数产品说明文字任意字数产品说明文字</p>\r\n    </div>\r\n</div>\r\n<style>\r\n    #linearTest2Box{\r\n        position: relative;\r\n        width: 384px;\r\n        height: 271px;\r\n        overflow: hidden;\r\n    }\r\n    #linearTest2Box img{\r\n        position: absolute;\r\n        left: 0;\r\n        top: 0;\r\n        width: 384px;\r\n        height: 271px;\r\n        transition: all 0.5s;\r\n        z-index: 1;\r\n    }\r\n    #linearTest2Box .mask{\r\n        position: absolute;\r\n        left: 0;\r\n        top: 0;\r\n        width: 384px;\r\n        height: 271px;\r\n        background-image: linear-gradient(transparent,rgba(0,0,0,0.5));\r\n        opacity: 0;\r\n        transition: all 0.5s;\r\n        z-index: 2;\r\n    }\r\n    #linearTest2Box .text {\r\n        position: absolute;\r\n        left: 0px;\r\n        bottom: 0px;\r\n        padding: 0 10px;\r\n        z-index: 3;\r\n        /* h2的行高为50px */\r\n        transform: translate(0,100%) translate(0,-50px);\r\n        transition: all 0.5s;\r\n    }\r\n    #linearTest2Box .text h2{\r\n        height: 50px;\r\n        font-size: 2em;\r\n        color: #fff;\r\n    }\r\n    #linearTest2Box .text p{\r\n        font-size: 1em;\r\n        color: #fff;\r\n        overflow: hidden;\r\n    }\r\n    #linearTest2Box:hover img{\r\n        transform: scale(1.05);\r\n    }\r\n    #linearTest2Box:hover .mask{\r\n        opacity: 1;\r\n    }\r\n    #linearTest2Box:hover .text{\r\n        transform: translate(0,0);\r\n    }\r\n</style>\r\n```\r\n\r\n## 绘制三角形\r\n\r\n**利用边框拐角处的45度角绘制三角形**\r\n\r\n\r\n<div id=\"demoNOH895\">利用边框拐角处的45度角绘制三角形</div>\r\n<style>\r\n    #demoNOH895{\r\n    box-sizing: border-box;\r\n    width: 200px;\r\n    height: 200px;\r\n    border-top: 50px solid black;\r\n    border-right: 50px solid red;\r\n    border-bottom: 50px solid green;\r\n    border-left: 50px solid blue;\r\n}\r\n</style>\r\n\r\n```html\r\n<div id=\"demoNOH895\">利用边框拐角处的45度角绘制三角形</div>\r\n<style>\r\n    #demoNOH895{\r\n    box-sizing: border-box;\r\n    width: 200px;\r\n    height: 200px;\r\n    border-top: 50px solid black;\r\n    border-right: 50px solid red;\r\n    border-bottom: 50px solid green;\r\n    border-left: 50px solid blue;\r\n}\r\n</style>\r\n```\r\n\r\n\r\n**宽高不定，各边框50px，效果：**\r\n\r\n<div id=\"demojowej09\"></div>\r\n<style>\r\n    #demojowej09{\r\n    box-sizing: border-box;\r\n    width: 0px;\r\n    height: 0px;\r\n    border-top: 50px solid black;\r\n    border-right: 50px solid red;\r\n    border-bottom: 50px solid green;\r\n    border-left: 50px solid blue;\r\n}\r\n</style>\r\n\r\n```html\r\n<div id=\"demojowej09\"></div>\r\n<style>\r\n    #demojowej09{\r\n    box-sizing: border-box;\r\n    width: 0px;\r\n    height: 0px;\r\n    border-top: 50px solid black;\r\n    border-right: 50px solid red;\r\n    border-bottom: 50px solid green;\r\n    border-left: 50px solid blue;\r\n}\r\n</style>\r\n```\r\n\r\n\r\n**宽高不定，上边框50px，其他边框透明，效果：**\r\n\r\n<div id=\"demojowewdeio\"></div>\r\n<style>\r\n    #demojowewdeio{\r\n    box-sizing: border-box;\r\n    width: 0px;\r\n    height: 0px;\r\n    border-top: 50px solid green;\r\n    border-right: 50px solid transparent;\r\n    border-bottom: 50px solid transparent;\r\n    border-left: 50px solid transparent;\r\n}\r\n</style>\r\n\r\n```html\r\n<div id=\"demojowewdeio\"></div>\r\n<style>\r\n    #demojowewdeio{\r\n    box-sizing: border-box;\r\n    width: 0px;\r\n    height: 0px;\r\n    border-top: 50px solid green;\r\n    border-right: 50px solid transparent;\r\n    border-bottom: 50px solid transparent;\r\n    border-left: 50px solid transparent;\r\n}\r\n</style>\r\n```\r\n\r\n\r\n可以实现的其他效果：\r\n![](./images/CSS3进阶笔记/2022-07-03-14-51-07.png)\r\n\r\n\r\n## 毛玻璃效果\r\n\r\n* 语法: `背景幕布-过滤器 : 模糊(像素)`\r\n* 案例: `backdrop-filter: blur(8px);`\r\n* 和filter的区别:\r\n  * filter ：模糊内容 作用于当前元素本身，并且它的后代元素也会继承这个属性\r\n  * backdrop-filter : 作用于当前元素背后的所有元素\r\n\r\n* 饱和度: `saturate(150%) <100%变暗，>100%变亮` 防止透过遮罩层内容过暗\r\n* 对比度: `contrast(50%) 100%为原图，0%为全灰色图像` 防止透过遮罩层内容色彩过杂\r\n\r\n示例\r\n```css\r\ndiv{\r\n\r\n    /* chrome浏览器 */\r\n    backdrop-filter:saturate(150%) contrast(50%) blur(8px);\r\n\r\n    /* ios浏览器 */\r\n    -webkit-backdrop-filter:saturate(150%) contrast(50%) blur(8px);\r\n}\r\n```\r\n\r\n## 背景图片的实现方式\r\n```html\r\n<div class=\"bg_img\" style=\"background-image: url(/src/components/BackGround/images/2.png);\"></div>\r\n\r\n<style>\r\n.bg_img{\r\n  z-index: -1;//保证其在最低层\r\n  position: fixed;//相对于视口布局\r\n  top: 0;\r\n  left: 0;\r\n  width: 100vh;//宽度为100%视口宽度\r\n  height: 100vh;//高度为100%视口宽度\r\n  background-size: cover;//关键属性\r\n  background-color: white; //默认背景白色\r\n  background-position: bottom center;//背景图片 水平 和 垂直 方向的对齐方式\r\n  filter:\r\n}\r\n</style>\r\n```"}
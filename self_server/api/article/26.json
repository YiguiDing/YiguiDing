{"shortInfo":{"title":"js动画","date":"2022-07-05T17:07:00.000Z","cover":"\\self_server\\assets\\images\\default_cover2.jpg","tags":["动画","js"],"hideAtIndex":true,"categories":"笔记","id":26,"countWords":2036,"readSeconds":203.6,"assetsbaseUrl":"/self_server/assets/"},"content":"# js动画\r\n\r\n## 动画实现原理\r\n核心原理：通过定时器setinterval()不断移动盒子位置\r\n* 利用offset获取当前位置\r\n* 通过css定位设置新位置\r\n\r\n```html\r\n<div id=\"demoNOUH98u9\"></div>\r\n<style>\r\n    #demoNOUH98u9{\r\n        position: absolute;\r\n        width: 100px;\r\n        height: 100px;\r\n        background-color: skyblue;\r\n    }\r\n</style>\r\n<script>\r\n    var demoNOUH98u9 = document.querySelector(\"#demoNOUH98u9\")\r\n    var timer = setInterval(function(){\r\n        if(demoNOUH98u9.offsetLeft>=200)\r\n        {\r\n            clearInterval(timer)\r\n        }\r\n        demoNOUH98u9.style.left = demoNOUH98u9.offsetLeft + 1 + \"px\"\r\n    },50)\r\n</script>\r\n```\r\n\r\n## 封装成函数\r\n### 一般写法\r\n\r\n```html\r\n<div id=\"demoNOUH98123\"></div>\r\n<style>\r\n    #demoNOUH98123{\r\n        position: absolute;\r\n        width: 100px;\r\n        height: 100px;\r\n        background-color: skyblue;\r\n    }\r\n</style>\r\n<script>\r\n    var demoNOUH98123 = document.querySelector(\"#demoNOUH98123\")\r\n    function animate(elementObj,target){\r\n        var timer = setInterval(function(){\r\n        if(elementObj.offsetLeft>=target)\r\n        {\r\n            clearInterval(timer)\r\n        }\r\n        elementObj.style.left = elementObj.offsetLeft + 1 + \"px\"\r\n    },50)\r\n    }\r\n    animate(demoNOUH98123,200)\r\n</script>\r\n```\r\n\r\n### 优化写法\r\n\r\n<button id=\"demoNOUHdwee\">测试</button>\r\n<div style=\"position:relative;height: 100px;\">\r\n    <div id=\"demoNOUH98456\"></div>\r\n</div>\r\n<style>\r\n    #demoNOUH98456{\r\n        position: absolute;\r\n        width: 100px;\r\n        height: 100px;\r\n        background-color: skyblue;\r\n    }\r\n</style>\r\n<script>\r\n(function(){\r\n    var demoNOUH98456 = document.querySelector(\"#demoNOUH98456\")\r\n    var demoNOUHdwee = document.querySelector(\"#demoNOUHdwee\")\r\n    function animate(elementObj,target){\r\n        //clearInterval可以防止animate被反复调用时导致同时调用多个setInterval，致使timer被覆盖\r\n        clearInterval(elementObj.timer)\r\n        //elementObj.timer可以避免反复申请内存\r\n        elementObj.timer = setInterval(function(){\r\n        if(elementObj.offsetLeft>=target)\r\n        {\r\n            clearInterval(elementObj.timer)\r\n        }\r\n        elementObj.style.left = elementObj.offsetLeft + 1 + \"px\"\r\n    },15)\r\n    }\r\n    demoNOUHdwee.addEventListener(\"click\",function(){\r\n        animate(demoNOUH98456,200)\r\n    })\r\n})();\r\n</script>\r\n\r\n```html\r\n<button id=\"demoNOUHdwee\">测试</button>\r\n<div style=\"position:relative;height: 100px;\">\r\n    <div id=\"demoNOUH98456\"></div>\r\n</div>\r\n<style>\r\n    #demoNOUH98456{\r\n        position: absolute;\r\n        width: 100px;\r\n        height: 100px;\r\n        background-color: skyblue;\r\n    }\r\n</style>\r\n<script>\r\n(function(){\r\n    var demoNOUH98456 = document.querySelector(\"#demoNOUH98456\")\r\n    var demoNOUHdwee = document.querySelector(\"#demoNOUHdwee\")\r\n    function animate(elementObj,target){\r\n        //clearInterval可以防止animate被反复调用时导致同时调用多个setInterval，致使timer被覆盖\r\n        clearInterval(elementObj.timer)\r\n        //elementObj.timer可以避免反复申请内存\r\n        elementObj.timer = setInterval(function(){\r\n        if(elementObj.offsetLeft>=target)\r\n        {\r\n            clearInterval(elementObj.timer)\r\n        }\r\n        elementObj.style.left = elementObj.offsetLeft + 1 + \"px\"\r\n    },15)\r\n    }\r\n    demoNOUHdwee.addEventListener(\"click\",function(){\r\n        animate(demoNOUH98456,200)\r\n    })\r\n})();\r\n</script>\r\n```\r\n\r\n## 缓动动画\r\n* 原理：让盒子每次移动的距离慢慢变小，移动速度就会慢下来\r\n* 公式：步长 =（目标值-当前值）/10\r\n* 注意\r\n    * 需要向上或向下取整，否则，根据公式，步长将会无限接近0，这就导致(当前值+步长)永远无法到达目标值\r\n    * 如果步长是负数则应该向下取整，如果步长是正数则应该向上取整。\r\n        * 如果步长是0.1，则应该向上取整，步长应为1\r\n        * 如果步长是-0.1，则应该向下取整，步长应为-1\r\n    * 若只需要单方向移动，判断条件写成这样是没问题的：\r\n        * `elementObj.offsetLeft>=target` 左移\r\n        * `elementObj.offsetLeft<=target` 右移\r\n    * 若需要允许左右方向移动，判断条件应该写成：\r\n        * `elementObj.offsetLeft==target` \r\n        * 需要配合判断步长的正负性对其上下取整\r\n\r\n**公式测试**\r\n\r\n<button id=\"demoNOUHdw123we\">测试</button>\r\n<button id=\"demoNOUHddfwefe\">复位</button>\r\n<div style=\"position:relative;height: 100px;\">\r\n    <div id=\"demoNOUH9fe12we\"></div>\r\n</div>\r\n<style>\r\n    #demoNOUH9fe12we{\r\n        position: absolute;\r\n        width: 100px;\r\n        height: 100px;\r\n        background-color: skyblue;\r\n    }\r\n</style>\r\n<script>\r\n    (function(){\r\n        var demoNOUH9fe12we = document.querySelector(\"#demoNOUH9fe12we\")\r\n        var demoNOUHdw123we = document.querySelector(\"#demoNOUHdw123we\")\r\n        var demoNOUHddfwefe = document.querySelector(\"#demoNOUHddfwefe\")\r\n        function animate(elementObj, target) {\r\n            //clearInterval可以防止animate被反复调用时导致同时调用多个setInterval，致使timer被覆盖\r\n            clearInterval(elementObj.timer)\r\n            //elementObj.timer可以避免反复申请内存\r\n            elementObj.timer = setInterval(function () {\r\n                if (elementObj.offsetLeft == target) {\r\n                    clearInterval(elementObj.timer)\r\n                }\r\n                //根据公式计算步长\r\n                var step = (target - elementObj.offsetLeft) / 10\r\n                //如果步长是负数则向下取整，如果步长是正数则向上取整。\r\n                step = step > 0 ? Math.ceil(step) : Math.floor(step)\r\n                elementObj.style.left = elementObj.offsetLeft + step + \"px\"\r\n            }, 15)\r\n        }\r\n        demoNOUHdw123we.addEventListener(\"click\", function () {\r\n            animate(demoNOUH9fe12we, 200)\r\n        })\r\n        demoNOUHddfwefe.addEventListener(\"click\", function () {\r\n            animate(demoNOUH9fe12we, 0)\r\n        })\r\n    })();\r\n</script>\r\n\r\n```html\r\n<button id=\"demoNOUHdw123we\">测试</button>\r\n<button id=\"demoNOUHddfwefe\">复位</button>\r\n<div style=\"position:relative;height: 100px;\">\r\n    <div id=\"demoNOUH9fe12we\"></div>\r\n</div>\r\n<style>\r\n    #demoNOUH9fe12we{\r\n        position: absolute;\r\n        width: 100px;\r\n        height: 100px;\r\n        background-color: skyblue;\r\n    }\r\n</style>\r\n<script>\r\n    (function(){\r\n        var demoNOUH9fe12we = document.querySelector(\"#demoNOUH9fe12we\")\r\n        var demoNOUHdw123we = document.querySelector(\"#demoNOUHdw123we\")\r\n        var demoNOUHddfwefe = document.querySelector(\"#demoNOUHddfwefe\")\r\n        function animate(elementObj, target) {\r\n            //clearInterval可以防止animate被反复调用时导致同时调用多个setInterval，致使timer被覆盖\r\n            clearInterval(elementObj.timer)\r\n            //elementObj.timer可以避免反复申请内存\r\n            elementObj.timer = setInterval(function () {\r\n                if (elementObj.offsetLeft == target) {\r\n                    clearInterval(elementObj.timer)\r\n                }\r\n                //根据公式计算步长\r\n                var step = (target - elementObj.offsetLeft) / 10\r\n                //如果步长是负数则向下取整，如果步长是正数则向上取整。\r\n                step = step > 0 ? Math.ceil(step) : Math.floor(step)\r\n                elementObj.style.left = elementObj.offsetLeft + step + \"px\"\r\n            }, 15)\r\n        }\r\n        demoNOUHdw123we.addEventListener(\"click\", function () {\r\n            animate(demoNOUH9fe12we, 200)\r\n        })\r\n        demoNOUHddfwefe.addEventListener(\"click\", function () {\r\n            animate(demoNOUH9fe12we, 0)\r\n        })\r\n    })();\r\n</script>\r\n```\r\n\r\n## 缓动动画函数添加回调函数\r\n\r\n\r\n\r\n### 回调函数\r\n```js\r\nfunction fuc(其他形式参数,callback){\r\n    //do sthing...\r\n    //判断是否传入了回调函数\r\n    if(callback)\r\n    {\r\n        callback();\r\n    }\r\n}\r\nfuc(其他实参,function(){\r\n    //do sthing...\r\n})\r\n```\r\n\r\n### 具体实现\r\n\r\n<button id=\"demonvefoijgfwf\">测试</button>\r\n<button id=\"demofjewoifjw12\">复位</button>\r\n<div style=\"position:relative;height: 100px;\">\r\n    <div id=\"demofweijp090\"></div>\r\n</div>\r\n<style>\r\n    #demofweijp090 {\r\n        position: absolute;\r\n        width: 100px;\r\n        height: 100px;\r\n        background-color: skyblue;\r\n    }\r\n</style>\r\n<script>\r\n    (function () {\r\n        var demofweijp090 = document.querySelector(\"#demofweijp090\")\r\n        var demonvefoijgfwf = document.querySelector(\"#demonvefoijgfwf\")\r\n        var demofjewoifjw12 = document.querySelector(\"#demofjewoifjw12\")\r\n        function animate(elementObj, target, callback) {\r\n            //clearInterval可以防止animate被反复调用时导致同时调用多个setInterval，致使timer被覆盖\r\n            clearInterval(elementObj.timer)\r\n            //elementObj.timer可以避免反复申请内存\r\n            elementObj.timer = setInterval(function () {\r\n                if (elementObj.offsetLeft == target) {\r\n                    clearInterval(elementObj.timer)\r\n                    if (callback) {\r\n                        callback();\r\n                    }\r\n                }\r\n                //根据公式计算步长\r\n                var step = (target - elementObj.offsetLeft) / 10\r\n                //如果步长是负数则向下取整，如果步长是正数则向上取整。\r\n                step = step > 0 ? Math.ceil(step) : Math.floor(step)\r\n                elementObj.style.left = elementObj.offsetLeft + step + \"px\"\r\n            }, 15)\r\n        }\r\n        demonvefoijgfwf.addEventListener(\"click\", function () {\r\n            animate(demofweijp090, 200, function () {\r\n                demofweijp090.style.backgroundColor = \"pink\"\r\n            })\r\n        })\r\n        demofjewoifjw12.addEventListener(\"click\", function () {\r\n            animate(demofweijp090, 0, function () {\r\n                demofweijp090.style.backgroundColor = \"green\"\r\n            })\r\n        })\r\n    })();\r\n</script>\r\n\r\n```html\r\n<button id=\"demonvefoijgfwf\">测试</button>\r\n<button id=\"demofjewoifjw12\">复位</button>\r\n<div style=\"position:relative;height: 100px;\">\r\n    <div id=\"demofweijp090\"></div>\r\n</div>\r\n<style>\r\n    #demofweijp090 {\r\n        position: absolute;\r\n        width: 100px;\r\n        height: 100px;\r\n        background-color: skyblue;\r\n    }\r\n</style>\r\n<script>\r\n    (function () {\r\n        var demofweijp090 = document.querySelector(\"#demofweijp090\")\r\n        var demonvefoijgfwf = document.querySelector(\"#demonvefoijgfwf\")\r\n        var demofjewoifjw12 = document.querySelector(\"#demofjewoifjw12\")\r\n        function animate(elementObj, target, callback) {\r\n            //clearInterval可以防止animate被反复调用时导致同时调用多个setInterval，致使timer被覆盖\r\n            clearInterval(elementObj.timer)\r\n            //elementObj.timer可以避免反复申请内存\r\n            elementObj.timer = setInterval(function () {\r\n                if (elementObj.offsetLeft == target) {\r\n                    clearInterval(elementObj.timer)\r\n                    if (callback) {\r\n                        callback();\r\n                    }\r\n                }\r\n                //根据公式计算步长\r\n                var step = (target - elementObj.offsetLeft) / 10\r\n                //如果步长是负数则向下取整，如果步长是正数则向上取整。\r\n                step = step > 0 ? Math.ceil(step) : Math.floor(step)\r\n                elementObj.style.left = elementObj.offsetLeft + step + \"px\"\r\n            }, 15)\r\n        }\r\n        demonvefoijgfwf.addEventListener(\"click\", function () {\r\n            animate(demofweijp090, 200, function () {\r\n                demofweijp090.style.backgroundColor = \"pink\"\r\n            })\r\n        })\r\n        demofjewoifjw12.addEventListener(\"click\", function () {\r\n            animate(demofweijp090, 0, function () {\r\n                demofweijp090.style.backgroundColor = \"green\"\r\n            })\r\n        })\r\n    })();\r\n</script>\r\n```\r\n\r\n## 动画核心代码\r\n\r\n**animate.js**\r\n\r\n```js\r\nfunction animate(elementObj, target, callback) {\r\n    clearInterval(elementObj.timer)//clearInterval可以防止animate被反复调用时导致同时调用多个setInterval，致使timer被覆盖\r\n    elementObj.timer = setInterval(function () {//elementObj.timer可以避免反复申请内存\r\n        if (elementObj.offsetLeft == target) {\r\n            clearInterval(elementObj.timer)\r\n            if (callback) {\r\n                callback();\r\n            }\r\n        }\r\n        var step = (target - elementObj.offsetLeft) / 10 //根据公式计算步长\r\n        step = step > 0 ? Math.ceil(step) : Math.floor(step)//如果步长是负数则向下取整，如果步长是正数则向上取整。\r\n        elementObj.style.left = elementObj.offsetLeft + step + \"px\"\r\n    }, 15)\r\n}\r\n```\r\n\r\n\r\n## 动画案例：侧边栏\r\n\r\n<div id=\"demo83492379\">\r\n    <div class=\"more\">→</div>\r\n    <div class=\"more-address\">了解更多</div>\r\n</div>\r\n<style>\r\n    #demo83492379{\r\n        position: relative;\r\n        height: 50px;\r\n        width: 50px;\r\n        background-color: pink;\r\n        overflow: visible;\r\n        word-break: keep-all;\r\n    }\r\n    #demo83492379 .more{\r\n        z-index: 2;\r\n        position: relative;\r\n        width: 50px;\r\n        height: 50px;\r\n        background-color: black;\r\n        font-size: 25px;\r\n        line-height: 50px;\r\n        text-align: center;\r\n    }\r\n    #demo83492379 .more-address{\r\n        position: absolute;\r\n        left: -500px;\r\n        top: 0;\r\n        display: inline-block;\r\n        padding: 0 10px;\r\n        padding-left: 50px;\r\n        height: 50px;\r\n        background-color: black;\r\n        font-size: 25px;\r\n        line-height: 50px;\r\n        text-align: center;\r\n    }\r\n</style>\r\n<script>\r\n(function(){\r\n    var more = document.querySelector(\"#demo83492379 .more\")\r\n    var more_address = document.querySelector(\"#demo83492379 .more-address\")\r\n    more_address.style.left=-more_address.offsetWidth+\"px\"\r\n    more.addEventListener(\"mouseenter\",function(){\r\n        animate(more_address,0,function(){\r\n            more.innerHTML=\"←\"\r\n        })\r\n    })\r\n    more.addEventListener(\"mouseleave\",function(){\r\n        animate(more_address,-more_address.offsetWidth,function(){\r\n            more.innerHTML=\"→\"\r\n        })\r\n    })\r\n    function animate(elementObj, target, callback) {\r\n    clearInterval(elementObj.timer)//clearInterval可以防止animate被反复调用时导致同时调用多个setInterval，致使timer被覆盖\r\n    elementObj.timer = setInterval(function () {//elementObj.timer可以避免反复申请内存\r\n        if (elementObj.offsetLeft == target) {\r\n            clearInterval(elementObj.timer)\r\n            if (callback) {\r\n                callback();\r\n            }\r\n        }\r\n        var step = (target - elementObj.offsetLeft) / 10 //根据公式计算步长\r\n        step = step > 0 ? Math.ceil(step) : Math.floor(step)//如果步长是负数则向下取整，如果步长是正数则向上取整。\r\n        elementObj.style.left = elementObj.offsetLeft + step + \"px\"\r\n    }, 15)\r\n}\r\n})();\r\n</script>\r\n\r\n\r\n```html\r\n<div id=\"demo83492379\">\r\n    <div class=\"more\">→</div>\r\n    <div class=\"more-address\">了解更多</div>\r\n</div>\r\n<style>\r\n    #demo83492379{\r\n        position: relative;\r\n        height: 50px;\r\n        width: 50px;\r\n        background-color: pink;\r\n        overflow: visible;\r\n        word-break: keep-all;\r\n    }\r\n    #demo83492379 .more{\r\n        z-index: 2;\r\n        position: relative;\r\n        width: 50px;\r\n        height: 50px;\r\n        background-color: black;\r\n        font-size: 25px;\r\n        line-height: 50px;\r\n        text-align: center;\r\n    }\r\n    #demo83492379 .more-address{\r\n        position: absolute;\r\n        left: -500px;\r\n        top: 0;\r\n        display: inline-block;\r\n        padding: 0 10px;\r\n        padding-left: 50px;\r\n        height: 50px;\r\n        background-color: black;\r\n        font-size: 25px;\r\n        line-height: 50px;\r\n        text-align: center;\r\n    }\r\n</style>\r\n<script>\r\n(function(){\r\n    var more = document.querySelector(\"#demo83492379 .more\")\r\n    var more_address = document.querySelector(\"#demo83492379 .more-address\")\r\n    more_address.style.left=-more_address.offsetWidth+\"px\"\r\n    more.addEventListener(\"mouseenter\",function(){\r\n        animate(more_address,0,function(){\r\n            more.innerHTML=\"←\"\r\n        })\r\n    })\r\n    more.addEventListener(\"mouseleave\",function(){\r\n        animate(more_address,-more_address.offsetWidth,function(){\r\n            more.innerHTML=\"→\"\r\n        })\r\n    })\r\n    function animate(elementObj, target, callback) {\r\n    clearInterval(elementObj.timer)//clearInterval可以防止animate被反复调用时导致同时调用多个setInterval，致使timer被覆盖\r\n    elementObj.timer = setInterval(function () {//elementObj.timer可以避免反复申请内存\r\n        if (elementObj.offsetLeft == target) {\r\n            clearInterval(elementObj.timer)\r\n            if (callback) {\r\n                callback();\r\n            }\r\n        }\r\n        var step = (target - elementObj.offsetLeft) / 10 //根据公式计算步长\r\n        step = step > 0 ? Math.ceil(step) : Math.floor(step)//如果步长是负数则向下取整，如果步长是正数则向上取整。\r\n        elementObj.style.left = elementObj.offsetLeft + step + \"px\"\r\n    }, 15)\r\n}\r\n})();\r\n</script>\r\n```"}
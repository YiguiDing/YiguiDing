{"shortInfo":{"title":"《数据结构与算法分析》第4章_2.二叉树的概念","cover":"\\self_server\\assets\\images\\《数据结构与算法分析》学习笔记\\cover.png","coverWidth":813,"coverHeight":539,"date":"2022-05-27T11:22:35.000Z","modified":"2022-05-31T00:23:01.121Z","tags":["《数据结构与算法分析》","笔记"],"hideAtIndex":true,"categories":"笔记","id":1476136523,"countWords":147,"readSeconds":14.7,"assetsbaseUrl":"/self_server/assets/"},"content":"# 第4章_2.二叉树的概念\r\n* 二叉树（binary tree）\r\n* 每个节点最多拥有两个子节点\r\n* 有N个节点的二叉树平均深度为O(√N)\r\n* 二叉查找树的平均深度为O(log N)\r\n* 画图时，用圆圈和直线表示，因为二叉树实际上是图（graph）\r\n* 最差情况下其深度为N-1\r\n![](./images/《数据结构与算法分析》学习笔记/Clipboard_2022-05-28-04-00-27.png)\r\n\r\n## 具体实现\r\n* **构成：** 一个值域两个指针域\r\n```c\r\n#define ElementType int\r\ntypedef struct TreeNode * ptrToNode;\r\ntypedef struct ptrToNode * Tree;\r\nstruct TreeNode\r\n{\r\n  ElementType Element;\r\n  ptrToNode Left;\r\n  ptrToNode Right;\r\n};\r\n```\r\n\r\n\r\n"}
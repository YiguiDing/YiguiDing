{"shortInfo":{"title":"java学习笔记","date":"2022-10-22T08:22:00.000Z","cover":"\\self_server\\assets\\images\\default_cover2.jpg","tags":["笔记","java"],"categories":"笔记","id":4041691323,"countWords":4272,"readSeconds":427.2,"assetsbaseUrl":"/self_server/assets/"},"content":"## 目录\r\n- [目录](#目录)\r\n- [概述](#概述)\r\n- [基础语法](#基础语法)\r\n  - [注释](#注释)\r\n  - [字面量](#字面量)\r\n  - [基本数据类型](#基本数据类型)\r\n  - [标识符命名要求](#标识符命名要求)\r\n- [类型转换](#类型转换)\r\n  - [自动类型转换](#自动类型转换)\r\n  - [强制类型转换](#强制类型转换)\r\n- [运算符](#运算符)\r\n  - [算数运算符](#算数运算符)\r\n  - [字符串连接运算符](#字符串连接运算符)\r\n  - [自增自减运算符](#自增自减运算符)\r\n  - [赋值运算符](#赋值运算符)\r\n  - [关系运算符(条件运算符)](#关系运算符条件运算符)\r\n  - [逻辑运算符](#逻辑运算符)\r\n  - [三元运算符](#三元运算符)\r\n  - [运算符优先级](#运算符优先级)\r\n- [键盘录入API](#键盘录入api)\r\n- [流程控制](#流程控制)\r\n  - [分支](#分支)\r\n  - [循环](#循环)\r\n- [随机数](#随机数)\r\n- [引用数据类型](#引用数据类型)\r\n  - [数组](#数组)\r\n  - [在内存中的占用情况](#在内存中的占用情况)\r\n- [方法](#方法)\r\n  - [定义、调用](#定义调用)\r\n  - [方法在内存中的调用流程](#方法在内存中的调用流程)\r\n  - [方法参数传递机制](#方法参数传递机制)\r\n  - [方法重载](#方法重载)\r\n- [基础知识巩固练习案例](#基础知识巩固练习案例)\r\n  - [买飞机票算票价](#买飞机票算票价)\r\n  - [找素数](#找素数)\r\n  - [生成验证码](#生成验证码)\r\n  - [数字加密](#数字加密)\r\n  - [双色球系统案例](#双色球系统案例)\r\n- [面向对象](#面向对象)\r\n  - [类](#类)\r\n\r\n## 概述\r\n![](./images/java学习笔记/2022-10-22-08-32-16.png)\r\n\r\n![](./images/java学习笔记/2022-10-22-08-33-28.png)\r\n\r\n![](./images/java学习笔记/2022-10-22-08-36-55.png)\r\n\r\n![](./images/java学习笔记/2022-10-22-08-38-00.png)\r\n\r\n![](./images/java学习笔记/2022-10-22-08-40-13.png)\r\n\r\n## 基础语法\r\n\r\n### 注释\r\n```java\r\n// 单行注释\r\n/*\r\n    多行注释\r\n    多行注释\r\n    多行注释\r\n    多行注释\r\n */\r\n/**\r\n    文档注释\r\n    @param\t说明一个方法的参数，一般用于方法注释\t@param parameter-name explanation\r\n    @return\t说明返回值类型，一般用于方法注释，不能出现再构造方法中\t@return explanation\r\n    @author\t标识一个类的作者，一般用于类注释\r\n    @version\t指定类的版本，一般用于类注释\t@version info\r\n */\r\n```\r\n\r\n### 字面量\r\n* 数值 `123` `-321`\r\n  * 二进制 `0B11111111` => `255` `0B11111111111111111111111111111111` => `-1`\r\n  * 八进制 `0777` `0001`\r\n  * 十六进制 `0xff` `0X01`\r\n* 浮点数 `1.23` \r\n* 字符 `'a'` =>97 `'A'` =>65 `'0'` =>48  `'\\n'` `'\\t'` `'汉'`\r\n* 字符串 `\"123\"` `\"ABC\"`\r\n* 布尔值 `true` `false`\r\n* 空值 `null`\r\n\r\n### 基本数据类型\r\n* **整型** byte(1B) short(2B) int(4B,默认) long(8B)\r\n* **浮点型** float(4B) double(8B,默认)\r\n* **字符** <gold>char(2B)</gold>\r\n* **布尔** boolean(1B)\r\n\r\n* 注意点\r\n  * 变量先声明后使用\r\n  * 变量声明可无初值，**使用时必须有初值**\r\n  * 变量不能存储和声明类型不一致的数据\r\n  * <green>同一作用域及其 **子作用域** **不能有两同名变量**</green>\r\n\r\n### 标识符命名要求\r\n* 组成：字母+数字+**下划线**+**美元符**\r\n* 不能以数字开头，不能是关键字\r\n* 命名规范\r\n    * 变量名：小驼峰命名法\r\n    * 类名：大驼峰命名法\r\n\r\n## 类型转换 \r\n\r\n### 自动类型转换\r\n* **赋值时的自动类型转换：根据所占存储空间小转大：** \r\n  * byte -> short -> int -> long -> float -> double\r\n  * <green>char -> int<green>\r\n  * <red>char -x-> float</red>\r\n* 在表达式运算过程中的自动类型转换\r\n  * byte、short、char =(直接)=> int -> long -> float -> double\r\n```java\r\n    byte a = 1 , b = 2;\r\n    byte c = a + b; //报错\r\n    int d = a + b; //不报错\r\n```\r\n\r\n### 强制类型转换\r\n* 整型间强转：**截取低位字节**直接赋值，可能导致数据丢失\r\n* 浮点型间强转：丢掉小数部分，保留整数部分然后按**整型间强转**赋值 99.5 -> 99\r\n* \r\n![](./images/java学习笔记/2022-10-22-13-27-17.png)\r\n\r\n##  运算符\r\n### 算数运算符\r\n* 加 +\r\n* 减 -\r\n* 乘 *\r\n* 除 / 整型间相除结果仍是整型 \r\n* 余 %\r\n\r\n### 字符串连接运算符\r\n```java\r\nSystem.out.println(\"hhhh\"+\"xx\") //结果: \"hhhhxx\"\r\nSystem.out.println(\"hhhh\"+'x')  //结果: \"hhhhx\"\r\nSystem.out.println(\"hhhh\"+ 5 )  //结果: \"hhhh5\"\r\n```\r\n\r\n### 自增自减运算符\r\n```java\r\nint c = 10;\r\nint d = 5;\r\nint result = c++ + ++c - --d - ++d + 1 + c--;\r\nSystem.out.println(result);\r\n//c 10 11 12    13\r\n//d 5        4\r\n//r = 10 + 12 - 4 + 1 + 12 = 26\r\n```\r\n\r\n\r\n### 赋值运算符\r\n**基本赋值运算符**\r\n```java\r\na = 1;\r\n```\r\n\r\n**扩展运算符**：<gold>自带强制转换功能</gold>\r\n```java\r\na += 1; // 等价于 a = a(a的数据类型) + 1\r\na -= 1; // 等价于 a = a(a的数据类型) - 1\r\na *= 1; // 等价于 a = a(a的数据类型) * 1\r\na /= 1; // 等价于 a = a(a的数据类型) / 1\r\na %= 1; // 等价于 a = a(a的数据类型) % 1\r\n```\r\n\r\n\r\n```java\r\nbyte result = 1 ;\r\nbyte step = 1 ;\r\nresult =  result + step ; //报错，右侧结果为int类型，左侧变量为byte类型\r\nresult = (byte) ( result + step );//不报错\r\nresult += step;//不报错，和上面等效\r\n```\r\n\r\n### 关系运算符(条件运算符)\r\n```java\r\n/*\r\n    a == b\r\n    a != b\r\n    a >= b\r\n    a <= b\r\n    a >  b\r\n    a <  b\r\n*/\r\n```\r\n\r\n\r\n### 逻辑运算符\r\n```java\r\n/*\r\n    & 逻辑 与       左右两边都会执行\r\n    | 逻辑 或       左右两边都会执行\r\n    ! 逻辑 非       左右两边都会执行\r\n    ^ 逻辑 异或     左右两边都会执行\r\n\r\n    && 逻辑 与      左边false则不执行右边(短路)\r\n    || 逻辑 或      左边true 则不执行右边(短路)\r\n*/\r\n```\r\n\r\n### 三元运算符\r\n```java\r\nboolean result = (条件表达式)? 表达式1 : 表达式2 ;\r\n```\r\n\r\n### 运算符优先级\r\n![](./images/java学习笔记/2022-10-22-14-17-37.png)\r\n\r\n\r\n## 键盘录入API\r\n```java\r\npackage com.yiguiding.package1;\r\n\r\nimport java.util.Scanner;//导入包\r\n\r\npublic class HelloWorld {\r\n    public static void main(String[] args) {\r\n        Scanner sc = new Scanner(System.in);//创建scanner实例\r\n\r\n        System.out.println(\"请输入年龄\");\r\n        int age = sc.nextInt();//调用相关函数\r\n\r\n        System.out.println(\"请输入姓名\");\r\n        String name = sc.next();\r\n\r\n        System.out.println(\"你的姓名是：\" + name);\r\n        System.out.println(\"你的年龄是：\" + age);\r\n    }\r\n}\r\n```\r\n\r\n## 流程控制\r\n* 顺序：默认\r\n* 分支(选择)： `if` `switch` \r\n* 循环：`for(;;){}` `while(){}` `do{}while();` \r\n\r\n### 分支\r\n\r\n**if**\r\n\r\n```java\r\nif(){\r\n\r\n}else if(){\r\n\r\n}else{\r\n\r\n}\r\n```\r\n**switch**\r\n* `switch(表达式)` 表达式只能是byte char short int 枚举(jdk5) string(jdk7) \r\n* `switch(表达式)` 表达式不能是long float double\r\n* `case 值:` 中的值只能是字面量\r\n```java\r\nswitch(表达式){//表达式只能是byte char short int 枚举(jdk5) string(jdk7) 不能是：long float double\r\n    case 字面量://只能是字面量\r\n        语句;\r\n        break;//跳出switch执行\r\n    default:\r\n        语句;\r\n        break;\r\n}\r\n```\r\n\r\n```java\r\npackage com.yiguiding.package1;\r\nimport java.util.Scanner;\r\npublic class HelloWorld {\r\n    public static void main(String[] args) {\r\n        Scanner sc = new Scanner(System.in);\r\n        int month =  sc.nextInt();\r\n        switch (month) {\r\n            case 1:\r\n            case 3:\r\n            case 5:\r\n            case 7:\r\n            case 8:\r\n            case 10:\r\n            case 12:\r\n                System.out.println(\"32天\");\r\n                break;\r\n            case 4:\r\n            case 6:\r\n            case 9:\r\n            case 11:\r\n                System.out.println(\"30天\");\r\n                break;\r\n            case 2:\r\n                System.out.println(\"瑞年29天，非瑞年28天\");\r\n                break;\r\n            default:\r\n                System.out.println(\"输入月份不正确\");\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n\r\n### 循环\r\n\r\nfor\r\n```java\r\nfor(int i = 0; i<100 ;i++){\r\n\r\n}\r\n```\r\n\r\nwhile\r\n```java\r\nwhile(){\r\n\r\n}\r\n```\r\n\r\ndo...while();\r\n```java\r\ndo{\r\n\r\n}while();\r\n```\r\n\r\nbreak;continue;\r\n\r\n```java\r\ncontinue;//跳出本次循环，进入下一次循环\r\nbreak;//跳出并结束本次循环\r\n```\r\n\r\n\r\n## 随机数\r\n```java\r\npackage com.yiguiding.package1;\r\n\r\nimport java.util.Random;//导包\r\n\r\npublic class HelloWorld {\r\n    public static void main(String[] args) {\r\n        Random random = new Random();//实例化\r\n        System.out.println(random.nextInt(5,11));//获取5-10的随机数\r\n        System.out.println(random.nextInt(11));//获取0-10的随机数\r\n        System.out.println(random.nextInt(10)+1);//获取1-10的随机数\r\n    }\r\n}\r\n```\r\n\r\n\r\n## 引用数据类型\r\n### 数组\r\n\r\n数组是引用数据类型，数组变量名存的是数组在内存中的地址。\r\n![](./images/java学习笔记/2022-10-22-15-17-19.png)\r\n\r\n**静态初始化：数组长度固定**\r\n```java\r\n// 完整写法\r\n    int[] scores = new int[]{123,456,789,101,102,103};//等效写法\r\n    int scores[] = new int[]{123,456,789,101,102,103};//等效写法\r\n// 简化写法\r\n    int[] scores = {123,456,789,101,102,103};//等效写法\r\n    int scores[] = {123,456,789,101,102,103};//等效写法\r\n```\r\n\r\n**动态初始化：数组长度可在程序中指定**\r\n```java\r\n// 完整写法\r\n    int[] empty = new int[10];\r\n    int empty[] = new int[10];\r\n// 简化写法：没有简化写法！！！\r\n    int[10] score;//错误写法\r\n    int score[10];//错误写法\r\n```\r\n\r\n**数组静态初始化和动态初始化写法相互独立不可混用**\r\n```java\r\nint[] score = new int[10]{123,456,789,101,102,103};//错误写法\r\n```\r\n\r\n\r\n**动态初始化数组元素的初始值**：\r\n* 数值型初始值： `0`\r\n* 浮点型初始值： `0.0`\r\n* `boolean`初始值： `false`\r\n* 引用类型初始值： `null`\r\n\r\n![](./images/java学习笔记/2022-10-22-15-50-47.png)\r\n\r\n\r\n**访问数组元素**\r\n```java\r\npackage com.yiguiding.package1;\r\nimport java.util.Random;\r\npublic class HelloWorld {\r\n    public static void main(String[] args) {\r\n        Random random = new Random();\r\n        int[] score = new int[10];\r\n        for (int i = 0; i < score.length; i++) {\r\n            score[i] = random.nextInt(10);\r\n        }\r\n        for (int i = 0; i < score.length; i++) {\r\n            System.out.println(score[i]);\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n**案例:输入一组数，按随机顺序输出这组数**\r\n方法1：\r\n```java\r\npackage com.yiguiding.package1;\r\n\r\nimport java.util.Random;\r\nimport java.util.Scanner;\r\n\r\npublic class HelloWorld {\r\n    public static void main(String[] args) {\r\n        //案例：输入一组数，按随机顺序输出这组数\r\n        Scanner sc = new Scanner(System.in);\r\n        Random random = new Random();//实例化\r\n        int[] arr= new int[5];\r\n        for (int i = 0; i < arr.length; i++) {\r\n            System.out.println(\"请输入第\"+i+1+\"位员工的工号：\");\r\n            arr[i] = sc.nextInt();\r\n        }\r\n        System.out.println(\"员工上台演讲的顺序为：\");\r\n        for (int i = 0; i < arr.length; i++) {\r\n            while (true){\r\n                int index = random.nextInt(arr.length);\r\n                if (arr[index]!=-1){\r\n                    System.out.println(arr[index]);\r\n                    arr[index] = -1;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n方法2：\r\n```java\r\npackage com.yiguiding.package1;\r\n\r\nimport java.util.Random;\r\nimport java.util.Scanner;\r\n\r\npublic class HelloWorld {\r\n    public static void main(String[] args) {\r\n        //案例：输入一组数，按随机顺序输出这组数\r\n        Scanner sc = new Scanner(System.in);\r\n        Random random = new Random();//实例化\r\n        int[] arr= new int[5];\r\n        for (int i = 0; i < arr.length; i++) {\r\n            System.out.println(\"请输入第\"+i+1+\"位员工的工号：\");\r\n            arr[i] = sc.nextInt();\r\n        }\r\n\r\n        for (int i = 0; i < arr.length; i++) {\r\n            //获取随机两个下标\r\n            int indexA = random.nextInt(arr.length);\r\n            int indexB = random.nextInt(arr.length);\r\n            //交换\r\n            int temp = arr[indexA];\r\n            arr[indexA] = arr[indexB];\r\n            arr[indexB] = temp;\r\n        }\r\n        System.out.println(\"员工上台演讲的顺序为：\");\r\n        for (int i = 0; i < arr.length; i++) {\r\n            System.out.println(arr[i]);\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n\r\n### 在内存中的占用情况\r\n**内存区域**\r\n* 栈内存：正在执行的函数、变量\r\n* 堆内存：动态分配内存时所使用的内存区域，`new object[100]`\r\n* 方法区：程序运行时，编译后的字节码文件被加载到的区域\r\n* 本地方法区:\r\n* 寄存器:\r\n\r\n**栈、堆、方法区在程序运行过程中的使用情况**\r\n![](./images/java学习笔记/2022-10-22-16-29-56.png)\r\n\r\n\r\n**两个数组指向同一个数组对象**\r\n\r\n![](./images/java学习笔记/2022-10-22-16-32-54.png)\r\n\r\n\r\n\r\n## 方法\r\n\r\n### 定义、调用\r\n* 形参列表可有可无\r\n* 方法需严格按照形参类型传入值\r\n* 方法不需要返回值则返回类型可为void，此时则不能使用return语句;\r\n* 方法的定义顺序无所谓\r\n* 方法不能嵌套定义\r\n```java\r\n/* 格式\r\n修饰符 返回值类型 方法名(形参列表){\r\n    // 代码\r\n    return 返回值;\r\n}\r\n*/\r\npublic class HelloWorld {\r\n    public static void main(String[] args) {\r\n        System.out.println(sum(1,5));\r\n    }\r\n    public static int sum(int a,int b) {\r\n        return a + b;\r\n    }\r\n}\r\n```\r\n\r\n### 方法在内存中的调用流程\r\n![](./images/java学习笔记/2022-10-22-17-16-04.png)\r\n\r\n\r\n### 方法参数传递机制\r\n形式参数传递机制：值传递\r\n* 基本数据类型：传递值\r\n* 引用数据类型：传递地址\r\n\r\n```java\r\npublic class HelloWorld {\r\n    public static void main(String[] args) {\r\n        int[] arr1 = {111,222,333,444};\r\n        int[] arr2 = {111,222,333,444};\r\n        System.out.println(compareArrList(arr1,arr2));\r\n    }\r\n    public static boolean compareArrList(int[] arr1,int[] arr2){\r\n        if(arr1==null || arr2==null)//任意一个是空值都判断为不等\r\n            return false;\r\n        if (arr1 == arr2)//比较地址是否相同\r\n            return true;\r\n        if (arr1.length == arr2.length){\r\n            for (int i = 0; i < arr1.length; i++) {\r\n                if (arr1[i] != arr2[i])\r\n                    return false;\r\n            }\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n\r\n### 方法重载\r\n方法名称相同形参列表不同\r\n\r\n![](./images/java学习笔记/2022-10-22-17-41-32.png)\r\n\r\n\r\n## 基础知识巩固练习案例\r\n\r\n### 买飞机票算票价\r\n![](./images/java学习笔记/2022-10-22-18-06-18.png)\r\n```java\r\nimport java.util.Scanner;\r\n\r\npublic class HelloWorld {\r\n    public static void main(String[] args) {\r\n        Scanner scanner = new Scanner(System.in);\r\n        double price=0.0;\r\n        int month=1;\r\n        int type=2;\r\n        double result = 0.0;\r\n        do {\r\n            System.out.println(\"请输入机票原价格：\");\r\n            price = scanner.nextDouble();\r\n            System.out.println(\"请输入当前月份：(1-12)\");\r\n            month = scanner.nextInt();\r\n            System.out.println(\"请输入仓位类型：1.头等舱；2.经济舱：(1-2)\");\r\n            type = scanner.nextInt();\r\n        }while (price<=0 || month< 1 || month >12 || !( type==1 || type==2) );\r\n\r\n        if (5 <= month && month <= 10){//旺季\r\n            if (type == 1)//头等舱\r\n                result = 0.9 * price;\r\n            else //经济舱\r\n                result = 0.85 * price;\r\n        } else {//淡季\r\n            if (type == 1)//头等舱\r\n                result = 0.7 * price;\r\n            else //经济舱\r\n                result = 0.65 * price;\r\n        }\r\n        System.out.println(\"你的机票价格为：\"+result);\r\n    }\r\n}\r\n```\r\n\r\n### 找素数\r\n![](./images/java学习笔记/2022-10-22-18-07-51.png)\r\n```java\r\npublic class HelloWorld {\r\n    public static void main(String[] args) {\r\n//        Scanner scanner = new Scanner(System.in);\r\n        int count = 0;\r\n        for (int i = 101; i <= 200; i++) {\r\n            if (isPrime(i)){\r\n                System.out.print(i + \"\\t\");\r\n                count++;\r\n            }\r\n        }\r\n        System.out.println(\"\\n共有素数\" + count + \"个\");\r\n    }\r\n    public static boolean isPrime(int num){\r\n        if (num <= 2)\r\n            return false;\r\n        int sqrt = (int)Math.sqrt(num);\r\n        for (int i = 2; i <= sqrt; i++) {\r\n            if (num%i == 0)\r\n                return false;\r\n        }\r\n        return true;\r\n    }\r\n}\r\n```\r\n结果\r\n![](./images/java学习笔记/2022-10-22-18-17-10.png)\r\n\r\n\r\n### 生成验证码\r\n![](./images/java学习笔记/2022-10-22-18-30-17.png)\r\n```java\r\npackage com.yiguiding.package1;\r\n\r\nimport java.util.Random;\r\nimport java.util.Scanner;\r\n\r\npublic class HelloWorld {\r\n    public static void main(String[] args) {\r\n        System.out.println(creatCode(5));\r\n    }\r\n    public static String creatCode(int length){\r\n        String code = \"\";\r\n        Random rd = new Random();\r\n        for (int i = 0; i < length; i++) {\r\n            switch (rd.nextInt(3)){//随机0-2\r\n                case 0:\r\n                    code+=(char)(rd.nextInt('A','Z') + 1);//随机获取一个大写字母并拼接给code\r\n                    break;\r\n                case 1:\r\n                    code+=(char)(rd.nextInt('a','z') + 1);//随机获取一个小写字母并拼接给code\r\n                    break;\r\n                case 2:\r\n                    code+=(char)(rd.nextInt('0','9') + 1);\r\n                    break;\r\n            }\r\n        }\r\n        return code;\r\n    }\r\n}\r\n\r\n```\r\n\r\n### 数字加密\r\n![](./images/java学习笔记/2022-10-22-18-36-17.png)\r\n\r\n```java\r\npackage com.yiguiding.package1;\r\n\r\nimport java.util.Random;\r\nimport java.util.Scanner;\r\n\r\npublic class HelloWorld {\r\n    public static void main(String[] args) {\r\n        int[] arr = {1,9,8,3};\r\n        printArrList(arr);//输出\r\n        enCode(arr);//加密\r\n        printArrList(arr);//输出\r\n        enCode(arr);//再次加密就是解密\r\n        printArrList(arr);//输出\r\n\r\n    }\r\n    public static int[] enCode(int[] arrList){\r\n        for (int i = 0; i < arrList.length; i++) {\r\n            arrList[i] = (arrList[i] + 5) % 10 ;\r\n        }\r\n        return reverse(arrList);\r\n    }\r\n    public static int[] reverse(int[] arrList){//翻转\r\n        for (int i = 0,j=arrList.length-1; i < arrList.length/2; i++,j--) {\r\n            int temp = arrList[i];\r\n            arrList[i] = arrList[j];\r\n            arrList[j] = temp;\r\n        }\r\n        return arrList;\r\n    }\r\n    public static void printArrList(int[] arrList){\r\n        System.out.print('[');\r\n        if (arrList != null && arrList.length != 0){\r\n            for (int i = 0; i < arrList.length; i++) {\r\n                System.out.print( (i == arrList.length-1)? arrList[i] : arrList[i]+\",\");\r\n            }\r\n        }\r\n        System.out.println(']');\r\n    }\r\n}\r\n\r\n```\r\n输出\r\n![2022-10-23-02-55](./images/java学习笔记/2022-10-22-18-54-32.png)\r\n\r\n\r\n### 双色球系统案例\r\n![](./images/java学习笔记/2022-10-23-03-44-25.png)\r\n```java\r\npackage com.yiguiding.package1;\r\n\r\nimport java.util.Random;\r\nimport java.util.Scanner;\r\n\r\npublic class HelloWorld {\r\n    public static void main(String[] args) {\r\n        int count = 0;\r\n        int[] users = createLuckNumbers();//守号\r\n        while (true){\r\n            count++;\r\n            int[] gen = createLuckNumbers();//开奖\r\n            System.out.println(\"开奖号码：\");\r\n            printArrList( gen );//输出\r\n            System.out.println(\"你的号码：\");\r\n            printArrList( users );//输出\r\n            int result = luckType(gen,users);//返回是几等奖\r\n            if (result<=2){//若中了1或2等奖则输出\r\n                System.out.println(\"连续购买\"+ count +\"次,恭喜获得\"+result+\"等奖\");\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    public static int[] createLuckNumbers(){\r\n        int[] luckNumbers = new int[6+1];//用于存放6个红球1个蓝球的空间\r\n        int[] reds = {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33};//红球33个\r\n        int[] blues = {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16};//蓝球16个\r\n        Random rd = new Random();\r\n        for (int i = 0; i < luckNumbers.length-1; i++) {//随机选六个红球\r\n            while (true){\r\n                int index = rd.nextInt(reds.length);\r\n                if (reds[index]!=-1){//判断是否已经被拿出\r\n                    luckNumbers[i] = reds[index];//拿出红球\r\n                    reds[index] = -1;//标记为已经拿出\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        while (true){//随机选一个个篮球\r\n            int index = rd.nextInt(blues.length);\r\n            if (blues[index]!=-1){//判断是否已经被拿出\r\n                luckNumbers[luckNumbers.length-1] = blues[index];//拿出蓝球,放到最后一个位置\r\n                reds[index] = -1;//标记为已经拿出\r\n                break;\r\n            }\r\n        }\r\n        return luckNumbers;\r\n    }\r\n    public static int luckType(int[] luckNumsTarget,int[] luckNumsUsers){\r\n        int countRed = 0;//记录红球一致个数\r\n        int countBlue = 0;//记录蓝球一致个数\r\n        for (int i = 0; i < luckNumsUsers.length-1; i++) {\r\n            for (int j = 0; j < luckNumsTarget.length-1; j++) {\r\n                if (luckNumsUsers[i] == luckNumsTarget[j])\r\n                    countRed++;\r\n            }\r\n        }\r\n        if (luckNumsUsers[luckNumsUsers.length-1] == luckNumsTarget[luckNumsTarget.length-1]){//判断最后一个球是不是一致\r\n            countBlue ++;\r\n        }\r\n        if (countRed == 6 && countBlue == 1)\r\n            return  1;//一等奖\r\n\r\n        if (countRed == 6 && countBlue == 0)\r\n            return 2;//二等奖\r\n\r\n        if (countRed == 5 && countBlue == 1)\r\n            return 3;//三等奖\r\n\r\n        if (countRed == 5 && countBlue == 0)\r\n            return 4;//四等奖\r\n        if (countRed == 4 && countBlue == 1)\r\n            return 4;//四等奖\r\n\r\n        if (countRed == 4 && countBlue == 0)\r\n            return 5;//五等奖\r\n        if (countRed == 3 && countBlue == 1)\r\n            return 5;//五等奖\r\n        if (countRed == 2 && countBlue == 1)\r\n            return 5;//五等奖\r\n\r\n        if (countRed == 1 && countBlue == 1)\r\n            return 6;//六等奖\r\n        if (countRed == 0 && countBlue == 1)\r\n            return 6;//六等奖\r\n        else\r\n            return 7;//未中奖\r\n    }\r\n    public static void printArrList(int[] arrList){\r\n        System.out.print('[');\r\n        if (arrList != null && arrList.length != 0){\r\n            for (int i = 0; i < arrList.length; i++) {\r\n                System.out.print( (i == arrList.length-1)? arrList[i] : arrList[i]+\",\");\r\n            }\r\n        }\r\n        System.out.println(']');\r\n    }\r\n}\r\n```\r\n\r\n![](./images/java学习笔记/2022-10-23-03-45-25.png)\r\n\r\n\r\n## 面向对象\r\n\r\n### 类\r\n**类是对象的设计图**，对象是根据设计图创建出的实体\r\n\r\n**注意**：\r\n* <green>一个java文件中可以定义多个类，但只能有一个public类</green>\r\n* <green>public修饰的类名必须为java的文件名</green>\r\n* <green>一般不用为成员变量赋初始值</green>\r\n* java存在自动垃圾回收器,会定期清理堆内存中没有被引用的对象\r\n\r\n**类的语法构成**\r\n```java\r\npublic class 类名{\r\n    1.成员变量，名词\r\n        语法格式：修饰符 变量类型 变量名 = 初始值(可不指定初始值);\r\n    2.成员方法，动词\r\n    3.构造器\r\n    4.代码块\r\n    5.内部类\r\n}\r\n```\r\n\r\n**类的尝试编写**\r\n```java\r\npublic class HelloWorld {\r\n    public static void main(String[] args) {\r\n        Person p1 = new Person(\"DYG\",22);\r\n        p1.sayHi();\r\n    }\r\n}\r\n class Person{\r\n    String name;//车名\r\n    int age;//年龄\r\n    Person(String name,int age){//构造函数\r\n        this.name = name;\r\n        this.age = age;\r\n    }\r\n    public void sayHi(){\r\n        System.out.println(\"你好，我的名字是\"+name+\"。\");\r\n    }\r\n}\r\n```\r\n\r\n**对象在内存中的执行机制**\r\n![](./images/java学习笔记/2022-10-23-04-27-47.png)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n<style>\r\n    gold{\r\n        color:black;    \r\n        background-color:gold;\r\n    }\r\n    green{\r\n        color:white;\r\n        background-color:green;\r\n    }\r\n    red{\r\n        color:white;\r\n        background-color:red;\r\n    }\r\n</style>"}
CentOS
Ruby安装
	yum install centos-release-scl-rh　　　　//会在/etc/yum.repos.d/目录下多出一个CentOS-SCLo-scl-rh.repo源 实际上 CentOS extra 仓库有两个包关于 SCL，一个是 centos-release-scl 还有一个是 centos-release-scl-rh，它们两者的区别在于一个是 SoftwareCollection 小组所有的打包 RPM，另一个则只包含 RedHat 官方打包内容，个人建议使用后者。
　　　　	yum search ruby30		//搜索版本。Bundler对ruby有版本要求，Github-Pages 使用 Jekyll 3.9，它与 Ruby 3 不兼容。此时Github使用的是Ruby2.7.3
	yum install rh-ruby30  -y　　　　//直接yum安装即可
　　　　	scl  enable  rh-ruby30 bash　　　　//必要
　　　　	ruby -v　　　　//查看安装版本
Bundler安装
	gem install bundler //Gem 是 Ruby 模块 (叫做 Gems) 的包管理器。其包含包信息，以及用于安装的文件。

jekyll安装
	方法1用bundler 安装jekyll：//Bundler 管理 Ruby gem 依赖项，减少 Jekyll 构建错误，并防止与环境相关的错误。
		//应该需要这个 yum install gcc-c++
		yum install rh-ruby27-ruby-devel.x86_64 //安装ruby27开发环境
		修改Gemfile ：
			source "https://rubygems.org"
			gem "jekyll", "~> 3.9.0" 		//github的 jekyll为3.9.0
		bundler install				
	方法2用gem 安装jekyll：//实践后发现报错
		yum install gcc-c++
		gem install jekyll 
创建一个新的 Jekyll 站点
	jekyll new --skip-bundle ./  //--skip-bundle表示跳过bundle
修改Gemfile //使github-pages和github所支持的版本相一致
	打开 Jekyll 创建的 Gemfile。
	在以 开头的行的开头添加“#”gem "jekyll"以注释掉该行。、、、、、、、或者改为 github的 jekyll	3.9.0
	添加github-pages通过编辑开头的行宝石# gem "github-pages"。将此行更改为：
	gem "github-pages", "~> GITHUB-PAGES-VERSION", group: :jekyll_plugins
	将GITHUB-PAGES-VERSION替换为最新支持的github-pagesgem版本。您可以在此处找到此版本：https://pages.github.com/versions/
	保存并关闭 Gemfile。
	从命令行运行bundle install
（可选）对_config.yml文件进行任何必要的编辑。当存储库托管在子目录中时，这是相对路径所必需的。有关更多信息，请参阅“将子文件夹拆分为新存储库”。
	domain: my-site.github.io       # if you want to force HTTPS, specify the domain without the http at the start, e.g. example.com
	url: https://my-site.github.io  # the base hostname and protocol for your site, e.g. http://example.com
	baseurl: /REPOSITORY-NAME/      # place folder name if the site is served in a subfolde
本地运行您的 Jekyll 站点。
	Update the github-pages gem	//否则会提示很多依赖找不到
		如果您安装了 Bundler，请运行bundle update github-pages.
		如果您没有安装 Bundler，请运行gem update github-pages.
	bundle exec jekyll serve //默认只能本机访问
	bundle exec jekyll serve -w --host=0.0.0.0 //这样可以局域网访问
git 
	复制已有rsa文件或者重新生成
		rsa_id的权限必须为600	
		.ssh目录权限应为为 755 或者 700，不能是77x、777，需要保障other用户不能有w权限。
		rsa_id.pub及authorized_keys的权限一般为644；
	vi /etc/ssh/ssh_config
		Host github.com
        			IdentityFile ~/.ssh/id_rsa



Ubuntu20.04 LTS
安装ruby2.7和ruby2.7-dev
	apt search ruby2.7
	apt install ruby2.7 ruby2.7-dev
用ruby的gem安装bundler
	gem install bundler
创建Gemfile文件安装jekyll3.9
	cat >Gemfile<<"EOF"
	source "https://rubygems.org"
	gem "jekyll", "~> 3.9.0"
	EOF
	apt install make gcc //提示需要gcc
	bundler install 
安装git克隆原先配置好的库
	apt install git
	git clone https://github.com/YiguiDing/YiguiDing.github.io.git
或
创建一个新的 Jekyll 站点
	bundle exec jekyll new --skip-bundle ./ 		//--skip-bundle表示跳过bundle
修改Gemfile //使github-pages和github所支持的版本相一致
	打开 Jekyll 创建的 Gemfile。
	在以 开头的行的开头添加“#”gem "jekyll"以注释掉该行。、、、、、、、或者改为 github的 jekyll	3.9.0
	添加github-pages通过编辑开头的行宝石# gem "github-pages"。将此行更改为：
	gem "github-pages", "~> GITHUB-PAGES-VERSION", group: :jekyll_plugins
	将GITHUB-PAGES-VERSION替换为最新支持的github-pagesgem版本。您可以在此处找到此版本：https://pages.github.com/versions/
	保存并关闭 Gemfile。
安装Gemfile中所描述依赖
	cd YiguiDing.github.io
	apt install g++
	bundler install
局域网访问
	bundle exec jekyll serve -w --host=0.0.0.0 //局域网访问

